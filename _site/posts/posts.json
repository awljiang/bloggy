[
  {
    "path": "posts/2021-04-26-researchpaper/",
    "title": "Research Paper",
    "description": "Research Paper for \"DEGGED - Dynamic Exploration of Greenhouse Gas Emissions and its Determinants using R and Shiny\"",
    "author": [
      {
        "name": "Group 2 (Angeline Jiang, Dylan Wong, Selene Choong)",
        "url": {}
      }
    ],
    "date": "2021-04-26",
    "categories": [],
    "contents": "\r\nThe link to our full research paper can be found here: https://github.com/awljiang/bloggy/blob/master/Researchpaper.pdf\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-04-26-researchpaper/images/page1.PNG",
    "last_modified": "2021-04-26T00:48:01+08:00",
    "input_file": "researchpaper.utf8.md"
  },
  {
    "path": "posts/2021-04-25-poster/",
    "title": "Poster",
    "description": "Poster for \"DEGGED - Dynamic Exploration of Greenhouse Gas Emissions and its Determinants using R and Shiny\"",
    "author": [
      {
        "name": "Group 2 (Angeline Jiang, Dylan Wong, Selene Choong)",
        "url": {}
      }
    ],
    "date": "2021-04-25",
    "categories": [],
    "contents": "\r\nThe link to our poster can be found here: https://github.com/awljiang/bloggy/blob/master/Poster.pdf\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-04-25-poster/Poster.PNG",
    "last_modified": "2021-04-26T01:53:21+08:00",
    "input_file": "poster.utf8.md"
  },
  {
    "path": "posts/2021-04-24-degged-shiny-application/",
    "title": "DEGGED: Shiny Application",
    "description": "Dynamic Exploration of Greenhouse Gas Emissions and its Determinants using R and Shiny, DEGGED in short, is a web-enabled client-based analytics tool built on R Shiny that allows users to perform exploratory data analysis, ordinary least squares regression and panel data regression to examine the relationship between drivers and mitigation measures with greenhouse gas emission levels.",
    "author": [
      {
        "name": "Group 2 (Angeline Jiang, Dylan Wong, Selene Choong)",
        "url": {}
      }
    ],
    "date": "2021-04-24",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nShiny Application\r\nUser Guide for DEGGED\r\n1.0 Overview Page\r\n2.0 Data Overview\r\n3.0 Exploratory Data Analysis\r\n3.1 Descriptive Analysis\r\n3.2 Time Trend\r\n3.3 Correlation Matrix\r\n3.4 Scatterplot\r\n\r\n4.0 Ordinary Least Square (OLS) Regression\r\n4.1 Variable Selection\r\n4.2 Model Selected\r\n\r\n5.0 Panel Data Regression\r\n5.1 Model Building\r\n5.2 Tests for Assumptions\r\n\r\n\r\n\r\nShiny Application\r\nDEGGED is available on shinyapps.io.\r\nThe source code and data are made available at GitHub.com.\r\nUser Guide for DEGGED\r\nFrom the main navigation bar, select any of the following tabs to navigate and several tabs have further drop-downs. A quick overview of the different components can be found under the Overview Page.\r\n1.0 Overview Page\r\nThis page shows a short description of the application along with an overview of the components included in the application.\r\n\r\n\r\n\r\n2.0 Data Overview\r\nThis tab provides users with an overview of the data used. The selection options on the left panel apply to all the tabs within the tab.\r\n\r\n\r\n\r\nSelect the range of Years to be included\r\nSelect the countries of interest by clicking on each country to check or uncheck the selection. Click on the Select All button to select all the countries and the Deselect All button to clear all selection.\r\nClick “Apply changes” to filter the dataset.\r\nThe Data tab allows users to explore the data.\r\n\r\n\r\n\r\nSearch for values with the data using the Search bar\r\nSearch for rows with specific value for each column using the Search bar at the top of each column\r\nSelect the number of entries to display in 1 page\r\nClick to navigate to the respective pages, or previous and next page.\r\nAs for the Missing Data tab, it allows users to detect the presence of missing data for which country and which variable.\r\n3.0 Exploratory Data Analysis\r\nUnder the Exploratory Data Analysis tab of the main navigation bar, there are four drop-downs namely “Descriptive Analysis”, “Time Trend”, “Correlation Matrix” and “Scatterplot”. More details on each drop-down tab are detailed in the next few sections.\r\n3.1 Descriptive Analysis\r\nThis tab provides some descriptive statistics on the data. The selection options on the left panel apply to all the tabs within the tab.\r\n\r\n\r\n\r\nSelect the range of Years to be included.\r\nSelect the countries of interest by clicking on each country to check or uncheck the selection. Click on the Select All button to select all the countries and the Deselect All button to clear all selection.\r\nSelect the variables of interest. Multiple variables can be selected. To remove a variable from the selected list, use backspace on keyboard to delete it.\r\nSelect the number of bins for histogram plot.\r\nClick “Apply changes” to compute the output and plot the chart.\r\nTwo tabs are included as part of this tab - Summary Statistics and Histogram.\r\nFor the Histogram Chart, users can hover over the bars and a tooltip will appear containing the count of records with the indicated value.\r\n\r\n\r\n\r\n3.2 Time Trend\r\nThis tab shows the changes in trend across the years. The selection options on the left panel allows users to customise the view.\r\n\r\n\r\n\r\nSelect the range of Years to be included. The range of Years is recommended to be kept to a minimum range of at least 3 years to prevent the truncation of the years.\r\nSelect the countries of interest by clicking on each country to check or uncheck the selection. Click on the Select All button to select all the countries and the Deselect All button to clear all selection.\r\nSelect whether to display the time trends as individual countries or at the grouped level.\r\nThis option will only appear if “Individual” is selected for Individual or Grouped. Select the variable to be shown. Only 1 variable can be chosen to be displayed at each time.\r\nClick “Apply changes” to update the time trend plot.\r\nFor both the chart at Individual level, users can hover over points on each line and a tooltip will appear containing more information such as the country, year and value of the selected variable. As for the grouped level, users can hover over the middle circular points on each line and a tooltip will appear containing more information such as the mean, value of the variable and year.\r\n\r\n\r\n\r\n3.3 Correlation Matrix\r\nThis tab shows the correlation values between each variable pair. The selection options on the left panel allows users to customise the data to be included in the view.\r\n\r\n\r\n\r\nSelect the Year to be included. Only 1 year can be selected.\r\nSelect the countries of interest by clicking on each country to check or uncheck the selection. Click on the Select All button to select all the countries and the Deselect All button to clear all selection.\r\nSelect the variables of interest. Multiple variables can be selected. To remove a variable from the selected list, use backspace on keyboard to delete it.\r\nSelect the type of correlation coefficient is to be computed. The options are Pearson, Spearman and Robust.\r\nSelect the significance level (0.01, 0.05, 0.1) for the matrix.\r\nClick “Apply changes” to update the chart.\r\n3.4 Scatterplot\r\nThis tab allows users to determine the empirical relationship between two variables. The selection options on the left panel allows users to customise the variables included in the view of the plot.\r\n\r\n\r\n\r\nSelect the range of Years to be included.\r\nSelect the countries of interest by clicking on each country to check or uncheck the selection. Click on the Select All button to select all the countries and the Deselect All button to clear all selection.\r\nSelect the X-variable of interest. Only 1 variable can be selected.\r\nSelect the Y-variable of interest to be plotted against X. Only 1 variable can be selected.\r\nClick “Apply changes” to update the chart.\r\nUsers can also hover the chart elements (scatterplot points, line and band) and a tooltip containing information on the hovered point will be shown.\r\n4.0 Ordinary Least Square (OLS) Regression\r\nUnder the Ordinary Least Square Regression tab of the main navigation bar, there are two drop-downs namely “Variable Selection” and “Model Selected”. More details on each drop-down tab are detailed in the next few sections.\r\n4.1 Variable Selection\r\nThis tab allows users to explore the best subset of predictors to include in the model, among all possible subsets of predictors. The selection options on the left panel apply to all the tabs within the tab.\r\n\r\n\r\n\r\nSelect the dependent variable among the 4 greenhouse gas types. Only 1 selection is allowed.\r\nSelect the independent variables of interest. Multiple variables can be selected. To remove a variable from the selected list, use backspace on keyboard to delete it.\r\nSelect the range of Years to be included. Only 1 year is allowed to be selected.\r\nSelect the method to perform for variable selection among the 6 options - “Stepwise AIC forward”, “Stepwise AIC backward”, “Stepwise AIC both”, “Stepwise BIC forward”, “Stepwise BIC backward”, “Stepwise BIC both”\r\nClick “Apply changes”.\r\nThree tabs are included as part of this tab - Summary, Plot and Detailed Output. These tabs will display the outputs of the OLS model in different forms. User can toggle between the tabs to view their preferred way for interpreting the results of the variable selection.\r\nGuide has been included in each tab on how to interpret the output/ plot.\r\n4.2 Model Selected\r\nThis tab allows users to analyse the outputs of the selected model, along with validating any violation of assumptions. For the selection options on the left panel, the first 3 selections (Dependent Variable, Independent Variable and Year of Analysis) apply to all the tabs within the tab while the remaining selections allows users to select the preferred test option for each assumption.\r\n\r\n\r\n\r\nSelect the dependent variable among the 4 greenhouse gas types. Only 1 selection is allowed.\r\nSelect the independent variables of interest. Multiple variables can be selected. To remove a variable from the selected list, use backspace on keyboard to delete it.\r\nSelect the range of Years to be included. Only 1 year is allowed to be selected.\r\nSelect the preferred choice for heteroskedasticity test.\r\nSelect the preferred choice for residual diagnostics.\r\nSelect the preferred choice for collinear diagnostics.\r\nSelect the preferred choice for model fit assessment.\r\nClick “Apply changes”.\r\nSix tabs are included as part of this tab - Output (Table), Output (Plot), Heteroskedasticity Test, Residual Diagnostics, Collinear Diagnostics and Model Fit Assessment.\r\nThe first two tabs in this tab (Output in Table and Plot) will display the outputs of the selected OLS model in tabular and visualised forms. User can toggle between these tabs to view their preferred way for interpreting the results of the OLS model.\r\nThe Heteroskedasticity Test, Residual Diagnostics and Collinear Diagnostics tab display the respective outputs for each assumption test, while the Model Fit Assessment tab allows users to visually assess the fit of the OLS model.\r\nGuide has been included in each tab on how to interpret the output/ plot.\r\n5.0 Panel Data Regression\r\nUnder the Panel Data Regression tab of the main navigation bar, there are two drop-downs namely “Model Building” and “Tests for Assumptions”. More details on each drop-down tab are detailed in the next few sections.\r\n5.1 Model Building\r\nThis tab allows users to construct the panel data regression model of interest. The selection options on the left panel apply to all the tabs within the tab.\r\n\r\n\r\n\r\nSelect the range of Years to be included.\r\nSelect the countries of interest by clicking on each country to check or uncheck the selection. Click on the Select All button to select all the countries and the Deselect All button to clear all selection. For panel model, more than 1 country should be selected.\r\nSelect the dependent variable among the 4 greenhouse gas types. Only 1 selection is allowed.\r\nSelect the independent variables of interest. Multiple variables can be selected. To remove a variable from the selected list, use backspace on keyboard to delete it.\r\nSelect the model type between “Fixed Effect” and “Random Effect” to run.\r\nSelect the effects of “Individual”, “Time” or “Two-ways” to use for the model.\r\nThis option will only appear if “Random Effect” is selected for Model Type. Select the computation method among the 4 methods for the random model.\r\nThis option will only appear if “Random Effect” is selected for Model Type, and is meant for the Model Fit Assessment. Select the type for the Lagrange Multiplier Test among the 3 types.\r\nClick “Apply changes” to generate the output of the constructed panel model.\r\nFour tabs are included as part of this tab - Summary, Plot, Detailed Output and Model Fit Assessment.\r\nThe first three tabs in this tab (Summary, Plot and Detailed Output) will display the outputs of the constructed panel model in different forms. User can toggle between the tabs to view their preferred way for interpreting the results of the panel model.\r\nThe Model Fit Assessment tab performs the relevant statistical tests to determine the most appropriate model type. When “Fixed Effect” is selected for Model Type, Hausman Test and Chow Test of Poolability will be performed to assess fixed effect against random and pooled effect respectively. When “Random Effect” is selected for Model Type, Hausman Test and Lagrange Multiplier Test will be performed to assess random effect against fixed and pooled effect respectively.\r\nGuide has been included in each tab on how to interpret the output/ plot.\r\n5.2 Tests for Assumptions\r\nThis tab allows users to assess if the data complies with the assumptions of panel data regression. The selection options on the left panel allows users to select the preferred test option for each assumption.\r\n\r\n\r\n\r\nSelect the preferred plot for assessing any violation of normality assumption. Users can choose between “Residual QQ-plot”, “Residual vs Fitted Value Plot” or “Residual Histogram”.\r\nSelect the preferred statistical test for assessing preference of any serial correlation. Users can choose between “Unobserved Effect Test”, “Locally Robust Test” or “Breusch-Godfrey/Wooldridge Test”.\r\nSelect between statistical test or plot for assessing reference of heteroscedasticity. Users can choose between “Breusch-Pagan Test” or “Residual vs Fitted Value Plot”,\r\nClick “Apply changes” to generate the output of each selected test.\r\nThe respective output for each assumption test will be shown in the respective tab on the right. Guide has been included in each tab on how to interpret the output/ plot.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-04-24-degged-shiny-application/images/overview.JPG",
    "last_modified": "2021-04-26T00:27:09+08:00",
    "input_file": "degged-shiny-application.utf8.md"
  },
  {
    "path": "posts/2021-03-19-panel-data-analysis/",
    "title": "Determining the Drivers of Greenhouse Gas Emissions for European Countries using Panel Data Analysis",
    "description": "This post details the preliminary investigation on the drivers of greenhouse gas emissions in European countries through the use of panel data analysis in R. The assignment is part of the Shiny-based Visual Analytics Application project undertaken for the course of ISSS608 Visual Analytics and Applications offered by SMU MITB.",
    "author": [
      {
        "name": "Choong Shi Lian Selene",
        "url": "https://www.linkedin.com/in/selenechoong/"
      }
    ],
    "date": "2021-03-19",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1.0 Overview\r\n1.1 Background\r\n1.2 Purpose of Visualisation\r\n\r\n2.0 Step-by-step Preparation\r\n2.1 Installing and launching R packages\r\n2.2 Data Preparation\r\n2.2.1 The Data\r\n2.2.2 Importing dataset into R\r\n2.2.3 Reviewing the imported dataset\r\n\r\n2.3 Exploring Correlation betwen Variables in the Panel Data\r\n2.4 Panel Data Modelling\r\n2.4.1 Visualising Panel Modelling Output\r\n2.4.2 Fixed Effects Model\r\n2.4.3 Random Effects Model\r\n\r\n2.5 Tests for Assumptions\r\n2.5.1 Test of Normality\r\n2.5.2 Test of Serial Correlation\r\n2.5.3 Test for Heteroscedasticity\r\n\r\n2.6 Model Selection\r\n2.6.1 Pooled OLS or Fixed Effect Model\r\n2.6.2 Fixed Effect or Random Effect Model\r\n2.6.3 Random Effect or Pooled OLS Model\r\n\r\n\r\n3.0 Final Components of Visualisation\r\n3.1 Storyboard for Proposed Design\r\n3.2 Interactivity\r\n3.3 Reflections on Visualisation and Interactivity\r\n\r\n\r\n1.0 Overview\r\n1.1 Background\r\nClimate change is affecting every parts of the world, causing dire consequences from more frequent extreme weather events to rising sea levels. In December 2020, the European Union (EU) leaders committed to an ambitious goal of reducing greenhouse gases by 55% by 2030 to tackle climate change. The European Union has been collating climate change-related data across various domains covering greenhouse gas (GHG) emission levels, drivers and mitigation of these emissions, and publishing the data on Eurostat. The statistics allowed for analysing and monitoring of climate change, which is essential for tracking EU’s progress towards achieving its 2030 goal.\r\n1.2 Purpose of Visualisation\r\nPanel data analysis is a statistical method to analyse longitudinal data that contains observations with multiple dimensions measured repeatedly over time. Many papers have been published by different authors on investigating the determinants of greenhouse gas emissions in the EU through panel data models. Some examples of these papers are listed below:\r\nGonzález-Sánchez, M., & Martín-Ortega, J. (2020). Greenhouse Gas Emissions Growth in Europe: A Comparative Analysis of Determinants. Sustainability (Basel, Switzerland), 12(3), 1012–. https://doi.org/10.3390/su12031012\r\nDogan, E., & Seker, F. (2016). An investigation on the determinants of carbon emissions for OECD countries: empirical evidence from panel models robust to heterogeneity and cross-sectional dependence. Environmental Science and Pollution Research International, 23(14), 14646–14655. https://doi.org/10.1007/s11356-016-6632-2\r\nAzevedo, I., Horta, I., & Leal, V. (2017). Analysis of the relationship between local climate change mitigation actions and greenhouse gas emissions – Empirical insights. Energy Policy, 111, 204–213. https://doi.org/10.1016/j.enpol.2017.09.032\r\nTabular forms were often adopted when presenting the findings from the panel models as well as the results of the various validation tests performed for the panel models. This exercise aims to visualise the results of the panel models and the validation tests interactively, to allow readers to easily interpret the results and identify the determinants of greenhouse gas emissions for each EU country.\r\n2.0 Step-by-step Preparation\r\n2.1 Installing and launching R packages\r\nIn this exercise, a list of panel data modelling and visualisation packages will be installed and launched. Besides these packages, tidyverse will also be installed and launched for data wrangling and preparation. The code chunk below installs the required packages and loads them into the RStudio Environment.\r\ntidyverse for data extraction, wrangling and exploration\r\nplm for estimating and validating panel data analysis\r\nggplot2 and ggstatplot for creating visualisations\r\ncolorspace for selection of colours and palettes for visualisation\r\nExPanDaR for exploratory data analysis for panel data\r\nbayesforecast for plotting of partial autocorrelation plots for serial correlation test\r\ncar for plotting scatterplot for test of poolability\r\ngplots for plotting heterogeneity plots for Hausman test\r\n\r\n# Creating a list of the names of packages required\r\npackages <- c(\"tidyverse\", \"plm\", \"ggplot2\", \"ggstatsplot\", \"colorspace\", \"ExPanDaR\", \r\n              \"bayesforecast\", \"car\", \"gplots\")\r\n\r\n# Installing and launching the packages\r\nfor (p in packages){\r\n  if (!require(p,character.only=T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only=T)\r\n}\r\n\r\n2.2 Data Preparation\r\n2.2.1 The Data\r\nDatasets used in this exercise is obtained from Eurostat (https://ec.europa.eu/eurostat), the database with European statistics maintained by the statistical office of the European Union. The following datasets have been used - Greenhouse gas emissions, Gross Domestic Product (GDP), Final energy intensity, Fuel mix, Carbon intensity, Share of energy from renewable sources, Environmental taxes by economic activity, Liquid biofuels production capacities, Solar thermal collectors’ surface and Heat pumps - technical characteristics by technologies.\r\nIndividual datasets have been wrangled and merged into one consolidated csv dataset. More details on the data preparation process can be found on the Data Preparation post. The final consolidated dataset that was used in this exercise can be found on our group’s github.\r\n2.2.2 Importing dataset into R\r\nData will be imported into RStudio environment by using read_csv() of readr, and data will be imported as a tibble dataframe.\r\n\r\nGHG_EU <- read_csv(\"data/GHGproj_data.csv\")\r\n\r\n2.2.3 Reviewing the imported dataset\r\nNext, we will examine the structure of the dataframe using glimpse() of dplyr.\r\n\r\ndplyr::glimpse(GHG_EU)\r\nRows: 324\r\nColumns: 15\r\n$ Country          <chr> \"European Union - 27 countries (from 2020)\"~\r\n$ Year             <dbl> 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2~\r\n$ GHG_emissions    <dbl> 4188244, 4075283, 3996645, 3912623, 3776464~\r\n$ CO2_emissions    <dbl> 3443914, 3338307, 3262594, 3181485, 3046141~\r\n$ CH4_emissions    <dbl> 427117.5, 419634.2, 416826.8, 411161.3, 406~\r\n$ NO2_emissions    <dbl> 219323.1, 216186.6, 213789.2, 214272.4, 216~\r\n$ GDP              <dbl> 10977298, 11321811, 11388518, 11517119, 117~\r\n$ Final_EI         <dbl> 92.24, 85.89, 84.28, 83.56, 77.43, 75.05, 7~\r\n$ Fuel_mix         <dbl> 2.80, 2.88, 2.78, 2.67, 2.62, 2.57, 2.54, 2~\r\n$ Carbon_intensity <dbl> 91.9, 91.5, 90.9, 89.5, 88.3, 88.7, 88.0, 8~\r\n$ Renewables_share <dbl> 14.421, 14.551, 16.023, 16.697, 17.463, 17.~\r\n$ Envt_taxes       <dbl> 259023.0, 271901.0, 278204.4, 284120.8, 291~\r\n$ Liquid_biofuels  <dbl> 29688.79, 28710.54, 28421.94, 29751.46, 291~\r\n$ Solar_thermal    <dbl> 34487.96, 37949.15, 40587.31, 43245.73, 454~\r\n$ Heat_pumps       <dbl> 31200.12, 43941.43, 48603.18, 53297.87, 799~\r\n\r\nReviewing the dataframe showed that it contains all the listed datasets above as individual columns with data spanning from Year 2010 to 2018. Apart from overall greenhouse gas emissions (GHG_emissions), there was also data on individual gases such as carbon dioxide (CO2_emissions), methane (CH4_emissions) and nitrogen dioxide (NO2_emissions). Further inspection also showed that:\r\nThe dataframe contains data at both the regional and country levels. The regional levels (i.e. “European Union - 27 countries (from 2020)”, “European Union - 28 countries (2013-2020) and Iceland under the Kyoto Protocol” and “European Union - 28 countries (2013-2020)”) will not be used in this analysis. Hence, filter() of dplyr will be used to keep only the relevant country data.\r\nGermany was labelled with a long name of “Germany (until 1990 former territory of the FRG)” which will be recoded using a combination of mutate() and recode() of dplyr.\r\n\r\n# Filtering and recoding the dataframe\r\nGHG_EU_cleaned <- GHG_EU %>% \r\n  # remove regional levels\r\n  filter(!Country %in% c(\"European Union - 27 countries (from 2020)\", \r\n                         \"European Union - 28 countries (2013-2020) and Iceland under the Kyoto Protocol\", \r\n                         \"European Union - 28 countries (2013-2020)\")) %>% \r\n  # recode Germany label\r\n  mutate(Country = dplyr::recode(Country, \"Germany (until 1990 former territory of the FRG)\" = \"Germany\"))\r\n\r\n\r\n# Checking the cleaned dataframe\r\nglimpse(GHG_EU_cleaned)\r\nRows: 297\r\nColumns: 15\r\n$ Country          <chr> \"Belgium\", \"Belgium\", \"Belgium\", \"Belgium\",~\r\n$ Year             <dbl> 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2~\r\n$ GHG_emissions    <dbl> 134315.86, 123782.51, 120922.50, 120949.31,~\r\n$ CO2_emissions    <dbl> 114561.03, 105046.06, 102428.75, 102674.40,~\r\n$ CH4_emissions    <dbl> 8794.36, 8530.82, 8392.13, 8236.66, 8118.96~\r\n$ NO2_emissions    <dbl> 7587.12, 6374.29, 6306.82, 6146.26, 6181.75~\r\n$ GDP              <dbl> 363140.1, 375967.8, 386174.7, 392880.0, 403~\r\n$ Final_EI         <dbl> 114.09, 103.22, 99.68, 102.20, 92.09, 91.67~\r\n$ Fuel_mix         <dbl> 1.39, 1.41, 1.37, 1.57, 1.65, 1.64, 1.54, 1~\r\n$ Carbon_intensity <dbl> 90.6, 87.7, 90.7, 86.9, 85.8, 90.1, 83.6, 8~\r\n$ Renewables_share <dbl> 6.002, 6.275, 7.089, 7.650, 8.043, 8.026, 8~\r\n$ Envt_taxes       <dbl> 8879.00, 9668.40, 9735.00, 9905.50, 10254.5~\r\n$ Liquid_biofuels  <dbl> 1374.000, 1374.000, 1105.800, 1105.145, 110~\r\n$ Solar_thermal    <dbl> 371.000, 420.000, 527.000, 570.000, 614.600~\r\n$ Heat_pumps       <dbl> 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0~\r\n\r\nTo determine if the data frame is a balanced or unbalanced panel data, a quick check of missing values was performed using prepare_missing_values_graph() of ExPanDaR. As the plot shows that there is some missing data, unbalanced panel data analysis will be performed.\r\n\r\nExPanDaR::prepare_missing_values_graph(GHG_EU_cleaned, ts_id = \"Year\")\r\n\r\n\r\n2.3 Exploring Correlation betwen Variables in the Panel Data\r\nPrior to running the panel data regression, relationship between the variables in the dataframe was first investigated using ggcorrmat() of “ggstatsplot” to identify multicollinearity issues among the predictor variables.\r\n\r\nggstatsplot::ggcorrmat(data = GHG_EU_cleaned, \r\n          cor.vars = c(GHG_emissions:Heat_pumps), \r\n          cor.vars.names = c(\"GHG emissions\", \"CO2 emissions\", \"CH4 emissions\", \"NO2 emissions\", \r\n                             \"GDP\", \"final energy intensity\", \"fuel mix\", \"carbon intensity\", \r\n                             \"renewable energy share\", \"environmental taxes\", \"liquid biofuels\", \r\n                             \"solar thermal\", \"heat pumps\"), \r\n          title = \"Relationship between GHG and drivers/ mitigation variables\", \r\n          colors = divergingx_hcl(3, palette = \"TealRose\", rev = TRUE)) +\r\n  theme(axis.text.y = element_text(size = 10), \r\n        axis.text.x = element_text(angle = 90, hjust = 1, size = 10))\r\n\r\n\r\nCorrelation matrix plot showed that GDP and Environmental Taxes were highly correlated with each other. As GDP has a stronger correlation with the outcome variables, this variable will be included instead of Environmental Taxes. For the purpose of this exercise, we will only focus on the outcome variable of GHG_emissions, along with the following list of predictor variables - GDP, Final_EI, Fuel_mix, Carbon_intensity, Renewables_share, Liquid_biofuels, Solar_thermal and Heat_pumps.\r\nThe column Envt_taxes will be excluded from the dataframe using select() of dplyr. Column to dropped can be indicated with a minus sign as shown below.\r\n\r\n# Removing the correlated variable of Environmental Taxes\r\nGHG_EU_final <- GHG_EU_cleaned %>% \r\n  select(-Envt_taxes)\r\n\r\n# Inspecting the remaining columns\r\ndplyr::glimpse(GHG_EU_final)\r\nRows: 297\r\nColumns: 14\r\n$ Country          <chr> \"Belgium\", \"Belgium\", \"Belgium\", \"Belgium\",~\r\n$ Year             <dbl> 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2~\r\n$ GHG_emissions    <dbl> 134315.86, 123782.51, 120922.50, 120949.31,~\r\n$ CO2_emissions    <dbl> 114561.03, 105046.06, 102428.75, 102674.40,~\r\n$ CH4_emissions    <dbl> 8794.36, 8530.82, 8392.13, 8236.66, 8118.96~\r\n$ NO2_emissions    <dbl> 7587.12, 6374.29, 6306.82, 6146.26, 6181.75~\r\n$ GDP              <dbl> 363140.1, 375967.8, 386174.7, 392880.0, 403~\r\n$ Final_EI         <dbl> 114.09, 103.22, 99.68, 102.20, 92.09, 91.67~\r\n$ Fuel_mix         <dbl> 1.39, 1.41, 1.37, 1.57, 1.65, 1.64, 1.54, 1~\r\n$ Carbon_intensity <dbl> 90.6, 87.7, 90.7, 86.9, 85.8, 90.1, 83.6, 8~\r\n$ Renewables_share <dbl> 6.002, 6.275, 7.089, 7.650, 8.043, 8.026, 8~\r\n$ Liquid_biofuels  <dbl> 1374.000, 1374.000, 1105.800, 1105.145, 110~\r\n$ Solar_thermal    <dbl> 371.000, 420.000, 527.000, 570.000, 614.600~\r\n$ Heat_pumps       <dbl> 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0~\r\n\r\n2.4 Panel Data Modelling\r\nThe plm package will be used for building the panel data models. Multiple arguments can be changed when using the plm() function of the package to allow us to estimate different basic panel models and introduce individual and/or time effects. For the random effects model, the estimator of the parameter can also be varied. The arguments which we will cover and their respective values are listed below.\r\nArgument\r\nValue\r\nmodel\r\n- the fixed effects model (“within”)  - the error components model (“random”)  * the pooling model is covered in a separate post\r\neffect\r\n- individual effect (“individual”)  - time effect (“time”)  - two-ways effects (“twoways”)\r\nrandom.method\r\n- from Swamy and Arora (“swar”)  - from Wallace and Hussain (“walhus”)  - from Amemiya (“amemiya”)  - Nerlove (“nerlove”)\r\nEach of the model sub-sections below will display the code chunks to run the individual models, where each pane will show the variation for the relevant effects (and random.method for random effects model). All of these fields will be dynamic in the final R Shiny application.\r\n2.4.1 Visualising Panel Modelling Output\r\nApart from presenting the panel modelling results in tabular forms, visualisations will be explored using the ggstatsplot package. The code chunks to visualise the results of the models are shown in each pane.\r\n2.4.2 Fixed Effects Model\r\nThe fixed effects model takes into consideration individual differences over time. The model assumes correlation between the individuals’ error term and predictor variables, and no correlation between time-invariant and the individuals’ other characteristics. Model argument in the plm() of plm will be set as “within” to run the fixed effects model.\r\n\r\n\r\n\r\n\r\nIndividual Effect\r\nSet by using the effect argument to be “individual”, the individual effect captures effects that are specific to some panel unit but constant over time.\r\n\r\n# Running the model\r\nGHG_fe_indiv <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                    Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                    data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                    model = \"within\", effect = \"individual\")\r\n\r\n# Generating the dot-and-whisker plot for regression coefficient estimates\r\nggstatsplot::ggcoefstats(x = GHG_fe_indiv, output = \"plot\") + \r\n  scale_y_discrete(labels=c(\"Final_EI\" = \"final energy intensity\", \r\n                            \"Fuel_mix\" = \"fuel mix\", \r\n                            \"Carbon_intensity\" = \"carbon intensity\", \r\n                            \"Renewables_share\" = \"renewable energy share\", \r\n                            \"Liquid_biofuels\" = \"liquid biofuels\", \r\n                            \"Solar_thermal\" = \"solar thermal\", \r\n                            \"Heat_pumps\" = \"heat pumps\"))\r\n\r\n\r\nThe detailed statistical output of the fixed effects model with individual effect is shown below.\r\n\r\nsummary(GHG_fe_indiv)\r\nOneway (individual) effect Within Model\r\n\r\nCall:\r\nplm(formula = GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n    Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps, \r\n    data = GHG_EU_final, effect = \"individual\", model = \"within\", \r\n    index = c(\"Country\", \"Year\"))\r\n\r\nUnbalanced Panel: n = 30, T = 8-9, N = 269\r\n\r\nResiduals:\r\n     Min.   1st Qu.    Median   3rd Qu.      Max. \r\n-42457.34  -2761.59   -203.14   2866.93  44102.44 \r\n\r\nCoefficients:\r\n                    Estimate  Std. Error t-value  Pr(>|t|)    \r\nGDP              -1.0507e-01  1.2504e-02 -8.4029 4.471e-15 ***\r\nFinal_EI         -9.0080e+01  1.1388e+02 -0.7910   0.42976    \r\nFuel_mix         -1.2350e+03  1.2805e+03 -0.9645   0.33580    \r\nCarbon_intensity  3.3722e+02  1.8131e+02  1.8599   0.06417 .  \r\nRenewables_share -1.1591e+03  4.6913e+02 -2.4707   0.01421 *  \r\nLiquid_biofuels   2.7039e+00  3.1899e+00  0.8476   0.39751    \r\nSolar_thermal     7.9766e-01  2.1585e+00  0.3695   0.71206    \r\nHeat_pumps       -1.5836e-01  6.2466e-02 -2.5351   0.01190 *  \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nTotal Sum of Squares:    4.2266e+10\r\nResidual Sum of Squares: 2.1551e+10\r\nR-Squared:      0.49012\r\nAdj. R-Squared: 0.40845\r\nF-statistic: 27.7557 on 8 and 231 DF, p-value: < 2.22e-16\r\n\r\nTime Effect\r\nSet by using the effect argument to be “time”, the time effect captures effects that are specific to some time period but constant over panel units.\r\n\r\n# Running the model\r\nGHG_fe_time <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                   Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                   data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                   model = \"within\", effect = \"time\")\r\n\r\n# Generating the dot-and-whisker plot for regression coefficient estimates\r\nggstatsplot::ggcoefstats(x = GHG_fe_time, output = \"plot\") + \r\n  scale_y_discrete(labels=c(\"Final_EI\" = \"final energy intensity\", \r\n                            \"Fuel_mix\" = \"fuel mix\", \r\n                            \"Carbon_intensity\" = \"carbon intensity\", \r\n                            \"Renewables_share\" = \"renewable energy share\", \r\n                            \"Liquid_biofuels\" = \"liquid biofuels\", \r\n                            \"Solar_thermal\" = \"solar thermal\", \r\n                            \"Heat_pumps\" = \"heat pumps\"))\r\n\r\n\r\nThe detailed statistical output of the fixed effects model with time effect is shown below.\r\n\r\nsummary(GHG_fe_time)\r\nOneway (time) effect Within Model\r\n\r\nCall:\r\nplm(formula = GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n    Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps, \r\n    data = GHG_EU_final, effect = \"time\", model = \"within\", index = c(\"Country\", \r\n        \"Year\"))\r\n\r\nUnbalanced Panel: n = 30, T = 8-9, N = 269\r\n\r\nResiduals:\r\n      Min.    1st Qu.     Median    3rd Qu.       Max. \r\n-114909.67  -20611.11     462.18   16552.07  163071.93 \r\n\r\nCoefficients:\r\n                    Estimate  Std. Error t-value  Pr(>|t|)    \r\nGDP               2.1256e-01  6.3568e-03 33.4385 < 2.2e-16 ***\r\nFinal_EI          1.0445e+02  8.5149e+01  1.2267 0.2210957    \r\nFuel_mix          1.3751e+04  6.8356e+02 20.1168 < 2.2e-16 ***\r\nCarbon_intensity  5.9675e+01  2.3322e+02  0.2559 0.7982617    \r\nRenewables_share -7.3854e+02  1.7705e+02 -4.1713 4.170e-05 ***\r\nLiquid_biofuels   1.9553e+01  3.2135e+00  6.0847 4.316e-09 ***\r\nSolar_thermal     7.0885e+00  1.3678e+00  5.1824 4.493e-07 ***\r\nHeat_pumps       -7.4596e-01  2.1455e-01 -3.4769 0.0005972 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nTotal Sum of Squares:    1.1008e+13\r\nResidual Sum of Squares: 3.3788e+11\r\nR-Squared:      0.96931\r\nAdj. R-Squared: 0.96736\r\nF-statistic: 994.756 on 8 and 252 DF, p-value: < 2.22e-16\r\n\r\nTwoways Effects\r\nSet by using the effect argument to be “twoways”, the two-ways effect captures both the individual and time effects.\r\n\r\n# Running the model\r\nGHG_fe_twoways <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                      Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                      data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                      model = \"within\", effect = \"twoways\")\r\n\r\n# Generating the dot-and-whisker plot for regression coefficient estimates\r\nggstatsplot::ggcoefstats(x = GHG_fe_twoways, output = \"plot\") + \r\n  scale_y_discrete(labels=c(\"Final_EI\" = \"final energy intensity\", \r\n                            \"Fuel_mix\" = \"fuel mix\", \r\n                            \"Carbon_intensity\" = \"carbon intensity\", \r\n                            \"Renewables_share\" = \"renewable energy share\", \r\n                            \"Liquid_biofuels\" = \"liquid biofuels\", \r\n                            \"Solar_thermal\" = \"solar thermal\", \r\n                            \"Heat_pumps\" = \"heat pumps\"))\r\n\r\n\r\nThe detailed statistical output of the fixed effects model with two-ways effect is shown below.\r\n\r\nsummary(GHG_fe_twoways)\r\nTwoways effects Within Model\r\n\r\nCall:\r\nplm(formula = GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n    Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps, \r\n    data = GHG_EU_final, effect = \"twoways\", model = \"within\", \r\n    index = c(\"Country\", \"Year\"))\r\n\r\nUnbalanced Panel: n = 30, T = 8-9, N = 269\r\n\r\nResiduals:\r\n    Min.  1st Qu.   Median  3rd Qu.     Max. \r\n-43655.7  -2513.8    222.0   2937.6  40990.0 \r\n\r\nCoefficients:\r\n                    Estimate  Std. Error t-value  Pr(>|t|)    \r\nGDP                -0.112480    0.012345 -9.1117 < 2.2e-16 ***\r\nFinal_EI         -279.609538  151.894623 -1.8408  0.066978 .  \r\nFuel_mix         -270.961391 1296.307724 -0.2090  0.834619    \r\nCarbon_intensity  429.393559  183.151106  2.3445  0.019933 *  \r\nRenewables_share -933.873206  530.500515 -1.7604  0.079717 .  \r\nLiquid_biofuels     1.739240    3.175787  0.5477  0.584476    \r\nSolar_thermal       2.301794    2.200535  1.0460  0.296686    \r\nHeat_pumps         -0.191680    0.062000 -3.0916  0.002244 ** \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nTotal Sum of Squares:    3.3113e+10\r\nResidual Sum of Squares: 1.9787e+10\r\nR-Squared:      0.40243\r\nAdj. R-Squared: 0.28184\r\nF-statistic: 18.7719 on 8 and 223 DF, p-value: < 2.22e-16\r\n\r\n\r\n(Note: To run the model with the individual gases as the outcome variable, the term y in the formula argument of plm() can be replaced with the variable name of the other gases. Visualisation of regression coefficient estimates can be performed using the same code chunk and replacing the x value in the ggcoefstats().)\r\n2.4.3 Random Effects Model\r\nThe random effects model builds on the fixed effects model, but considers unique errors to be uncorrelated with the regressors. The model assumes that the variations across individuals to be random and uncorrelated with the predictor variables. Model argument in the plm() of plm will be set as “random” to run the random effects model.\r\nThe default for the effect argument (i.e. individual) will be used in the code chunks shown but the other two effects of time and twoways will be tested to check on the model feasibility.\r\n\r\nSwamy-Arora\r\nSet by using the random.method argument to be “swar”, the Swamy-Arora estimator of the error component variances uses error terms from the fixed effects model and the residuals from the “between” regression model.\r\n\r\n# Running the model\r\nGHG_re_swar <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                   Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                   data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                   model = \"random\", effect = \"individual\", random.method = \"swar\")\r\n\r\n# Generating the dot-and-whisker plot for regression coefficient estimates\r\nggstatsplot::ggcoefstats(x = GHG_re_swar, output = \"plot\", palette = \"Paired\") + \r\n  scale_y_discrete(labels=c(\"Final_EI\" = \"final energy intensity\", \r\n                            \"Fuel_mix\" = \"fuel mix\", \r\n                            \"Carbon_intensity\" = \"carbon intensity\", \r\n                            \"Renewables_share\" = \"renewable energy share\", \r\n                            \"Liquid_biofuels\" = \"liquid biofuels\", \r\n                            \"Solar_thermal\" = \"solar thermal\", \r\n                            \"Heat_pumps\" = \"heat pumps\"))\r\n\r\n\r\nThe detailed statistical output of the random effects model using Swamy-Arora estimator is shown below.\r\n\r\nsummary(GHG_re_swar)\r\nOneway (individual) effect Random Effect Model \r\n   (Swamy-Arora's transformation)\r\n\r\nCall:\r\nplm(formula = GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n    Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps, \r\n    data = GHG_EU_final, effect = \"individual\", model = \"random\", \r\n    random.method = \"swar\", index = c(\"Country\", \"Year\"))\r\n\r\nUnbalanced Panel: n = 30, T = 8-9, N = 269\r\n\r\nEffects:\r\n                    var   std.dev share\r\nidiosyncratic  93293029      9659 0.095\r\nindividual    892736699     29879 0.905\r\ntheta:\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n 0.8864  0.8929  0.8929  0.8927  0.8929  0.8929 \r\n\r\nResiduals:\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n -48396   -9617   -3473     -71    2097  127058 \r\n\r\nCoefficients:\r\n                    Estimate  Std. Error z-value  Pr(>|z|)    \r\n(Intercept)       8.6529e+04  4.0103e+04  2.1576  0.030955 *  \r\nGDP               7.9382e-02  1.7649e-02  4.4980 6.861e-06 ***\r\nFinal_EI          1.7900e+02  1.6714e+02  1.0710  0.284172    \r\nFuel_mix          3.1379e+03  2.0714e+03  1.5148  0.129812    \r\nCarbon_intensity  2.7139e+02  3.3680e+02  0.8058  0.420365    \r\nRenewables_share -2.3663e+03  5.6548e+02 -4.1846 2.857e-05 ***\r\nLiquid_biofuels   2.7292e+01  5.8177e+00  4.6912 2.716e-06 ***\r\nSolar_thermal     1.8141e+00  3.3903e+00  0.5351  0.592585    \r\nHeat_pumps       -3.5387e-01  1.2767e-01 -2.7716  0.005577 ** \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nTotal Sum of Squares:    1.7658e+11\r\nResidual Sum of Squares: 1.0435e+11\r\nR-Squared:      0.40906\r\nAdj. R-Squared: 0.39088\r\nChisq: 176.611 on 8 DF, p-value: < 2.22e-16\r\n\r\nBoth time effect and twoways effect models were not applicable when performing estimation of the variance of the error components using the Swamy-Arora estimator.\r\nWallace-Hussain\r\nSet by using the random.method argument to be “walhus”, the Wallace-Hussain estimator of the error component variances uses error terms from the pooled ordinary least squares (OLS) model.\r\n\r\n# Running the model\r\nGHG_re_walh <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                   Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                   data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                   model = \"random\", effect = \"individual\", random.method = \"walhus\")\r\n\r\n# Generating the dot-and-whisker plot for regression coefficient estimates\r\nggstatsplot::ggcoefstats(x = GHG_re_walh, output = \"plot\", palette = \"Paired\") + \r\n  scale_y_discrete(labels=c(\"Final_EI\" = \"final energy intensity\", \r\n                            \"Fuel_mix\" = \"fuel mix\", \r\n                            \"Carbon_intensity\" = \"carbon intensity\", \r\n                            \"Renewables_share\" = \"renewable energy share\", \r\n                            \"Liquid_biofuels\" = \"liquid biofuels\", \r\n                            \"Solar_thermal\" = \"solar thermal\", \r\n                            \"Heat_pumps\" = \"heat pumps\"))\r\n\r\n\r\nThe detailed statistical output of the random effects model using Wallace-Hussian estimator is shown below.\r\n\r\nsummary(GHG_re_walh)\r\nOneway (individual) effect Random Effect Model \r\n   (Wallace-Hussain's transformation)\r\n\r\nCall:\r\nplm(formula = GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n    Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps, \r\n    data = GHG_EU_final, effect = \"individual\", model = \"random\", \r\n    random.method = \"walhus\", index = c(\"Country\", \"Year\"))\r\n\r\nUnbalanced Panel: n = 30, T = 8-9, N = 269\r\n\r\nEffects:\r\n                    var   std.dev share\r\nidiosyncratic 691216711     26291 0.451\r\nindividual    842778598     29031 0.549\r\ntheta:\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n 0.6951  0.7110  0.7110  0.7105  0.7110  0.7110 \r\n\r\nResiduals:\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n-102296   -9860   -1841     -43    6999  160971 \r\n\r\nCoefficients:\r\n                    Estimate  Std. Error z-value  Pr(>|z|)    \r\n(Intercept)      -3.8026e+04  3.2859e+04 -1.1573  0.247168    \r\nGDP               1.7490e-01  1.1669e-02 14.9882 < 2.2e-16 ***\r\nFinal_EI          3.0786e+02  1.3040e+02  2.3608  0.018235 *  \r\nFuel_mix          1.0126e+04  1.4496e+03  6.9855 2.839e-12 ***\r\nCarbon_intensity  5.0561e+02  3.1500e+02  1.6051  0.108463    \r\nRenewables_share -1.3148e+03  3.6487e+02 -3.6035  0.000314 ***\r\nLiquid_biofuels   3.0984e+01  5.4268e+00  5.7094 1.134e-08 ***\r\nSolar_thermal     3.3201e+00  2.4877e+00  1.3346  0.182009    \r\nHeat_pumps       -5.1307e-01  1.5693e-01 -3.2695  0.001077 ** \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nTotal Sum of Squares:    1.0148e+12\r\nResidual Sum of Squares: 1.6446e+11\r\nR-Squared:      0.83795\r\nAdj. R-Squared: 0.83296\r\nChisq: 1330.24 on 8 DF, p-value: < 2.22e-16\r\n\r\nBoth time effect and twoways effect models could be used when performing estimation of the variance of the error components using the Wallace-Hussain estimator. The code chunks to run the models are shown below.\r\n\r\n# Time Effect\r\nGHG_re_time_walh <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                        Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                        data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                        model = \"random\", effect = \"time\", random.method = \"walhus\")\r\n# Two-ways Effect\r\nGHG_re_twoways_walh <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                           Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                           data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                           model = \"random\", effect = \"twoways\", random.method = \"walhus\")\r\n\r\nAmemiya\r\nSet by using the random.method argument to be “amemiya”, the Amemiya estimator of the error component variances uses error terms from the fixed effect model and estimated individual-specific component.\r\n\r\n# Running the model\r\nGHG_re_amemiya <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                      Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                      data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                      model = \"random\", effect = \"individual\", random.method = \"amemiya\")\r\n\r\n# Generating the dot-and-whisker plot for regression coefficient estimates\r\nggstatsplot::ggcoefstats(x = GHG_re_amemiya, output = \"plot\", palette = \"Paired\") + \r\n  scale_y_discrete(labels=c(\"Final_EI\" = \"final energy intensity\", \r\n                            \"Fuel_mix\" = \"fuel mix\", \r\n                            \"Carbon_intensity\" = \"carbon intensity\", \r\n                            \"Renewables_share\" = \"renewable energy share\", \r\n                            \"Liquid_biofuels\" = \"liquid biofuels\", \r\n                            \"Solar_thermal\" = \"solar thermal\", \r\n                            \"Heat_pumps\" = \"heat pumps\"))\r\n\r\n\r\nThe detailed statistical output of the random effects model using Amemiya estimator is shown below.\r\n\r\nsummary(GHG_re_amemiya)\r\nOneway (individual) effect Random Effect Model \r\n   (Amemiya's transformation)\r\n\r\nCall:\r\nplm(formula = GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n    Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps, \r\n    data = GHG_EU_final, effect = \"individual\", model = \"random\", \r\n    random.method = \"amemiya\", index = c(\"Country\", \"Year\"))\r\n\r\nUnbalanced Panel: n = 30, T = 8-9, N = 269\r\n\r\nEffects:\r\n                    var   std.dev share\r\nidiosyncratic 9.329e+07 9.659e+03 0.001\r\nindividual    7.283e+10 2.699e+05 0.999\r\ntheta:\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n 0.9873  0.9881  0.9881  0.9880  0.9881  0.9881 \r\n\r\nResiduals:\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n -36973   -3943   -1564     -22    2599   48881 \r\n\r\nCoefficients:\r\n                    Estimate  Std. Error z-value  Pr(>|z|)    \r\n(Intercept)       2.0533e+05  5.5810e+04  3.6791 0.0002341 ***\r\nGDP              -9.8667e-02  1.2421e-02 -7.9438  1.96e-15 ***\r\nFinal_EI         -9.2171e+01  1.1294e+02 -0.8161 0.4144452    \r\nFuel_mix         -1.1276e+03  1.2762e+03 -0.8836 0.3769107    \r\nCarbon_intensity  3.2320e+02  1.8112e+02  1.7844 0.0743576 .  \r\nRenewables_share -1.2897e+03  4.6252e+02 -2.7883 0.0052978 ** \r\nLiquid_biofuels   3.6181e+00  3.1850e+00  1.1360 0.2559704    \r\nSolar_thermal     8.8161e-01  2.1500e+00  0.4101 0.6817683    \r\nHeat_pumps       -1.6448e-01  6.2528e-02 -2.6305 0.0085263 ** \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nTotal Sum of Squares:    4.3933e+10\r\nResidual Sum of Squares: 2.4321e+10\r\nR-Squared:      0.4464\r\nAdj. R-Squared: 0.42937\r\nChisq: 209.47 on 8 DF, p-value: < 2.22e-16\r\n\r\nBoth time effect and twoways effect models could also be used when performing estimation of the variance of the error components using the Amemiya estimator. The code chunks to run the models are shown below.\r\n\r\n# Time Effect\r\nGHG_re_time_amem <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                        Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                        data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                        model = \"random\", effect = \"time\", random.method = \"amemiya\")\r\n# Two-ways Effect\r\nGHG_re_twoways_amem <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                           Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                           data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                           model = \"random\", effect = \"twoways\", random.method = \"amemiya\")\r\n\r\nNerlove\r\nSet by using the random.method argument to be “nerlove”, the Nerlove estimator of the error component variances uses error terms and estimated individual-specific component from the fixed effect model as well.\r\n\r\n# Running the model\r\nGHG_re_nerlove <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                      Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                      data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                      model = \"random\", effect = \"individual\", random.method = \"nerlove\")\r\n\r\n# Generating the dot-and-whisker plot for regression coefficient estimates\r\nggstatsplot::ggcoefstats(x = GHG_re_nerlove, output = \"plot\", palette = \"Paired\") + \r\n  scale_y_discrete(labels=c(\"Final_EI\" = \"final energy intensity\", \r\n                            \"Fuel_mix\" = \"fuel mix\", \r\n                            \"Carbon_intensity\" = \"carbon intensity\", \r\n                            \"Renewables_share\" = \"renewable energy share\", \r\n                            \"Liquid_biofuels\" = \"liquid biofuels\", \r\n                            \"Solar_thermal\" = \"solar thermal\", \r\n                            \"Heat_pumps\" = \"heat pumps\"))\r\n\r\n\r\nThe detailed statistical output of the random effects model using Nerlove’s estimator is shown below.\r\n\r\nsummary(GHG_re_nerlove)\r\nOneway (individual) effect Random Effect Model \r\n   (Nerlove's transformation)\r\n\r\nCall:\r\nplm(formula = GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n    Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps, \r\n    data = GHG_EU_final, effect = \"individual\", model = \"random\", \r\n    random.method = \"nerlove\", index = c(\"Country\", \"Year\"))\r\n\r\nUnbalanced Panel: n = 30, T = 8-9, N = 269\r\n\r\nEffects:\r\n                    var   std.dev share\r\nidiosyncratic 8.011e+07 8.951e+03 0.001\r\nindividual    7.304e+10 2.703e+05 0.999\r\ntheta:\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n 0.9883  0.9890  0.9890  0.9889  0.9890  0.9890 \r\n\r\nResiduals:\r\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n -37304   -3841   -1481     -20    2535   48544 \r\n\r\nCoefficients:\r\n                    Estimate  Std. Error z-value  Pr(>|z|)    \r\n(Intercept)       2.0536e+05  5.8897e+04  3.4868 0.0004888 ***\r\nGDP              -9.9569e-02  1.2335e-02 -8.0723 6.901e-16 ***\r\nFinal_EI         -9.1952e+01  1.1218e+02 -0.8196 0.4124170    \r\nFuel_mix         -1.1427e+03  1.2667e+03 -0.9020 0.3670353    \r\nCarbon_intensity  3.2511e+02  1.7972e+02  1.8090 0.0704568 .  \r\nRenewables_share -1.2717e+03  4.5980e+02 -2.7659 0.0056773 ** \r\nLiquid_biofuels   3.4897e+00  3.1607e+00  1.1041 0.2695567    \r\nSolar_thermal     8.7013e-01  2.1343e+00  0.4077 0.6835042    \r\nHeat_pumps       -1.6361e-01  6.2027e-02 -2.6378 0.0083453 ** \r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nTotal Sum of Squares:    4.3693e+10\r\nResidual Sum of Squares: 2.3931e+10\r\nR-Squared:      0.45229\r\nAdj. R-Squared: 0.43544\r\nChisq: 214.545 on 8 DF, p-value: < 2.22e-16\r\n\r\nBoth time effect and twoways effect models could also be used when performing estimation of the variance of the error components using the Nerlove’s estimator. The code chunks to run the models are shown below.\r\n\r\n# Time Effect\r\nGHG_re_time_nerl <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                        Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                        data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                        model = \"random\", effect = \"time\", random.method = \"nerlove\")\r\n# Two-ways Effect\r\nGHG_re_twoways_nerl <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                           Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                           data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                           model = \"random\", effect = \"twoways\", random.method = \"nerlove\")\r\n\r\n\r\n(Note: Likewise, to run the model with the individual gases as the outcome variable, the term y in the formula argument of plm() can be replaced with the variable name of the other gases. Visualisation of regression coefficient estimates can be performed using the same code chunk and replacing the x value in the ggcoefstats().)\r\n2.5 Tests for Assumptions\r\nAdditional diagnostic tests were performed to check if the panel dataset complies with the various assumptions. The diagnostic tests that would be covered include Test of Normality, Test of Serial Correlation and Test for Heteroskedasticity. For the tests, the fixed effect model is used for illustration.\r\n2.5.1 Test of Normality\r\nRegressions are by default assumed to have errors that are normally distributed. To detect if there is any violation of normality assumptions, there are three different visual representations. Prior to generating the charts visualised using functions of ggplot2, a dataframe containing the residuals and fitted values was created.\r\n\r\nresfit_df <- data.frame(index = attr(resid(GHG_fe_indiv), \"index\"), \r\n                        residual = resid(GHG_fe_indiv), \r\n                        fitted = fitted(GHG_fe_indiv)) %>% \r\n  rename(country = index.Country, year = index.Year)\r\n\r\n\r\nResidual QQ Plot\r\nThe residual QQ plot can be used to visually assess if the residuals are normally distributed (i.e. data points closely following the straight diagonal line). The plot can be generated using stat_qq() and stat_gg_line() of ggplot2, setting the sample argument as the residual column. To create individual plots for each country, facet_wrap() was used.\r\n\r\nggplot2::ggplot(data = resfit_df, aes(sample = residual)) + \r\n  stat_qq(color = \"cornflowerblue\") +\r\n  stat_qq_line(color = \"darkslategray\") + \r\n  facet_wrap(~ country) +\r\n  ggtitle(\"Residual QQ Plot by Country\")\r\n\r\n\r\nResidual vs Fitted Value Plot\r\nThe residual vs fitted value plot allows for visual inspection of normality assumption violation by seeing if the residuals spread randomly around the zero line forming an approximate horizontal band and there is no visible outliers. The plot can be generated using geom_point() of ggplot2, setting the x and y arguments as the fitted and residual columns respectively.\r\n\r\nggplot2::ggplot(data = resfit_df) + \r\n  geom_point(mapping = aes(x = fitted, y = residual), color = \"cornflowerblue\") + \r\n  geom_hline(yintercept = 0, color = \"darkslategray\")  + \r\n  facet_wrap(~ country) +\r\n  ggtitle(\"Residual vs Fitted Value Plot by Country\")\r\n\r\n\r\nResidual Histogram\r\nThe residual histogram is also another alternative to visually detect if the residuals are normally distributed (i.e. distribution of histogram follows a normal distribution curve). The histogram can be generated using geom_histogram() of ggplot2, setting the x argument as the residual column.\r\n\r\nggplot2::ggplot(data = resfit_df) + \r\n  geom_histogram(mapping = aes(x = residual), fill = \"cornflowerblue\")  + \r\n  facet_wrap(~ country) +\r\n  ggtitle(\"Residual Histogram by Country\")\r\n\r\n\r\n\r\n2.5.2 Test of Serial Correlation\r\nTest of serial correlation is performed to identify the presence of time-invariant error component, or typically the presence of idiosyncratic error terms.\r\n\r\nUnobserved Effect Test\r\nThe Wooldridge’s Test for Unobserved Effects in Panel Models is a semi-parametric test to detect if there are unobserved effects in panel models. The null hypothesis assumes that the covariance matrix of the residuals is equal to its diagonal.\r\n\r\nplm::pwtest(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n            Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n            data = GHG_EU_final)\r\n\r\n    Wooldridge's test for unobserved individual effects\r\n\r\ndata:  formula\r\nz = 2.7575, p-value = 0.005824\r\nalternative hypothesis: unobserved effect\r\n\r\nLocally Robust Tests\r\nThe test is a joint Lagrange Multiplier test for random effects and serial correlation. The null hypothesis assumes normality and homoscedasticity of the idiosyncratic errors.\r\n\r\nplm::pbsytest(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n              Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n              data = GHG_EU_final)\r\n\r\n    Bera, Sosa-Escudero and Yoon locally robust test - unbalanced\r\n    panel\r\n\r\ndata:  formula\r\nchisq = 107.03, df = 1, p-value < 2.2e-16\r\nalternative hypothesis: AR(1) errors sub random effects\r\n\r\nBreusch-Godfrey/Wooldridge Test\r\nThe Breusch-Godfrey/Wooldridge Test is a general serial correlation test that is applicable for random effects, fixed effects or pooling models. Higher-order serial correlation can also be tested by setting the order argument. The null hypothesis assumes no serial correlation in idiosyncratic errors.\r\n\r\nplm::pbgtest(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n             Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n             data = GHG_EU_final)\r\n\r\n    Breusch-Godfrey/Wooldridge test for serial correlation in\r\n    panel models\r\n\r\ndata:  GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity +     Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps\r\nchisq = 127.89, df = 8, p-value < 2.2e-16\r\nalternative hypothesis: serial correlation in idiosyncratic errors\r\n\r\nCorrelogram of PACF\r\nPlotting the correlogram of the partial autocorrelation function allows for visual detection of the correlation of a variable with itself at different time lags. Having any significant spike that extends beyond the significant limits indicate the presence of correlation for that lag.\r\n(Note: As facet_wrap() of ggplot2 is not supported by bayesforecast, individual datasets by country need to be created to plot the PACF plot for each country. The code for one country is shown below.)\r\n\r\nbelgium_res <- resfit_df %>% filter(country == \"Belgium\")\r\nbayesforecast::ggpacf(belgium_res$residual) + \r\n  ggtitle(\"PACF plot for Belgium\")\r\n\r\n\r\n\r\n2.5.3 Test for Heteroscedasticity\r\nRegression assumes homoscedasticity among residuals (i.e. all residuals are drawn from a population with a constant variance). If heteroscedasticity is detected, robust covariance matrix can be used to account for it.\r\n\r\nBreusch-Pagan Test\r\nThe Breusch-Pagan Test is a statistical test for heteroscedasticity, where the null hypothesis assumes presence of heteroscedasticity.\r\n\r\nlmtest:::bptest(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps +\r\n                factor(Country), data = GHG_EU_final, studentize = F)\r\n\r\n    Breusch-Pagan test\r\n\r\ndata:  GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity +     Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps +     factor(Country)\r\nBP = 811.76, df = 37, p-value < 2.2e-16\r\n\r\nResidual vs Fitted Value Plot\r\nThe residual vs fitted value plot can also be used for detecting heteroscedasticity visually. If the variance of the residuals increases as the fitted values increases (i.e. cone shaped pattern), it indicates the presence of heteroskedasticity.\r\n\r\nggplot2::ggplot(data = resfit_df) + \r\n  geom_point(mapping = aes(x = fitted, y = residual), color = \"cornflowerblue\") + \r\n  geom_hline(yintercept = 0, color = \"darkslategray\") + \r\n  ggtitle(\"Residual vs Fitted Value Plot\")\r\n\r\n\r\n\r\n2.6 Model Selection\r\nWhen running panel regression models, there are three key models to select - fixed effect model, random effect model and pooled OLS model. The following tests below helps to identify the suitable model.\r\n2.6.1 Pooled OLS or Fixed Effect Model\r\nStatistical Test: Test of Poolability\r\nTests of poolability performed using the F test of stability (or Chow test) for the coefficients can be used to determine if pooled effect or fixed effect is more appropriate. The test can be done using pooltest() from plm. The null hypothesis is the pooled effect model.\r\n(Note: Due to insufficient number of observations in the current dataset, the maximum number of x variables that can be included is 6 variables. This limitation needs to be accounted for when building the R Shiny application. For testing, variables with least missing data were kept in the test i.e. GDP, final energy intensity, fuel mix, carbon intensity, solar thermal and heat pumps).\r\n\r\nplm::pooltest(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + Solar_thermal + Heat_pumps,\r\n              data = GHG_EU_final, index = c(\"Country\", \"Year\"), model = \"within\")\r\n\r\n    F statistic\r\n\r\ndata:  GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity +  ...\r\nF = 16.54, df1 = 180, df2 = 62, p-value < 2.2e-16\r\nalternative hypothesis: unstability\r\n\r\nVisualisation: Scatterplot with OLS Regression\r\nTo visualise poolability, the scatterplot for each country and the OLS regression line is plotted in one chart to display comparison of the trends. The combined plot was generated using scatterplot() of car and abline() of graphics. For the purpose of this exercise, only GDP was used as the predictor variable.\r\n\r\n# Running the Pooled OLS model\r\nolsfitted <- lm(GHG_emissions ~ GDP + factor(Country) -1, data = GHG_EU_final)\r\n\r\n# Creating of dataframe for subsequent visualisation\r\nGHG_EU_final$index <- rownames(GHG_EU_final) # adding index for matching\r\npooldf <- data.frame(yhat = olsfitted$fitted.values)\r\npooldf <- pooldf %>% \r\n  bind_cols(index = rownames(pooldf)) %>% \r\n  left_join(GHG_EU_final, by = c(\"index\"))\r\n\r\n# Generating the plot\r\ncar::scatterplot(yhat ~ GDP|Country, data = pooldf, xlab = \"GDP\", ylab = \"Fitted Values\", smooth = FALSE)\r\ngraphics::abline(lm(GHG_emissions ~ GDP, data = pooldf), lwd = 3, col = \"darkslategray\")\r\n\r\n\r\nThe current visualisation might not be easy for detecting poolability and hence will recommend to keep to the statistical test instead.\r\n2.6.2 Fixed Effect or Random Effect Model\r\nStatistical Test: Hausman Test\r\nThe Hausman Test, which evaluates if the unique errors are correlated with the predictor variables, is performed to determine if the fixed effect or random effect model should be used. The test can be done using phtest() from plm, with the first argument being a fixed effect model and the second argument a random effect model. The null hypothesis assumes that the preferred model is random effects.\r\n\r\nphtest(GHG_fe_indiv, GHG_re_amemiya)\r\n\r\n    Hausman Test\r\n\r\ndata:  GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity +  ...\r\nchisq = 33.723, df = 8, p-value = 4.561e-05\r\nalternative hypothesis: one model is inconsistent\r\n\r\nVisualisation: Heterogeneity across Years and Countries\r\nTo visually assess if fixed or random effects is more appropriate, the means and error bars for each year/ country can be plotted to determine presence of heterogeneity across years and countries. The plot was generated using plotmeans() of gplots. For the purpose of this exercise, only 7 countries were selected for the heterogenity plot across countries to avoid overlaps.\r\n(Note: Due to the large number of countries, the heterogeneity plot across countries will appear overly cluttered when all countries were included. Should the plot be included in the Shiny application, selection of countries up to a max of 10 should be allowed.)\r\n\r\n# Heterogeneity across years\r\ngplots::plotmeans(GHG_emissions ~ Year, data = GHG_EU_final, \r\n                  main=\"Heterogeineity across years\", \r\n                  col = \"deepskyblue3\", barcol = \"cornflowerblue\", \r\n                  ylab = \"GHG emissions\")\r\n\r\n# Heterogeneity across countries\r\nGHG_subset <- GHG_EU_final %>% filter(Country %in% c(\"Belgium\", \"Denmark\", \"Greece\", \"Austria\", \r\n                                                     \"Finland\", \"Sweden\", \"Switzerland\"))\r\ngplots::plotmeans(GHG_emissions ~ Country, data = GHG_subset, \r\n                  main=\"Heterogeineity across countries\", \r\n                  col = \"deepskyblue3\", barcol = \"cornflowerblue\", \r\n                  ylab = \"GHG emissions\")\r\n\r\n\r\n2.6.3 Random Effect or Pooled OLS Model\r\nStatistical Test: Lagrange Multiplier Test\r\nThe Lagrange Multiplier Test can be used to determine if a fixed effect model or a pooled OLS model is more appropriate. The test can be done using plmtest() from plm. The null hypothesis assumes that the variances across entities is zero, meaning no significant difference across individuals (i.e. no panel effect).\r\nThe first argument of the function is a pooling model. The type (“honda”, “bp”, “kw”, “ghm”) and effects (“individual”, “time”, “twoways”) arguments can be added to indicate the type of test to be computed and the effects tested respectively. Since effects argument has been included in the models, the argument will follow according to the calibrated model specifications. For the purpose of this exercise, the calibrated model is assumed to have individual effects and only Honda test (type = “honda”) will be tested. Other tests can be run by changing the type argument.\r\n\r\n# Running the pooled OLS model\r\npoolmodel <- plm(GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity + \r\n                 Renewables_share + Liquid_biofuels + Solar_thermal + Heat_pumps,\r\n                 data = GHG_EU_final, index = c(\"Country\", \"Year\"), \r\n                 model = \"pooling\")\r\n\r\n# Lagrange Multiplier Test\r\nplm::plmtest(poolmodel, effect=\"individual\", type=\"honda\")\r\n\r\n    Lagrange Multiplier Test - (Honda) for unbalanced panels\r\n\r\ndata:  GHG_emissions ~ GDP + Final_EI + Fuel_mix + Carbon_intensity +  ...\r\nnormal = 15.036, p-value < 2.2e-16\r\nalternative hypothesis: significant effects\r\n\r\nVisualisation: Variance Plots\r\nTo explore visualising the variances across entities, the box/violin plot for group comparisons in within-subjects will be used. The plot was generated using ggwithinstats() of ggstatsplot. For the purpose of this exercise, the earlier dataset of GHG_subset with selected countries will be used.\r\n(Note: Due to the large number of countries, the plot across countries will appear overly cluttered when all countries were included. Should the plot be included in the Shiny application, selection of countries up to a max of 10 should be allowed.)\r\n\r\nggstatsplot::ggwithinstats(data = GHG_subset, x = Country, y = GHG_emissions, \r\n                           type = \"np\", pairwise.comparisons = FALSE)\r\n\r\n\r\n3.0 Final Components of Visualisation\r\nSeveral visualisation ideas were initially explored but not all intended visualisations could be eventually created after the tests performed in this exercise. Following all the exploration done in the sections above, the final panel model module will include the following components below.\r\nCalibration of specifications of panel data model: model-related (i.e. model, effect) and data-related (i.e. year, country, predictor and outcome variables)\r\nOutput of panel models in statistical form with regression coefficient estimates plot\r\nTests for violation of regression assumptions\r\nModel selection between fixed effect, random effect and OLS models\r\n3.1 Storyboard for Proposed Design\r\nA draft proposed layout of the module in the dashboard can be found below. Each of the pane will follow a similar layout of selecting the relevant specifications on the left panel and displaying the visualisation along with the statistical output on the right area.\r\n\r\n\r\n\r\n3.2 Interactivity\r\nThe subsequent R Shiny application built will help to introduce interactivity to the model calibration with the following selection options offered to the users.\r\nParameters for inclusion in the model which cover Year (between 2010 to 2018) and Countries (among the 33 countries)\r\nPredictor variables (type of greenhouse gases) and outcome variables of interest to be studied\r\nModel (fixed effect or random effect) along with other model specifications that include the effects (individual/ time/ two-ways) and the estimator for the random effect model (among the 4 estimators)\r\nInstead of having only standard specifications for the models, the users can now decide on their preferred models and parameters to generate the relevant panel models then interactively modify the models and parameters, should they hope to explore other model types and specifications.\r\n3.3 Reflections on Visualisation and Interactivity\r\nVisualisation\r\nRegression and validation test outputs are often presented in tabular forms containing the statistical outputs making it less interesting for users when interpreting the results, particularly for non-technical users who might be searching only for the p-value in the output. While there are several existing packages to support performing panel data regression and the relevant tests (such as plm), there is currently no package that supports visualisations the panel data regression and test outputs. Several visualisations using existing visualisation packages in R have been explored which could allow users to more easily spot the results. However, there are limitations for some of the tests where visualising using existing R packages could not produce useful or easily interpretable charts.\r\nInteractivity\r\nIntroducing interactivity in the form of model selection allowed for users to enjoy the flexibility of building any model of interest and modifying selected attributes according to preference. This can help to contribute to better user engagement where users do not need to filter through a whole chunk of static visualisations to search for the model of interest, but could instead generate them on the fly. It also allow non-technical users to perform panel data regressions and the relevant tests without having to execute complex codes. Panel data regression can be more easily accesible to users of all levels.\r\n\r\n\r\n",
    "preview": "posts/2021-03-19-panel-data-analysis/panel-data-analysis_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2021-04-24T23:44:12+08:00",
    "input_file": "panel-data-analysis.utf8.md"
  },
  {
    "path": "posts/2021-03-19-ordinary-least-square-model/",
    "title": "Estimating the relationship of determinants and Greenhouse Gas Emission levels using Ordinary Least Square Regression",
    "description": "The write-up below details the steps taken to explore the different packages available to perform Ordinary Least Square regression model to estimate the relationship of determinants and Greenhouse gas emission levels. This is part of the project deliverables for a project undertaken for the course ISSS608- Visual Analytics offered in SMU MITB.",
    "author": [
      {
        "name": "Jiang Weiling Angeline",
        "url": "www.linkedin.com/in/angeline-jiang"
      }
    ],
    "date": "2021-03-18",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1.0 Purpose of DataViz Exercise\r\n2.0 Step-by-Step Data Preparation for OLS\r\n2.1 Installing and Launching R packages\r\n2.2 Data Source\r\n2.3 Loading the dataset onto R\r\n2.4 Creating the dataframe for OLS\r\n\r\n3.0 Data Visualisation modules\r\n3.1 Variable Selection\r\n3.2 Selected Models\r\n3.2.1 Regression Summary\r\n3.2.2 Testing for Heteroskedasticity\r\n3.2.3 Residual Diagnostics\r\n3.2.4 Collinear Diagnostics\r\n3.2.5 Model Fit Assessment\r\n\r\n\r\n4.0 Proposed Visualization\r\n\r\n\r\nh1, h2, h3 {\r\ntext-align: left\r\n}\r\nbody {\r\ntext-align: justify}\r\n1.0 Purpose of DataViz Exercise\r\nOrdinary least squares (OLS) regression is a statistical method to estimate the relationship between one or more independent variables and a dependent variable by minimizing the sum of the squares in the difference between the observed and predicted values of the dependent variable based on the best fit straight line. There are a wide range of published papers which explored using OLS to estimate the relationship between various factors and greenhouse gas emissions. Some examples of these papers are listed below:\r\nBudiono, R., Juahir, H., Mamat, M., Supian, S., & Nurzaman, M. (2019, October). Modeling and analysis of CO2 emissions in million tons of sectoral greenhouse gases in Indonesia. In IOP Conference Series: Materials Science and Engineering (Vol. 621, No. 1, p. 012020). IOP Publishing.\r\nGrunewald, N., & Martínez-Zarzoso, I. (2009). Driving factors of carbon dioxide emissions and the impact from Kyoto Protocol.\r\nHang, G., & Yuan-Sheng, J. (2011). The relationship between CO2 emissions, economic scale, technology, income and population in China. Procedia Environmental Sciences, 11, 1183-1188.\r\nNonetheless, research papers usually only published the final model used in their analysis (often without the exact code) and omitted the intermediate steps used to derive the final set of predictors. Tests conducted to ensure that OLS assumptions were not violated were also seldom presented in the papers. Hence, this exercise aims to explore different R packages which are able to run different permutations of OLS models, the necessary list of OLS assumption tests and present results in the form of a visualization.\r\n2.0 Step-by-Step Data Preparation for OLS\r\n2.1 Installing and Launching R packages\r\nA list of packages are required for this makeover exercise. This code chunk installs the required packages and loads them onto RStudio environment.\r\n\r\n\r\npackages = c('tidyverse', 'olsrr', 'lmtest', 'dplyr', 'ggplot2', 'ggstatsplot', 'ggcorrplot', \r\n             'purrr', 'jtools', 'broom.mixed', 'ggstance', 'EnvStats', 'graphics','caret','ppcor')\r\nfor (p in packages){\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n2.2 Data Source\r\nAll the datasets used for this project is obtained from Eurostat, the database with European statistics maintained by the statistical office of the European Union. Our group will be focusing on the overall greenhouse gas emissions, excluding Land Use and Land Use Change and Forest (LULUCF) while also exploring into the common greenhouse gases (i.e. carbon dioxide, methane and nitrous oxide).\r\nAs multiple data was pulled from Eurostat database, please refer to Data Preparation page for the glossary list and steps taken to merge and obtain a single dataset for analysis.\r\n2.3 Loading the dataset onto R\r\nThe output shows that all except ‘Country’ is numeric variable, which is correct. Hence there’s no need to change the type of any variable.\r\n\r\n\r\n# Reading the csv file as a tbl_df\r\nghg_2010_2018 <- read_csv(\"data/GHGproj_data.csv\")\r\n\r\n# Inspecting the structure of the dataset\r\nstr(ghg_2010_2018)\r\n\r\n\r\nspec_tbl_df [324 x 15] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\r\n $ Country         : chr [1:324] \"European Union - 27 countries (from 2020)\" \"European Union - 27 countries (from 2020)\" \"European Union - 27 countries (from 2020)\" \"European Union - 27 countries (from 2020)\" ...\r\n $ Year            : num [1:324] 2010 2011 2012 2013 2014 ...\r\n $ GHG_emissions   : num [1:324] 4188244 4075283 3996645 3912623 3776464 ...\r\n $ CO2_emissions   : num [1:324] 3443914 3338307 3262594 3181485 3046141 ...\r\n $ CH4_emissions   : num [1:324] 427118 419634 416827 411161 406015 ...\r\n $ NO2_emissions   : num [1:324] 219323 216187 213789 214272 216858 ...\r\n $ GDP             : num [1:324] 10977298 11321811 11388518 11517119 11781640 ...\r\n $ Final_EI        : num [1:324] 92.2 85.9 84.3 83.6 77.4 ...\r\n $ Fuel_mix        : num [1:324] 2.8 2.88 2.78 2.67 2.62 2.57 2.54 2.53 2.4 NA ...\r\n $ Carbon_intensity: num [1:324] 91.9 91.5 90.9 89.5 88.3 88.7 88 86.7 85.2 NA ...\r\n $ Renewables_share: num [1:324] 14.4 14.6 16 16.7 17.5 ...\r\n $ Envt_taxes      : num [1:324] 259023 271901 278204 284121 291030 ...\r\n $ Liquid_biofuels : num [1:324] 29689 28711 28422 29751 29152 ...\r\n $ Solar_thermal   : num [1:324] 34488 37949 40587 43246 45425 ...\r\n $ Heat_pumps      : num [1:324] 31200 43941 48603 53298 79990 ...\r\n - attr(*, \"spec\")=\r\n  .. cols(\r\n  ..   Country = col_character(),\r\n  ..   Year = col_double(),\r\n  ..   GHG_emissions = col_double(),\r\n  ..   CO2_emissions = col_double(),\r\n  ..   CH4_emissions = col_double(),\r\n  ..   NO2_emissions = col_double(),\r\n  ..   GDP = col_double(),\r\n  ..   Final_EI = col_double(),\r\n  ..   Fuel_mix = col_double(),\r\n  ..   Carbon_intensity = col_double(),\r\n  ..   Renewables_share = col_double(),\r\n  ..   Envt_taxes = col_double(),\r\n  ..   Liquid_biofuels = col_double(),\r\n  ..   Solar_thermal = col_double(),\r\n  ..   Heat_pumps = col_double()\r\n  .. )\r\n\r\n2.4 Creating the dataframe for OLS\r\nFor the purpose of exploring OLS regression model in this assignment, the building of the OLS model will focus only on 2018 data. Other years of regression model can be run subsequently by filtering the dataset to the specific year itself.\r\nWhen importing the dataset earlier, there were records such as “European Union - 27 countries (from 2020)”, “European Union - 27 countries (from 2020)” etc, which presents the combination of multiple countries. As such, these records are excluded using the dplyr() package to prevent serious correlation with other records (countries). To have a consistent naming of countries, “Germany (until 1990 former territory of the FRG)” was replaced with “Germany” using the tidyverse() package.\r\nIn addition, instead of having “Country” reflected as a column variable, additional code was ran to reflect the countries as “Row name”. Given that the focus of this dataset is on 2018, the “Year” variable can be dropped as it’s redundant.\r\n\r\n\r\nghg_2018 <-  ghg_2010_2018 %>% \r\n  filter(Year == 2018) %>% # Subset the dataset to get 2018 records\r\n  filter(!grepl('European Union', Country)) %>% # Exclude records containing 'European Union' \r\n  replace(., (.)=='Germany (until 1990 former territory of the FRG)', \"Germany\") %>% #Replace country name for Germany \r\n  remove_rownames %>% column_to_rownames(var=\"Country\") # Change column \"Country\" to \"Row name\"\r\n\r\nghg_2018 <- subset(ghg_2018, select=-c(Year)) # Drop the \"Year\" variable since it's redundant\r\n\r\n\r\n\r\nReviewing the Variables\r\n(A) Density plot\r\nThe density plots plotted using ggplot2() package showed that the values/scales of “CH4_emissions”, “CO2_emissions”, “Envt_taxes”, “GDP”, “GHG_emissions”, “Heat_pumps”, “Liquid_biofuels”, “NO2_emissions” and “Solar_thermal” are very large compared to “Carbon_intensity”, Final_EI“,”Fuel_mix\" and “Renewables_share”. Hence, transformation may be applied on the former group of variables for better interpretability of the coefficient in the output.\r\nTo get histogram plot, change “geom_density()” to “geom_histogram()” in the code chunk.\r\n\r\n\r\nghg_2018 %>%\r\n  keep(is.numeric) %>% # Keep only numeric columns\r\n  gather() %>% # Convert to key-value pairs\r\n  ggplot(aes(value)) + # Plot the values\r\n    facet_wrap(~ key, scales = \"free\") + # In separate panels\r\n    geom_density()   # as density\r\n\r\n\r\n\r\n\r\nAn example of transformation is by taking “log (base e)” on the variables as shown below, so that the scales of the variables are similar.\r\n\r\n\r\nghg_2018 %>%\r\n  keep(is.numeric) %>% \r\n  gather() %>% \r\n  ggplot(aes(log(value))) + # transformation\r\n    facet_wrap(~ key, scales = \"free\") + \r\n    geom_density()   \r\n\r\n\r\n\r\n\r\n(B) Correlation plot\r\nUsing the ggcorrplot() package, we can plot a correlalogram (with correlation coefficient). If there are NAs present in the selected variables, the legend will display minimum, median, and maximum number of pairs used for correlation tests.\r\nThe chart below showed that some predictors are highly correlated with each other (either dark grey or dark red) and hence we will probably expect some predictors to be omitted in the OLS regression output. For example, Envt_taxes and GDP are highly correlated (0.96) and if these two predictors were to be included in the same model, either will be omitted.\r\n\r\n\r\n# as a default this function outputs a correlation matrix plot\r\nggstatsplot::ggcorrmat(\r\n  data = ghg_2018,\r\n  colors = c(\"#B2182B\", \"white\", \"#4D4D4D\"),\r\n  title = \"Correlalogram for Greenhouse gas emission 2018 dataset\"\r\n)\r\n\r\n\r\n\r\n\r\nFinal dataset for OLS model\r\nFor ease of coding, create a dataframe containing only the transformed variables. In addition, we will focus on using “GHG_emissions” as the dependent variable. To explore other source of emission, one can amend the code accordingly.\r\n\r\n\r\nghg_2018_ols <- log(ghg_2018 + 1) # transform all variables\r\n\r\n# Drop all dependent variables except \"GHG_emissions\"\r\nghg_2018_ols <- subset(ghg_2018_ols, select = -c(CO2_emissions, CH4_emissions, NO2_emissions)) \r\n\r\n\r\n\r\n3.0 Data Visualisation modules\r\nIn this section, 2 main modules will be covered, namely (1) Variable Selection and (2) Selected Model.\r\nFor illustration of the different modules, we randomly selected 3 independent variables, namely “GDP”, “Final_EI” and “Fuel_mix” to be considered. In the proposed shiny app, there will be a multi-select option for users to decide the independent variables they wish to consider.\r\nIn addition, the olsrr() package will be primarily used as it provides the following tools for building OLS regression models using R.\r\nComprehensive Regression Output\r\nVariable Selection Procedures\r\nHeteroskedasticity Tests\r\nCollinearity Diagnostics\r\nModel Fit Assessment\r\nResidual Diagnostics\r\nNonetheless, other R packages will also be explored to determine the most appropriate data visualization.\r\n3.1 Variable Selection\r\nIn this section, 6 main methods will be explored to identify the best subset of predictors to include in the model, among all possible subsets of predictors.\r\n(i) All possibilities\r\nAll subset regression tests all possible subsets of the set of potential independent variables. If there are k potential independent variables (besides the constant), then there are 2^k distinct subsets of them to be tested. Hence, for this dataset, if all the 9 potential independent variables are include into the model, there will be 2^9 = 512 models generated.\r\nBase on the plots, model 4 has the highest adjusted R-sqaure and lowest AIC, hence is the better model compared to other models.\r\n\r\n\r\nmodel <- lm(GHG_emissions ~ GDP + Final_EI + Fuel_mix, data = ghg_2018_ols)\r\n\r\n# Detailed output\r\nk <- ols_step_all_possible(model)\r\nk\r\n\r\n\r\n  Index N            Predictors  R-Square Adj. R-Square Mallow's Cp\r\n1     1 1                   GDP 0.8251792    0.81953986   57.874319\r\n3     2 1              Fuel_mix 0.1594361    0.13045118  248.904042\r\n2     3 1              Final_EI 0.1123569    0.08174848  264.357194\r\n5     4 2          GDP Fuel_mix 0.9171542    0.91123668    2.193035\r\n4     5 2          GDP Final_EI 0.8578250    0.84766963   21.667079\r\n6     6 2     Final_EI Fuel_mix 0.2398643    0.18556886  224.504564\r\n7     7 3 GDP Final_EI Fuel_mix 0.9177423    0.90860259    4.000000\r\n\r\n# Panel of fit criteria\r\nplot(k, main = \"Panel of fit criteria\", xlab=\"No. of predictors\", ylab=\"Value\")\r\n\r\n\r\n\r\n\r\n(ii) Best Subset\r\nThe code chunk below selects the subset of predictors that do the best at meeting some well-defined objective criterion e.g. largest adjusted R-square or smallest AIC etc. From the plot, users will be able to identify the model with the highest adjusted R-square value etc.\r\n\r\n\r\nmodel <- lm(GHG_emissions ~ GDP + Final_EI + Fuel_mix , data = ghg_2018_ols)\r\n\r\n# Detailed output\r\nk <- ols_step_best_subset(model)\r\nk\r\n\r\n\r\n      Best Subsets Regression       \r\n------------------------------------\r\nModel Index    Predictors\r\n------------------------------------\r\n     1         GDP                   \r\n     2         GDP Fuel_mix          \r\n     3         GDP Final_EI Fuel_mix \r\n------------------------------------\r\n\r\n                                                  Subsets Regression Summary                                                   \r\n-------------------------------------------------------------------------------------------------------------------------------\r\n                       Adj.        Pred                                                                                         \r\nModel    R-Square    R-Square    R-Square     C(p)        AIC        SBIC        SBC       MSEP       FPE       HSP       APC  \r\n-------------------------------------------------------------------------------------------------------------------------------\r\n  1        0.8252      0.8195      0.7877    57.8743    78.1392    -18.7605    82.6287    18.3075    0.5883    0.0185    0.1974 \r\n  2        0.9172      0.9112      0.9032     2.1930    41.6987    -45.4747    47.4346     5.9678    0.2108    0.0071    0.1006 \r\n  3        0.9177      0.9086      0.8923     4.0000    43.4778    -43.3551    50.6478     6.1533    0.2235    0.0076    0.1066 \r\n-------------------------------------------------------------------------------------------------------------------------------\r\nAIC: Akaike Information Criteria \r\n SBIC: Sawa's Bayesian Information Criteria \r\n SBC: Schwarz Bayesian Criteria \r\n MSEP: Estimated error of prediction, assuming multivariate normality \r\n FPE: Final Prediction Error \r\n HSP: Hocking's Sp \r\n APC: Amemiya Prediction Criteria \r\n\r\n# Panel of fit criteria\r\nplot(k, main = \"Panel of fit criteria\", xlab=\"No. of predictors\", ylab=\"Value\")\r\n\r\n\r\n\r\n\r\n(iii) Stepwise Forward\r\nIn a step-wise method, we can start with a single predictor and continue to add predictors based on p-value until no variable is left. The output plot shows the changes in the criterion value upon adding a predictor which is useful for the users to understand the importance of the predictor added into the model.\r\n\r\n\r\nmodel <- lm(GHG_emissions ~ GDP + Final_EI + Fuel_mix , data = ghg_2018_ols)\r\n\r\n# Selection summary\r\nk <- ols_step_forward_p(model)\r\nk\r\n\r\n\r\n\r\n                           Selection Summary                             \r\n------------------------------------------------------------------------\r\n        Variable                  Adj.                                      \r\nStep    Entered     R-Square    R-Square     C(p)        AIC       RMSE     \r\n------------------------------------------------------------------------\r\n   1    GDP           0.8252      0.8195    57.8743    78.1392    0.7448    \r\n   2    Fuel_mix      0.9172      0.9112     2.1930    41.6987    0.4384    \r\n------------------------------------------------------------------------\r\n\r\n# Plot\r\nplot(k)\r\n\r\n\r\n\r\n# obtain detailed output\r\nols_step_forward_p(model, details = TRUE)\r\n\r\n\r\nForward Selection Method    \r\n---------------------------\r\n\r\nCandidate Terms: \r\n\r\n1. GDP \r\n2. Final_EI \r\n3. Fuel_mix \r\n\r\nWe are selecting variables based on p value...\r\n\r\n\r\nForward Selection: Step 1 \r\n\r\n- GDP \r\n\r\n                        Model Summary                         \r\n-------------------------------------------------------------\r\nR                       0.908       RMSE               0.745 \r\nR-Squared               0.825       Coef. Var          6.842 \r\nAdj. R-Squared          0.820       MSE                0.555 \r\nPred R-Squared          0.788       MAE                0.561 \r\n-------------------------------------------------------------\r\n RMSE: Root Mean Square Error \r\n MSE: Mean Square Error \r\n MAE: Mean Absolute Error \r\n\r\n                               ANOVA                                 \r\n--------------------------------------------------------------------\r\n               Sum of                                               \r\n              Squares        DF    Mean Square       F         Sig. \r\n--------------------------------------------------------------------\r\nRegression     81.167         1         81.167    146.324    0.0000 \r\nResidual       17.196        31          0.555                      \r\nTotal          98.363        32                                     \r\n--------------------------------------------------------------------\r\n\r\n                                  Parameter Estimates                                   \r\n---------------------------------------------------------------------------------------\r\n      model      Beta    Std. Error    Std. Beta      t        Sig      lower    upper \r\n---------------------------------------------------------------------------------------\r\n(Intercept)    -1.041         0.994                 -1.047    0.303    -3.069    0.987 \r\n        GDP     0.983         0.081        0.908    12.096    0.000     0.817    1.148 \r\n---------------------------------------------------------------------------------------\r\n\r\n\r\n\r\nForward Selection: Step 2 \r\n\r\n- Fuel_mix \r\n\r\n                        Model Summary                         \r\n-------------------------------------------------------------\r\nR                       0.958       RMSE               0.438 \r\nR-Squared               0.917       Coef. Var          3.959 \r\nAdj. R-Squared          0.911       MSE                0.192 \r\nPred R-Squared          0.903       MAE                0.330 \r\n-------------------------------------------------------------\r\n RMSE: Root Mean Square Error \r\n MSE: Mean Square Error \r\n MAE: Mean Absolute Error \r\n\r\n                               ANOVA                                 \r\n--------------------------------------------------------------------\r\n               Sum of                                               \r\n              Squares        DF    Mean Square       F         Sig. \r\n--------------------------------------------------------------------\r\nRegression     59.588         2         29.794    154.989    0.0000 \r\nResidual        5.383        28          0.192                      \r\nTotal          64.971        30                                     \r\n--------------------------------------------------------------------\r\n\r\n                                 Parameter Estimates                                   \r\n--------------------------------------------------------------------------------------\r\n      model     Beta    Std. Error    Std. Beta      t        Sig      lower    upper \r\n--------------------------------------------------------------------------------------\r\n(Intercept)    0.191         0.643                  0.298    0.768    -1.125    1.508 \r\n        GDP    0.849         0.053        0.884    16.003    0.000     0.740    0.958 \r\n   Fuel_mix    0.557         0.124        0.247     4.479    0.000     0.302    0.811 \r\n--------------------------------------------------------------------------------------\r\n\r\n\r\n\r\nNo more variables to be added.\r\n\r\nVariables Entered: \r\n\r\n+ GDP \r\n+ Fuel_mix \r\n\r\n\r\nFinal Model Output \r\n------------------\r\n\r\n                        Model Summary                         \r\n-------------------------------------------------------------\r\nR                       0.958       RMSE               0.438 \r\nR-Squared               0.917       Coef. Var          3.959 \r\nAdj. R-Squared          0.911       MSE                0.192 \r\nPred R-Squared          0.903       MAE                0.330 \r\n-------------------------------------------------------------\r\n RMSE: Root Mean Square Error \r\n MSE: Mean Square Error \r\n MAE: Mean Absolute Error \r\n\r\n                               ANOVA                                 \r\n--------------------------------------------------------------------\r\n               Sum of                                               \r\n              Squares        DF    Mean Square       F         Sig. \r\n--------------------------------------------------------------------\r\nRegression     59.588         2         29.794    154.989    0.0000 \r\nResidual        5.383        28          0.192                      \r\nTotal          64.971        30                                     \r\n--------------------------------------------------------------------\r\n\r\n                                 Parameter Estimates                                   \r\n--------------------------------------------------------------------------------------\r\n      model     Beta    Std. Error    Std. Beta      t        Sig      lower    upper \r\n--------------------------------------------------------------------------------------\r\n(Intercept)    0.191         0.643                  0.298    0.768    -1.125    1.508 \r\n        GDP    0.849         0.053        0.884    16.003    0.000     0.740    0.958 \r\n   Fuel_mix    0.557         0.124        0.247     4.479    0.000     0.302    0.811 \r\n--------------------------------------------------------------------------------------\r\n\r\n                           Selection Summary                             \r\n------------------------------------------------------------------------\r\n        Variable                  Adj.                                      \r\nStep    Entered     R-Square    R-Square     C(p)        AIC       RMSE     \r\n------------------------------------------------------------------------\r\n   1    GDP           0.8252      0.8195    57.8743    78.1392    0.7448    \r\n   2    Fuel_mix      0.9172      0.9112     2.1930    41.6987    0.4384    \r\n------------------------------------------------------------------------\r\n\r\n(iv) Stepwise Backward\r\nSimilarly, we can start with the full list of predictors and remove predictors based on p-value until only one variable is left.\r\n\r\n\r\nmodel <- lm(GHG_emissions ~ GDP + Final_EI + Fuel_mix , data = ghg_2018_ols)\r\n\r\n# Selection summary\r\nk <- ols_step_backward_p(model)\r\nk\r\n\r\n\r\n\r\n                          Elimination Summary                           \r\n-----------------------------------------------------------------------\r\n        Variable                  Adj.                                     \r\nStep    Removed     R-Square    R-Square     C(p)       AIC       RMSE     \r\n-----------------------------------------------------------------------\r\n   1    Final_EI      0.9172      0.9112    2.1930    41.6987    0.4384    \r\n-----------------------------------------------------------------------\r\n\r\n# Plot\r\nplot(k)\r\n\r\n\r\n\r\n# obtain detailed output\r\nols_step_backward_p(model, details = TRUE)\r\n\r\n\r\nBackward Elimination Method \r\n---------------------------\r\n\r\nCandidate Terms: \r\n\r\n1 . GDP \r\n2 . Final_EI \r\n3 . Fuel_mix \r\n\r\nWe are eliminating variables based on p value...\r\n\r\n- Final_EI \r\n\r\nBackward Elimination: Step 1 \r\n\r\n Variable Final_EI Removed \r\n\r\n                        Model Summary                         \r\n-------------------------------------------------------------\r\nR                       0.958       RMSE               0.438 \r\nR-Squared               0.917       Coef. Var          3.959 \r\nAdj. R-Squared          0.911       MSE                0.192 \r\nPred R-Squared          0.903       MAE                0.330 \r\n-------------------------------------------------------------\r\n RMSE: Root Mean Square Error \r\n MSE: Mean Square Error \r\n MAE: Mean Absolute Error \r\n\r\n                               ANOVA                                 \r\n--------------------------------------------------------------------\r\n               Sum of                                               \r\n              Squares        DF    Mean Square       F         Sig. \r\n--------------------------------------------------------------------\r\nRegression     59.588         2         29.794    154.989    0.0000 \r\nResidual        5.383        28          0.192                      \r\nTotal          64.971        30                                     \r\n--------------------------------------------------------------------\r\n\r\n                                 Parameter Estimates                                   \r\n--------------------------------------------------------------------------------------\r\n      model     Beta    Std. Error    Std. Beta      t        Sig      lower    upper \r\n--------------------------------------------------------------------------------------\r\n(Intercept)    0.191         0.643                  0.298    0.768    -1.125    1.508 \r\n        GDP    0.849         0.053        0.884    16.003    0.000     0.740    0.958 \r\n   Fuel_mix    0.557         0.124        0.247     4.479    0.000     0.302    0.811 \r\n--------------------------------------------------------------------------------------\r\n\r\n\r\n\r\nNo more variables satisfy the condition of p value = 0.3\r\n\r\n\r\nVariables Removed: \r\n\r\n- Final_EI \r\n\r\n\r\nFinal Model Output \r\n------------------\r\n\r\n                        Model Summary                         \r\n-------------------------------------------------------------\r\nR                       0.958       RMSE               0.438 \r\nR-Squared               0.917       Coef. Var          3.959 \r\nAdj. R-Squared          0.911       MSE                0.192 \r\nPred R-Squared          0.903       MAE                0.330 \r\n-------------------------------------------------------------\r\n RMSE: Root Mean Square Error \r\n MSE: Mean Square Error \r\n MAE: Mean Absolute Error \r\n\r\n                               ANOVA                                 \r\n--------------------------------------------------------------------\r\n               Sum of                                               \r\n              Squares        DF    Mean Square       F         Sig. \r\n--------------------------------------------------------------------\r\nRegression     59.588         2         29.794    154.989    0.0000 \r\nResidual        5.383        28          0.192                      \r\nTotal          64.971        30                                     \r\n--------------------------------------------------------------------\r\n\r\n                                 Parameter Estimates                                   \r\n--------------------------------------------------------------------------------------\r\n      model     Beta    Std. Error    Std. Beta      t        Sig      lower    upper \r\n--------------------------------------------------------------------------------------\r\n(Intercept)    0.191         0.643                  0.298    0.768    -1.125    1.508 \r\n        GDP    0.849         0.053        0.884    16.003    0.000     0.740    0.958 \r\n   Fuel_mix    0.557         0.124        0.247     4.479    0.000     0.302    0.811 \r\n--------------------------------------------------------------------------------------\r\n\r\n                          Elimination Summary                           \r\n-----------------------------------------------------------------------\r\n        Variable                  Adj.                                     \r\nStep    Removed     R-Square    R-Square     C(p)       AIC       RMSE     \r\n-----------------------------------------------------------------------\r\n   1    Final_EI      0.9172      0.9112    2.1930    41.6987    0.4384    \r\n-----------------------------------------------------------------------\r\n\r\n(v) Stepwise AIC Forward\r\nAlternatively, in a step-wise method, we can start with a single predictor and continue to add predictors based on AIC value until no variable is left.\r\n\r\n\r\nmodel <- lm(GHG_emissions ~ GDP + Final_EI + Fuel_mix, data = ghg_2018_ols)\r\n\r\n# Selection summary\r\nk <- ols_step_forward_aic(model)\r\nk\r\n\r\n\r\n\r\n                       Selection Summary                        \r\n---------------------------------------------------------------\r\nVariable      AIC      Sum Sq     RSS       R-Sq      Adj. R-Sq \r\n---------------------------------------------------------------\r\nGDP          78.139    81.167    17.196    0.82518      0.81954 \r\nFuel_mix     41.699    59.588     5.383    0.91715      0.91124 \r\n---------------------------------------------------------------\r\n\r\n# Plot\r\nplot(k)\r\n\r\n\r\n\r\n# obtain detailed output\r\nols_step_forward_aic(model, details = TRUE)\r\n\r\n\r\nForward Selection Method \r\n------------------------\r\n\r\nCandidate Terms: \r\n\r\n1 . GDP \r\n2 . Final_EI \r\n3 . Fuel_mix \r\n\r\n Step 0: AIC = 133.691 \r\n GHG_emissions ~ 1 \r\n\r\n--------------------------------------------------------------------\r\nVariable     DF      AIC      Sum Sq     RSS      R-Sq     Adj. R-Sq \r\n--------------------------------------------------------------------\r\nGDP           1     78.139    81.167    17.196    0.825        0.820 \r\nFuel_mix      1    111.529    10.359    54.612    0.159        0.130 \r\nFinal_EI      1    113.218     7.300    57.671    0.112        0.082 \r\n--------------------------------------------------------------------\r\n\r\n\r\n- GDP \r\n\r\n\r\n Step 1 : AIC = 78.13917 \r\n GHG_emissions ~ GDP \r\n\r\n-------------------------------------------------------------------\r\nVariable     DF     AIC      Sum Sq      RSS     R-Sq     Adj. R-Sq \r\n-------------------------------------------------------------------\r\nFuel_mix      1    41.699    -21.578    5.383    0.917        0.911 \r\nFinal_EI      1    58.441    -25.433    9.237    0.858        0.848 \r\n-------------------------------------------------------------------\r\n\r\n- Fuel_mix \r\n\r\n\r\n Step 2 : AIC = 41.69868 \r\n GHG_emissions ~ GDP + Fuel_mix \r\n\r\n------------------------------------------------------------------\r\nVariable     DF     AIC      Sum Sq     RSS     R-Sq     Adj. R-Sq \r\n------------------------------------------------------------------\r\nFinal_EI      1    43.478     0.038    5.344    0.918        0.909 \r\n------------------------------------------------------------------\r\n\r\n\r\nNo more variables to be added.\r\n\r\nVariables Entered: \r\n\r\n- GDP \r\n- Fuel_mix \r\n\r\n\r\nFinal Model Output \r\n------------------\r\n\r\n                        Model Summary                         \r\n-------------------------------------------------------------\r\nR                       0.958       RMSE               0.438 \r\nR-Squared               0.917       Coef. Var          3.959 \r\nAdj. R-Squared          0.911       MSE                0.192 \r\nPred R-Squared          0.903       MAE                0.330 \r\n-------------------------------------------------------------\r\n RMSE: Root Mean Square Error \r\n MSE: Mean Square Error \r\n MAE: Mean Absolute Error \r\n\r\n                               ANOVA                                 \r\n--------------------------------------------------------------------\r\n               Sum of                                               \r\n              Squares        DF    Mean Square       F         Sig. \r\n--------------------------------------------------------------------\r\nRegression     59.588         2         29.794    154.989    0.0000 \r\nResidual        5.383        28          0.192                      \r\nTotal          64.971        30                                     \r\n--------------------------------------------------------------------\r\n\r\n                                 Parameter Estimates                                   \r\n--------------------------------------------------------------------------------------\r\n      model     Beta    Std. Error    Std. Beta      t        Sig      lower    upper \r\n--------------------------------------------------------------------------------------\r\n(Intercept)    0.191         0.643                  0.298    0.768    -1.125    1.508 \r\n        GDP    0.849         0.053        0.884    16.003    0.000     0.740    0.958 \r\n   Fuel_mix    0.557         0.124        0.247     4.479    0.000     0.302    0.811 \r\n--------------------------------------------------------------------------------------\r\n\r\n                       Selection Summary                        \r\n---------------------------------------------------------------\r\nVariable      AIC      Sum Sq     RSS       R-Sq      Adj. R-Sq \r\n---------------------------------------------------------------\r\nGDP          78.139    81.167    17.196    0.82518      0.81954 \r\nFuel_mix     41.699    59.588     5.383    0.91715      0.91124 \r\n---------------------------------------------------------------\r\n\r\n(vi) Stepwise AIC Backward\r\nSimilarly, we can start with the full list of predictors and remove predictors based on AIC value until only one variable is left.\r\n\r\n\r\nmodel <- lm(GHG_emissions ~ GDP + Final_EI + Fuel_mix, data = ghg_2018_ols)\r\n\r\n# Selection summary\r\nk <- ols_step_backward_aic(model)\r\nk\r\n\r\n\r\n\r\n                  Backward Elimination Summary                   \r\n---------------------------------------------------------------\r\nVariable       AIC       RSS     Sum Sq     R-Sq      Adj. R-Sq \r\n---------------------------------------------------------------\r\nFull Model    43.478    5.344    59.627    0.91774      0.90860 \r\nFinal_EI      41.699    5.383    59.588    0.91715      0.91124 \r\n---------------------------------------------------------------\r\n\r\n# Plot\r\nplot(k)\r\n\r\n\r\n\r\n# obtain detailed output\r\nols_step_backward_aic(model, details = TRUE)\r\n\r\n\r\nBackward Elimination Method \r\n---------------------------\r\n\r\nCandidate Terms: \r\n\r\n1 . GDP \r\n2 . Final_EI \r\n3 . Fuel_mix \r\n\r\n Step 0: AIC = 43.47784 \r\n GHG_emissions ~ GDP + Final_EI + Fuel_mix \r\n\r\n--------------------------------------------------------------------\r\nVariable     DF      AIC      Sum Sq     RSS      R-Sq     Adj. R-Sq \r\n--------------------------------------------------------------------\r\nFinal_EI     1      41.699     0.038     5.383    0.917        0.911 \r\nFuel_mix     1      58.441     3.893     9.237    0.858        0.848 \r\nGDP          1     110.411    44.042    49.387    0.240        0.186 \r\n--------------------------------------------------------------------\r\n\r\n\r\nVariables Removed: \r\n\r\n- Final_EI \r\n\r\n\r\n  Step 1 : AIC = 41.69868 \r\n GHG_emissions ~ GDP + Fuel_mix \r\n\r\n---------------------------------------------------------------------\r\nVariable     DF      AIC      Sum Sq      RSS      R-Sq     Adj. R-Sq \r\n---------------------------------------------------------------------\r\nFuel_mix     1      78.139    -21.578    17.196    0.825        0.820 \r\nGDP          1     111.529     49.230    54.612    0.159        0.130 \r\n---------------------------------------------------------------------\r\n\r\n\r\nNo more variables to be removed.\r\n\r\nVariables Removed: \r\n\r\n- Final_EI \r\n\r\n\r\nFinal Model Output \r\n------------------\r\n\r\n                        Model Summary                         \r\n-------------------------------------------------------------\r\nR                       0.958       RMSE               0.438 \r\nR-Squared               0.917       Coef. Var          3.959 \r\nAdj. R-Squared          0.911       MSE                0.192 \r\nPred R-Squared          0.903       MAE                0.330 \r\n-------------------------------------------------------------\r\n RMSE: Root Mean Square Error \r\n MSE: Mean Square Error \r\n MAE: Mean Absolute Error \r\n\r\n                               ANOVA                                 \r\n--------------------------------------------------------------------\r\n               Sum of                                               \r\n              Squares        DF    Mean Square       F         Sig. \r\n--------------------------------------------------------------------\r\nRegression     59.588         2         29.794    154.989    0.0000 \r\nResidual        5.383        28          0.192                      \r\nTotal          64.971        30                                     \r\n--------------------------------------------------------------------\r\n\r\n                                 Parameter Estimates                                   \r\n--------------------------------------------------------------------------------------\r\n      model     Beta    Std. Error    Std. Beta      t        Sig      lower    upper \r\n--------------------------------------------------------------------------------------\r\n(Intercept)    0.191         0.643                  0.298    0.768    -1.125    1.508 \r\n        GDP    0.849         0.053        0.884    16.003    0.000     0.740    0.958 \r\n   Fuel_mix    0.557         0.124        0.247     4.479    0.000     0.302    0.811 \r\n--------------------------------------------------------------------------------------\r\n\r\n                  Backward Elimination Summary                   \r\n---------------------------------------------------------------\r\nVariable       AIC       RSS     Sum Sq     R-Sq      Adj. R-Sq \r\n---------------------------------------------------------------\r\nFull Model    43.478    5.344    59.627    0.91774      0.90860 \r\nFinal_EI      41.699    5.383    59.588    0.91715      0.91124 \r\n---------------------------------------------------------------\r\n\r\n3.2 Selected Models\r\nAssume that from the earlier variable selection module (Section 3.1), the chosen model is “GHG_emissions = GDP + Final_EI + Fuel_mix”.\r\n\r\n\r\nmodel <- lm(GHG_emissions ~ GDP + Final_EI + Fuel_mix, data = ghg_2018_ols)\r\n\r\n\r\n\r\n3.2.1 Regression Summary\r\nRun the following code chunk to output the regression summary (coefficient, standard errors etc.).\r\nCompared to jtools() package which only plots the coefficient value and confidence interval, the ggcoefstats() package provides a more comprehensive visualization of the coefficient values along with the t-statistics and p-value for each predictors. In addition, the latter also included the AIC and BIC value of the model and hence more is a more preferred visualization.\r\n\r\n\r\n# Tabular output\r\nols_regress(GHG_emissions ~ GDP + Final_EI + Fuel_mix, data = ghg_2018_ols)\r\n\r\n\r\n                        Model Summary                         \r\n-------------------------------------------------------------\r\nR                       0.958       RMSE               0.445 \r\nR-Squared               0.918       Coef. Var          4.018 \r\nAdj. R-Squared          0.909       MSE                0.198 \r\nPred R-Squared          0.892       MAE                0.331 \r\n-------------------------------------------------------------\r\n RMSE: Root Mean Square Error \r\n MSE: Mean Square Error \r\n MAE: Mean Absolute Error \r\n\r\n                               ANOVA                                 \r\n--------------------------------------------------------------------\r\n               Sum of                                               \r\n              Squares        DF    Mean Square       F         Sig. \r\n--------------------------------------------------------------------\r\nRegression     59.627         3         19.876    100.412    0.0000 \r\nResidual        5.344        27          0.198                      \r\nTotal          64.971        30                                     \r\n--------------------------------------------------------------------\r\n\r\n                                  Parameter Estimates                                   \r\n---------------------------------------------------------------------------------------\r\n      model      Beta    Std. Error    Std. Beta      t        Sig      lower    upper \r\n---------------------------------------------------------------------------------------\r\n(Intercept)    -0.481         1.664                 -0.289    0.775    -3.895    2.933 \r\n        GDP     0.858         0.058        0.893    14.917    0.000     0.740    0.976 \r\n   Final_EI     0.128         0.291        0.026     0.439    0.664    -0.469    0.724 \r\n   Fuel_mix     0.561         0.127        0.249     4.435    0.000     0.301    0.821 \r\n---------------------------------------------------------------------------------------\r\n\r\n# Plot coefficients using jtools package\r\nplot_summs(model, scale = TRUE)\r\n\r\n\r\n\r\n# Plot coefficients using ggcoefstats package\r\nggcoefstats(model)\r\n\r\n\r\n\r\n\r\n3.2.2 Testing for Heteroskedasticity\r\nOLS regression assumes that all residuals are drawn from a population that has a constant variance i.e. homoskedasticity. If the assumption is violated, there is heteroskedasticity problem and the estimators will be inefficient and hypothesis tests will be invalid.\r\nBelow presents 3 methods to determine if there is heteroskedasticity problem.\r\n(i) Bvensch Pagan Test\r\nUsing the lmtest() package, it will output the Chi2 or p-value. For the example below, since p-value is >0.05, the variance is constant.\r\n\r\n\r\n# Using lmtest package\r\nbptest(model, studentize = FALSE)\r\n\r\n\r\n\r\n    Breusch-Pagan test\r\n\r\ndata:  model\r\nBP = 0.91198, df = 3, p-value = 0.8225\r\n\r\nHowever, compared to lmtest() package, the function in olsrr() package is able to clearly indicate the null and alternative hypothesis, and the model tested on (shown below). This is more user friendly as users can easily identify the testing hypothesis, hence more preferred.\r\n\r\n\r\n# Using olsrr package\r\n# Using fitted values of the model\r\nols_test_breusch_pagan(model)\r\n\r\n\r\n\r\n Breusch Pagan Test for Heteroskedasticity\r\n -----------------------------------------\r\n Ho: the variance is constant            \r\n Ha: the variance is not constant        \r\n\r\n                  Data                    \r\n -----------------------------------------\r\n Response : GHG_emissions \r\n Variables: fitted values of GHG_emissions \r\n\r\n        Test Summary         \r\n ----------------------------\r\n DF            =    1 \r\n Chi2          =    0.235397 \r\n Prob > Chi2   =    0.6275506 \r\n\r\nIn addition, one can modify the code chunk to make adjustment to the parameters as shown below.\r\n\r\n\r\n# Using independent variables of the model\r\nols_test_breusch_pagan(model, rhs = TRUE)\r\n\r\n# Using independent variables of the model and perform multiple tests\r\nols_test_breusch_pagan(model, rhs = TRUE, multiple = TRUE)\r\n\r\n# Using Bonferroni p-value adjustment\r\nols_test_breusch_pagan(model, rhs = TRUE, multiple = TRUE, p.adj = 'bonferroni')\r\n\r\n# Using Sidak p-value adjustment\r\nols_test_breusch_pagan(model, rhs = TRUE, multiple = TRUE, p.adj = 'sidak')\r\n\r\n# Using Holm’s p-value adjustment\r\nols_test_breusch_pagan(model, rhs = TRUE, multiple = TRUE, p.adj = 'holm')\r\n\r\n\r\n\r\n(ii) Score Test\r\nAlternatively, we can also test for heteroskedasticity under the assumption that the errors are independent and identically distributed (i.i.d.).\r\nFrom either the Chi2 or p-value, users can determine if the null hypothesis is being rejected and hence if variance is homogenous. For the example below, since p-value is >0.05, we cannot reject the null hypothesis and hence conclude that the variance is homogenous.\r\n\r\n\r\n# Using olsrr package\r\n# Using fitted values of the model\r\nols_test_score(model)\r\n\r\n\r\n\r\n Score Test for Heteroskedasticity\r\n ---------------------------------\r\n Ho: Variance is homogenous\r\n Ha: Variance is not homogenous\r\n\r\n Variables: fitted values of GHG_emissions \r\n\r\n        Test Summary         \r\n ----------------------------\r\n DF            =    1 \r\n Chi2          =    0.2979123 \r\n Prob > Chi2   =    0.5851942 \r\n\r\nIn addition, one can modify the code chunk to make adjustment to the parameters as shown below.\r\n\r\n\r\n# Using independent variables of the model\r\nols_test_score(model, rhs = TRUE)\r\n\r\n\r\n\r\n(iii) F-test\r\nInstead of using Score test, F-test can also test the assumption of iid.\r\n\r\n\r\n# Using olsrr package\r\n# Using fitted values of the model\r\nols_test_f(model)\r\n\r\n\r\n\r\n F Test for Heteroskedasticity\r\n -----------------------------\r\n Ho: Variance is homogenous\r\n Ha: Variance is not homogenous\r\n\r\n Variables: fitted values of GHG_emissions \r\n\r\n      Test Summary        \r\n -------------------------\r\n Num DF     =    1 \r\n Den DF     =    29 \r\n F          =    0.2813963 \r\n Prob > F   =    0.5998264 \r\n\r\nSimilarly, one can modify the code chunk to make adjustment to the parameters as shown below.\r\n\r\n\r\n# Using independent variables of the model\r\nols_test_f(model, rhs = TRUE)\r\n\r\n\r\n\r\n3.2.3 Residual Diagnostics\r\nOLS regression assumes that the error has a normal distribution. Below presents 4 methods to detect the violation of normality assumption.\r\n(i) QQ-plot\r\nFrom the QQ-plot, if the data points do not fall near the diagonal line, it can be said that the normality assumption has been violated.\r\nUsing the EnvStats() package, we can obtain the Q-Q plot for the residuals.\r\n\r\n\r\n# Using EnvStats package\r\nres <- residuals(model)\r\nqqnorm(res, col = \"blue\")\r\nqqline(res, col = \"red\")\r\n\r\n\r\n\r\n\r\nHowever, there’s a function in olsrr() package which can also output the QQ residual plot. This is more efficient as more customization needs to be done if we were to use EnvStats() package (shown above).\r\n\r\n\r\n# Using olsrr package\r\nols_plot_resid_qq(model)\r\n\r\n\r\n\r\n\r\n(ii) Normality test\r\nAlternatively, the normality assumption can also be tested using the code chunk below.\r\n\r\n\r\n# Using olsrr package\r\nols_test_normality(model)\r\n\r\n\r\n-----------------------------------------------\r\n       Test             Statistic       pvalue  \r\n-----------------------------------------------\r\nShapiro-Wilk              0.9636         0.3625 \r\nKolmogorov-Smirnov        0.0996         0.8883 \r\nCramer-von Mises          4.0754         0.0000 \r\nAnderson-Darling          0.3697         0.4046 \r\n-----------------------------------------------\r\n\r\n# Correlation between observed residuals and expected residuals under normality.\r\nols_test_correlation(model)\r\n\r\n\r\n[1] 0.9847335\r\n\r\n(iii) Residual vs Fitted value\r\nTo detect non-linearity, unequal error variances, and outliers, plot a scatter plot with residual on the y-axis and fitted values on the x-axis.\r\n\r\n\r\n#Using graphics package\r\nres <- residuals(model)\r\nfitted <- fitted(model)\r\nplot(x=unlist(fitted), y=unlist(res), xlab=\"Fitted Value\", ylab=\"Residual\", col=\"blue\")\r\nabline(h=0, col=\"red\")\r\n\r\n\r\n\r\n\r\nHowever, there’s a function in olsrr() package which can easy output the residual vs fitted value with a single line of code, which is more efficient. More customization needs to be done if we were to use graphics() package (shown above).\r\n\r\n\r\n# Using olsrr package\r\nols_plot_resid_fit(model)\r\n\r\n\r\n\r\n\r\n(iv) Residual Histogram\r\nA histogram can also be plotted with a single line of code using olsrr() package to detect if normality assumption has been violated.\r\n\r\n\r\n# Using olsrr package\r\nols_plot_resid_hist(model)\r\n\r\n\r\n\r\n\r\n3.2.4 Collinear Diagnostics\r\nIn this module, the following code chunk was explored to detect collinearity between variables. In the presence of multicollinearity, regression estimates are unstable and have high standard errors.\r\nThe following chunk of code was ran using olsrr() package and showed that the VIFs are less than 4 and hence there is little sign of multicollinearity that requires correction.\r\n\r\n\r\n# Using olsrr package\r\nols_coll_diag(model) #output VIF values and conditional index\r\n\r\n\r\nTolerance and Variance Inflation Factor\r\n---------------------------------------\r\n  Variables Tolerance      VIF\r\n1       GDP 0.8502620 1.176108\r\n2  Final_EI 0.8600236 1.162759\r\n3  Fuel_mix 0.9643066 1.037015\r\n\r\n\r\nEigenvalue and Condition Index\r\n------------------------------\r\n   Eigenvalue Condition Index    intercept          GDP     Final_EI\r\n1 3.728424273        1.000000 0.0001625225 0.0008966271 0.0002740949\r\n2 0.256834939        3.810093 0.0006613313 0.0028267622 0.0012910893\r\n3 0.013294254       16.746756 0.0071802453 0.6118807156 0.0942064483\r\n4 0.001446534       50.768964 0.9919959010 0.3843958951 0.9042283675\r\n     Fuel_mix\r\n1 0.017894663\r\n2 0.951913455\r\n3 0.025820588\r\n4 0.004371294\r\n\r\n# ols_vif_tol(model) to output only the VIF values\r\n# ols_eigen_cindex(model) to output only the conditional index\r\n\r\n\r\n\r\nAlternatively, we could test multi-collinearity using the vif function in caret() package as shown below. Nonetheless, the ols_coll_diag function in olsrr() package is still preferred as it provides more information e.g. tolerence and conditional index. This gives user wider option to decide which criterion they would like to use for their evaluation.\r\n\r\n\r\n# Using caret package\r\ncar::vif(model)\r\n\r\n\r\n     GDP Final_EI Fuel_mix \r\n1.176108 1.162759 1.037015 \r\n\r\n3.2.5 Model Fit Assessment\r\nIn this module, 3 sub-modules will be explored to determine the fit of the chosen model.\r\n(i) Residual Fit Spread plot\r\nUsing the olsrr() package, we can easily See how much variation in the data is explained by the fit and how much remains in the residuals with just one line of code. If the spread of the residuals is greater than the spread of the centered fit, the model is deemed as inappropriate and users should consider choosing other models (repeat the variable selection module).\r\n\r\n\r\n# Using olsrr package\r\nols_plot_resid_fit_spread(model)\r\n\r\n\r\n\r\n\r\n(ii) Part & Partial Correlations\r\nThe pcor function in the ppcor() package can calculate the pairwise partial correlations for each pair of variables given others. In addition, it gives us the p value as well as statistic for each pair of variables.\r\nHowever, the output shows that there’s an error as the pcor function does not allow missing values.\r\n\r\n\r\n# Using ppcor package\r\npcor(ghg_2018_ols)\r\n\r\n\r\nError in if (det(cvx) < .Machine$double.eps) {: missing value where TRUE/FALSE needed\r\n\r\nOn the contrary, the ols_correlations function in olsrr() package is able to handle missing values and computes the relative importance of the independent variables in determining the dependent variable i.e. Greenhouse gas emissions level.\r\n“Zero Order” shows the Pearson correlation coefficient between the dependent variable and the independent variable i.e. the higher the absolute value, the more correlated the dependent and independent variable are. “Partial” shows how much the estimated independent variable contributes to the variance in Y. While, “Part” shows the unique contribution of independent variables i.e. higher value indicates higher contribution (R-square) in explaining the model.\r\n\r\n\r\n# Using olsrr package\r\nols_correlations(model)\r\n\r\n\r\n               Correlations                \r\n------------------------------------------\r\nVariable    Zero Order    Partial    Part  \r\n------------------------------------------\r\nGDP              0.926      0.944    0.823 \r\nFinal_EI        -0.335      0.084    0.024 \r\nFuel_mix         0.399      0.649    0.245 \r\n------------------------------------------\r\n\r\n(iii) Observed vs Predicted plot\r\nTo access the fit of the model, we can plot the observed on the x-axis and fitted values on the y-axis using the plot function in graphics() package. A model is deemed as a good fit if the points are close to the diagonal line i.e. R-square will be higher.\r\n\r\n\r\nfitted <- fitted(model)\r\n\r\n# Exclude Liechtenstein and Switzerland as these two countries were dropped in the \r\n# ols regression model step due to missing values in the predictors Final_EI and Fuel_mix.\r\nghg_2018_ols_v2 <- ghg_2018_ols[-c(29, 31),]\r\n\r\n# Using graphics package\r\nplot(x=ghg_2018_ols_v2$GHG_emissions, y=fitted, ylab=\"Fitted Value\", xlab=\"GHG_emissions\", col=\"blue\")\r\nabline(a=0, b=1, col=\"blue\") #Add diagonal line\r\n\r\n\r\n\r\n\r\nExploring the olsrr() package, there is a function called ols_plot_obs_fit which plots the same graph as above, and includes the regression line (red). This function is preferred compared to plot function shown above as it is a single line code. In addition, the ols_plot_obs_fit function is able to exclude records which were dropped from the OLS model. This is unlike using plot function where additional code is needed to exclude records with missing values in the predictors.\r\n\r\n\r\n# Using olsrr package\r\nols_plot_obs_fit(model)\r\n\r\n\r\n\r\n\r\n4.0 Proposed Visualization\r\nBased on the exploration of different packages shown in Section 3, the proposed visualization for the OLS regression module, the types of data visualizations used, and corresponding rationales are illustrated below:\r\n\r\n\r\n\r\nInteractivity\r\nThe following interactive features (left panel shown above) are proposed to be incorporated in the shiny app to enhance usability and hence user experience:\r\nUsers can select the dependent and independent variables to be included in the model, and the year of analysis.\r\nUsers have the option to choose the different types of OLS methods to run to select the suitable list of predictors. List of methods are (i) All possibilities, (ii) Best subset, (iii) Stepwise forward/backward and (iv) Stepwise AIC forward/backward.\r\nBased on the list of predictors, users can also choose their preferred choice of test to run to check for any violation of OLS assumptions and check for model fit. List of tests are (i) Heteroskedasticity test (Bvensch Pagan Test; Score test; F-test), (ii) Residual diagnostics (QQ-plot; Normality test; Residual Histogram; Residual vs Fitted value), (iii) Collinear diagnostics and (iv) Model fit assessment (Residual Fit Spreadplot; Part & Partial Correlations; Observed vs Predicted plot).\r\nThe application eliminates the need for users to write any code chunks to run different permutations of OLS regression models and/or assumptions test.\r\nMajor Advantages of Incorporating Interactivity\r\nFlexible OLS regression analysis: To enable users to explore the different type of OLS regression methods available (e.g. stepwise forward/backward, best subset etc.) without the need to code. In addition, users have the choice of deciding which dependent and independent variables to include for their exploration.\r\nAssumption test modules: To enable users to determine if their chosen model violates the OLS assumptions without having the need to code. In addition, the different sub-modules ensures that all the necessary assumptions are checked. Various tests for each OLS assumption are also presented to give users the option to choose their preferred test. For instance, users can choose between QQ-plot, normality test or residual histogram to determine if there was violation in the normality assumption.\r\nThank you for reading :)\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-03-19-ordinary-least-square-model/ordinary-least-square-model_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2021-04-11T00:18:17+08:00",
    "input_file": "ordinary-least-square-model.utf8.md"
  },
  {
    "path": "posts/2021-03-19-exploration-data-analysis/",
    "title": "Exploration Data Analysis of factors affecting Greenhouse Gas Emission levels",
    "description": "Individual assignment for the visual analytics project.",
    "author": [
      {
        "name": "Wong Wei Sheng Dylan",
        "url": {}
      }
    ],
    "date": "2021-03-17",
    "categories": [],
    "contents": "\r\n\r\ntoc {\r\ntext-align: left\r\n}\r\nh1, h2, h3 {\r\ntext-align: left\r\n}\r\nbody {\r\ntext-align: justify}\r\n1.0 Purpose of Exploratory Data Analysis\r\nExploratory Data Analysis (EDA) is an approach that uses data visualisation to analyse data sets and to summarise their characteristics. It enables users to draw useful information and insights of the data sets with the use of graphical and non-graphical methods to reveal the distribution and statistics of selected variables. Many Data Science experts and literature state that EDA is a critical first step in data analysis as it helps to detect mistakes, check assumptions, determine relationships among the independent variables, and assess the direction and magnitude of relationships between the dependent and independent variablea (Seltman, 2018).\r\nSeltman, H. (2018, July 11). Carnegie Mellon University Statistics & Data Science. Retrieved from Howard Seltman: http://www.stat.cmu.edu/~hseltman/309/Book/Book.pdf\r\nMIT Critical Data. (2016). Secondary Analysis of Electronic Health Records. Springer. doi:10.1007/978-3-319-43742-2\r\nThis assignment explores the appropriate tidyverse methods, as well as the ExPanDaR package for EDA.\r\n2.0 Preparation of Data Visualisation\r\n2.1 Installing and launching R Packages\r\nInstead of the conventional way of installing the required packages right away, the code chunk below checks whether the required packages have already been installed and subsequently install those that are not before loading the packages.\r\n\r\n\r\npackages = c('tidyverse', 'ExPanDaR', 'kableExtra', 'ggstatsplot', 'corrplot', 'DT')\r\n\r\nfor(p in packages){ 'exclude FOR loop for Shiny>' \r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n2.2 Data Source\r\nThe data sets for this Visual Analytics Project were sourced from Eurostat Climate Change Database. Through the preliminary literature review conducted, the data sets used were narrowed down, wrangled, and subsequently merged into a single panel or cross-sectional time-series data where behavior of entities, in this case countries, are observed and recorded across time.\r\nThe list of literature reviewed and details of the data preparation could be found here.\r\n2.3 Loading the Dataset into R\r\nReading the csv file as GHG\r\n\r\n\r\nGHG <- read_csv(\"data/GHGproj_data.csv\")\r\n\r\n\r\n\r\n-- Column specification ----------------------------------------------\r\ncols(\r\n  Country = col_character(),\r\n  Year = col_double(),\r\n  GHG_emissions = col_double(),\r\n  CO2_emissions = col_double(),\r\n  CH4_emissions = col_double(),\r\n  NO2_emissions = col_double(),\r\n  GDP = col_double(),\r\n  Final_EI = col_double(),\r\n  Fuel_mix = col_double(),\r\n  Carbon_intensity = col_double(),\r\n  Renewables_share = col_double(),\r\n  Envt_taxes = col_double(),\r\n  Liquid_biofuels = col_double(),\r\n  Solar_thermal = col_double(),\r\n  Heat_pumps = col_double()\r\n)\r\n\r\nInspecting the structure of the dataset\r\n\r\n\r\nstr(GHG)\r\n\r\n\r\nspec_tbl_df[,15] [324 x 15] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\r\n $ Country         : chr [1:324] \"European Union - 27 countries (from 2020)\" \"European Union - 27 countries (from 2020)\" \"European Union - 27 countries (from 2020)\" \"European Union - 27 countries (from 2020)\" ...\r\n $ Year            : num [1:324] 2010 2011 2012 2013 2014 ...\r\n $ GHG_emissions   : num [1:324] 4188244 4075283 3996645 3912623 3776464 ...\r\n $ CO2_emissions   : num [1:324] 3443914 3338307 3262594 3181485 3046141 ...\r\n $ CH4_emissions   : num [1:324] 427118 419634 416827 411161 406015 ...\r\n $ NO2_emissions   : num [1:324] 219323 216187 213789 214272 216858 ...\r\n $ GDP             : num [1:324] 10977298 11321811 11388518 11517119 11781640 ...\r\n $ Final_EI        : num [1:324] 92.2 85.9 84.3 83.6 77.4 ...\r\n $ Fuel_mix        : num [1:324] 2.8 2.88 2.78 2.67 2.62 2.57 2.54 2.53 2.4 NA ...\r\n $ Carbon_intensity: num [1:324] 91.9 91.5 90.9 89.5 88.3 88.7 88 86.7 85.2 NA ...\r\n $ Renewables_share: num [1:324] 14.4 14.6 16 16.7 17.5 ...\r\n $ Envt_taxes      : num [1:324] 259023 271901 278204 284121 291030 ...\r\n $ Liquid_biofuels : num [1:324] 29689 28711 28422 29751 29152 ...\r\n $ Solar_thermal   : num [1:324] 34488 37949 40587 43246 45425 ...\r\n $ Heat_pumps      : num [1:324] 31200 43941 48603 53298 79990 ...\r\n - attr(*, \"spec\")=\r\n  .. cols(\r\n  ..   Country = col_character(),\r\n  ..   Year = col_double(),\r\n  ..   GHG_emissions = col_double(),\r\n  ..   CO2_emissions = col_double(),\r\n  ..   CH4_emissions = col_double(),\r\n  ..   NO2_emissions = col_double(),\r\n  ..   GDP = col_double(),\r\n  ..   Final_EI = col_double(),\r\n  ..   Fuel_mix = col_double(),\r\n  ..   Carbon_intensity = col_double(),\r\n  ..   Renewables_share = col_double(),\r\n  ..   Envt_taxes = col_double(),\r\n  ..   Liquid_biofuels = col_double(),\r\n  ..   Solar_thermal = col_double(),\r\n  ..   Heat_pumps = col_double()\r\n  .. )\r\n\r\nRemoving and Recoding variable\r\nFrom the inspection, it could be observed that there are several countries that have very long name. To find out the unique values in Country:\r\n\r\n\r\nunique(GHG$Country)\r\n\r\n\r\n [1] \"European Union - 27 countries (from 2020)\"                                     \r\n [2] \"European Union - 28 countries (2013-2020) and Iceland under the Kyoto Protocol\"\r\n [3] \"European Union - 28 countries (2013-2020)\"                                     \r\n [4] \"Belgium\"                                                                       \r\n [5] \"Bulgaria\"                                                                      \r\n [6] \"Czechia\"                                                                       \r\n [7] \"Denmark\"                                                                       \r\n [8] \"Germany (until 1990 former territory of the FRG)\"                              \r\n [9] \"Estonia\"                                                                       \r\n[10] \"Ireland\"                                                                       \r\n[11] \"Greece\"                                                                        \r\n[12] \"Spain\"                                                                         \r\n[13] \"France\"                                                                        \r\n[14] \"Croatia\"                                                                       \r\n[15] \"Italy\"                                                                         \r\n[16] \"Cyprus\"                                                                        \r\n[17] \"Latvia\"                                                                        \r\n[18] \"Lithuania\"                                                                     \r\n[19] \"Luxembourg\"                                                                    \r\n[20] \"Hungary\"                                                                       \r\n[21] \"Malta\"                                                                         \r\n[22] \"Netherlands\"                                                                   \r\n[23] \"Austria\"                                                                       \r\n[24] \"Poland\"                                                                        \r\n[25] \"Portugal\"                                                                      \r\n[26] \"Romania\"                                                                       \r\n[27] \"Slovenia\"                                                                      \r\n[28] \"Slovakia\"                                                                      \r\n[29] \"Finland\"                                                                       \r\n[30] \"Sweden\"                                                                        \r\n[31] \"Iceland\"                                                                       \r\n[32] \"Liechtenstein\"                                                                 \r\n[33] \"Norway\"                                                                        \r\n[34] \"Switzerland\"                                                                   \r\n[35] \"United Kingdom\"                                                                \r\n[36] \"Turkey\"                                                                        \r\n\r\nFrom the above, it is noticed that the variable Country consist of groups of countries that are not needed in the analysis. Also, Germany has a rather long name.\r\n\r\n\r\nG <- GHG %>%\r\n  filter(!Country %in% c(\"European Union - 27 countries (from 2020)\",\r\n                         \"European Union - 28 countries (2013-2020)\", \r\n                         \"European Union - 28 countries (2013-2020) and Iceland under the Kyoto Protocol\")) %>%\r\n  mutate(Country=recode(Country, \"Germany (until 1990 former territory of the FRG)\" = \"Germany\"))\r\n\r\n\r\n\r\n2.4 Overview of Dataset\r\nDatatable\r\nIn the propose Shiny application, the data table will be made available to users who not only want to have any overview of the data structure, but also the actual data set.\r\n\r\n\r\ndatatable(\r\n  data = G, \r\n  extensions = 'FixedHeader',\r\n  options =\r\n    list(\r\n      scrollX = TRUE,\r\n      scrollY = 500,\r\n      scrollCollapse = TRUE,\r\n      paging = FALSE\r\n    )\r\n)\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"none\",\"extensions\":[\"FixedHeader\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\"],[\"Belgium\",\"Belgium\",\"Belgium\",\"Belgium\",\"Belgium\",\"Belgium\",\"Belgium\",\"Belgium\",\"Belgium\",\"Bulgaria\",\"Bulgaria\",\"Bulgaria\",\"Bulgaria\",\"Bulgaria\",\"Bulgaria\",\"Bulgaria\",\"Bulgaria\",\"Bulgaria\",\"Czechia\",\"Czechia\",\"Czechia\",\"Czechia\",\"Czechia\",\"Czechia\",\"Czechia\",\"Czechia\",\"Czechia\",\"Denmark\",\"Denmark\",\"Denmark\",\"Denmark\",\"Denmark\",\"Denmark\",\"Denmark\",\"Denmark\",\"Denmark\",\"Germany\",\"Germany\",\"Germany\",\"Germany\",\"Germany\",\"Germany\",\"Germany\",\"Germany\",\"Germany\",\"Estonia\",\"Estonia\",\"Estonia\",\"Estonia\",\"Estonia\",\"Estonia\",\"Estonia\",\"Estonia\",\"Estonia\",\"Ireland\",\"Ireland\",\"Ireland\",\"Ireland\",\"Ireland\",\"Ireland\",\"Ireland\",\"Ireland\",\"Ireland\",\"Greece\",\"Greece\",\"Greece\",\"Greece\",\"Greece\",\"Greece\",\"Greece\",\"Greece\",\"Greece\",\"Spain\",\"Spain\",\"Spain\",\"Spain\",\"Spain\",\"Spain\",\"Spain\",\"Spain\",\"Spain\",\"France\",\"France\",\"France\",\"France\",\"France\",\"France\",\"France\",\"France\",\"France\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Croatia\",\"Italy\",\"Italy\",\"Italy\",\"Italy\",\"Italy\",\"Italy\",\"Italy\",\"Italy\",\"Italy\",\"Cyprus\",\"Cyprus\",\"Cyprus\",\"Cyprus\",\"Cyprus\",\"Cyprus\",\"Cyprus\",\"Cyprus\",\"Cyprus\",\"Latvia\",\"Latvia\",\"Latvia\",\"Latvia\",\"Latvia\",\"Latvia\",\"Latvia\",\"Latvia\",\"Latvia\",\"Lithuania\",\"Lithuania\",\"Lithuania\",\"Lithuania\",\"Lithuania\",\"Lithuania\",\"Lithuania\",\"Lithuania\",\"Lithuania\",\"Luxembourg\",\"Luxembourg\",\"Luxembourg\",\"Luxembourg\",\"Luxembourg\",\"Luxembourg\",\"Luxembourg\",\"Luxembourg\",\"Luxembourg\",\"Hungary\",\"Hungary\",\"Hungary\",\"Hungary\",\"Hungary\",\"Hungary\",\"Hungary\",\"Hungary\",\"Hungary\",\"Malta\",\"Malta\",\"Malta\",\"Malta\",\"Malta\",\"Malta\",\"Malta\",\"Malta\",\"Malta\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"Austria\",\"Austria\",\"Austria\",\"Austria\",\"Austria\",\"Austria\",\"Austria\",\"Austria\",\"Austria\",\"Poland\",\"Poland\",\"Poland\",\"Poland\",\"Poland\",\"Poland\",\"Poland\",\"Poland\",\"Poland\",\"Portugal\",\"Portugal\",\"Portugal\",\"Portugal\",\"Portugal\",\"Portugal\",\"Portugal\",\"Portugal\",\"Portugal\",\"Romania\",\"Romania\",\"Romania\",\"Romania\",\"Romania\",\"Romania\",\"Romania\",\"Romania\",\"Romania\",\"Slovenia\",\"Slovenia\",\"Slovenia\",\"Slovenia\",\"Slovenia\",\"Slovenia\",\"Slovenia\",\"Slovenia\",\"Slovenia\",\"Slovakia\",\"Slovakia\",\"Slovakia\",\"Slovakia\",\"Slovakia\",\"Slovakia\",\"Slovakia\",\"Slovakia\",\"Slovakia\",\"Finland\",\"Finland\",\"Finland\",\"Finland\",\"Finland\",\"Finland\",\"Finland\",\"Finland\",\"Finland\",\"Sweden\",\"Sweden\",\"Sweden\",\"Sweden\",\"Sweden\",\"Sweden\",\"Sweden\",\"Sweden\",\"Sweden\",\"Iceland\",\"Iceland\",\"Iceland\",\"Iceland\",\"Iceland\",\"Iceland\",\"Iceland\",\"Iceland\",\"Iceland\",\"Liechtenstein\",\"Liechtenstein\",\"Liechtenstein\",\"Liechtenstein\",\"Liechtenstein\",\"Liechtenstein\",\"Liechtenstein\",\"Liechtenstein\",\"Liechtenstein\",\"Norway\",\"Norway\",\"Norway\",\"Norway\",\"Norway\",\"Norway\",\"Norway\",\"Norway\",\"Norway\",\"Switzerland\",\"Switzerland\",\"Switzerland\",\"Switzerland\",\"Switzerland\",\"Switzerland\",\"Switzerland\",\"Switzerland\",\"Switzerland\",\"United Kingdom\",\"United Kingdom\",\"United Kingdom\",\"United Kingdom\",\"United Kingdom\",\"United Kingdom\",\"United Kingdom\",\"United Kingdom\",\"United Kingdom\",\"Turkey\",\"Turkey\",\"Turkey\",\"Turkey\",\"Turkey\",\"Turkey\",\"Turkey\",\"Turkey\",\"Turkey\"],[2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018,2010,2011,2012,2013,2014,2015,2016,2017,2018],[134315.86,123782.51,120922.5,120949.31,115215.77,119418.39,118172.44,118005.1,118455.74,60726.73,65995.81,60940.95,55666.99,58679.25,61920.68,59345.03,61682.76,57815.59,140878.15,139317.19,135117.65,129799.09,127667.1,129092.8,130895.42,129777.01,128139.42,63528.65,58300.45,53734.2,55472.55,51246.03,48630.24,50664.45,48353.71,48223.79,942338,919434.65,924147.41,941570.26,902388.74,906320.05,909052.47,894296.28,858368.68,21019.06,21058.29,19966.95,21848.04,21056.79,18109.74,19640.42,20923.49,19974.14,61277.54,57156.86,57752.7,57589.73,57325.32,59415.93,61491.44,61004.88,60934.54,118522.25,115593.36,112326.85,102705.1,99276.89,95482.14,91839.59,95585.97,92221.66,358858.91,358230.88,350958.86,324693.22,326815.62,338254.29,326890.38,340298.29,334255.16,511749.14,483180.6,483602.84,484664.36,453661.29,457542.26,458685.58,463536.96,444823.32,28033.73,27707.92,25887.46,24463.77,23697.28,24125.31,24275.34,25032.08,23792.8,513756.38,501288.05,482361.63,447072.72,426491.71,439431.75,436088.45,431324.46,427529.02,9515.26,9171.95,8628.8,7913.31,8288.74,8343.06,8791.75,8974.07,8810.37,12277.97,11485.95,11309.22,11241.29,11149.07,11196.14,11187.93,11235.96,11727.48,20887.59,21462.69,21396.48,20167.64,20110.69,20400.43,20420.35,20617.61,20266.83,12169.06,12046.25,11773.25,11234.48,10776.85,10290.1,10050.69,10235.7,10547.15,64856.75,63239.46,59569.73,56763.15,57391.17,60797.34,61257.34,63781.35,63219.56,2984.08,2992.34,3207.53,2894.18,2933.25,2255.29,1944.05,2156.18,2186.11,213739.54,199632.13,195725.07,195327.5,187613.97,195874.09,195442.33,193329.51,188196.79,84612.84,82286.89,79528.79,79971.98,76346.01,78509.78,79467.29,82023.36,78950.34,412926.32,412006.11,404526.56,401147.19,388469.51,391674.13,400268.49,414679.37,412856.37,68949.57,67536.23,65654.77,63779.43,63679.06,67865.49,66022.58,70638.91,67416.79,124173.34,129010.35,125638.73,116001,116214.83,116418.66,114287.85,116875.47,116115.12,19555.22,19565.61,19004.84,18307.64,16575.01,16750.9,17607.61,17366.76,17502.14,46405.54,45704.01,43185.82,42855.65,40791.62,41830.67,42316.79,43475.29,43348.35,75718.95,67965.06,62480.91,62916.01,58755.76,55140.79,58094.44,55389.67,56411.26,64467.31,60131.47,57294.3,55607.71,53846.36,53739.18,53285.94,52715.03,51779.24,4928.92,4680.96,4683.54,4688.54,4722.1,4799.81,4754.6,4835.51,4856.95,229.02,215.97,225.2,231.77,199.73,197.79,187.99,194,181.08,55468.97,54643.09,54121.12,53969.36,53930.25,54353.97,53472.21,52386.53,52022.4,54843.42,50730.84,52151.31,52927.58,48983.62,48514.86,48823.14,47971.62,46431.44,610563.41,563345.52,580018.77,566328.46,526081.1,508305.84,482674.84,471479.33,462102.32,398882.58,427830.53,447254.81,439325.69,458368.97,472595.01,497741.9,523752.84,520941.59],[114561.03,105046.06,102428.75,102674.4,96811.32,100981.34,99806.94,99456.28,100207.84,47862.93,53178.04,48349.01,42649.51,45169.33,48194.28,45353.72,47505.16,43551.6,118478.65,116018.37,111870.58,107242.3,104860.3,105604.43,107390.22,106359.74,105101.04,49634.31,44612.97,40201.56,42081.6,37849.49,35490.35,37286.64,35015.03,34932.48,832669.74,809426.95,813893.12,831316.28,792684.87,795816.36,800510.29,786654.55,755362.34,18784.96,18855.12,17684.98,19551.95,18755.95,15813.4,17377.65,18635.87,17710.95,41747.93,38052.22,38209.59,37235.3,36785.33,38545.33,40029.84,38910.19,38803.39,97361.5,94549.58,91430.1,81735.05,78659.8,74957.9,71368.36,74852.85,71797.87,283724.99,284543.85,278850.69,252763.82,255100.21,271687.35,260759.56,274671.26,269654.25,389058.83,362198.41,363459.85,365464.96,333576.6,338200.94,340725.83,345738.38,331542.58,21050.86,20682.44,19114.78,18454.62,17704.99,17840.75,18105.04,18737.69,17718.65,433688.02,422039.48,401554.71,367568.71,347860.8,360088.18,356556.2,351473.93,348085.03,8089.08,7767,7234.95,6554.42,6934.64,6960.17,7368.27,7517.66,7333.75,8565.2,7816.35,7527.85,7397.54,7203.24,7289.76,7238.54,7241.91,7871.09,13926.74,14271.08,14330.83,13340.27,13087.47,13297.14,13327.51,13545.85,13669.49,11219.29,11114.55,10851.4,10303.87,9825.22,9333.17,9080.25,9250.4,9568.52,52123.68,50322.15,46776.68,43704.81,43862.71,46627.61,47395.71,49684.85,49628.49,2581.76,2578.07,2762.07,2437.84,2442.4,1735.3,1399.49,1553,1531.58,182576.14,169522.4,166280.06,166167.23,159197.37,166818.38,166732.82,164897.82,160610.55,72011.84,69898.24,67209.1,67745.69,64084.43,66283.24,67112.27,69628.86,66719.68,334606.78,333952.03,326348.21,322225.44,309920.92,313099.15,324011.34,337340.42,337705.74,53189.09,51972.83,50150.85,48330.18,48107.23,52461.15,50612.32,54911.85,51619,84289.72,89518.25,86255.69,76875.89,77432.42,77725.63,75812.8,78077.49,76951.22,16376.44,16360.3,15821.76,15188.91,13531.94,13617.54,14416.66,14264.75,14487.84,38523.22,38111.95,36021.18,35577.84,33654.5,34484.24,34921.79,36087.34,36087.84,64168.66,56731.3,51283.81,51810.61,47699.55,44168.26,47282.35,44726.01,45901.54,53042.22,49166.9,46692.01,45086.34,43337.56,43336.76,42972.57,42306.82,41766.18,3660.12,3510.64,3502.89,3492.77,3469.68,3545.26,3497.54,3614.87,3674.53,190.81,176.78,185.31,192.54,161.24,159.71,149.88,156.28,143.75,46231.65,45513.36,45038.31,44982.4,44916.61,45350.5,44472.73,43562.54,43817.66,45166.25,41100.53,42368.61,43296.93,39340.66,38835.55,39290.44,38280.7,36994.42,509701.69,467438.78,485386.1,475451.83,436593.78,420098.22,396826.98,385718.09,377708.76,314380.03,339482.25,353666.21,345220.58,361675.46,381331.94,401239.74,425329.23,419194.75],[8794.36,8530.82,8392.13,8236.66,8118.96,8127.37,8101.19,7932.12,7848.74,7844.18,8056.33,7686.29,7564.7,7459.82,7450.42,7213.21,7001.14,6753.67,14445.97,14477.98,14460.44,13879.72,13878.48,13943.88,13478.72,13280.21,13154.94,7630.9,7471.72,7364.22,7271.93,7238.57,7165.8,7217.32,7244.87,7332.63,59181.2,58067.17,58804.79,58219.39,56991.08,56767.56,55506.92,54738.29,52641.89,1243.7,1200.65,1218.33,1216.18,1181.3,1146.79,1125.24,1129.42,1117.41,12070.12,12037.56,12336.89,12672.87,12966.85,13290.14,13678.84,13991.91,13984.98,11068.17,10935.66,10772.7,10532.9,10323.79,10151.67,9804.96,10059.23,10091.07,40524.75,40639.63,39441.69,38489.71,37908.23,39189.64,39150.2,39586.18,39722.33,61810.94,60614.45,59285.11,58767.07,58588.39,57902.32,57340.37,56974.18,56096.01,4145.18,4095.33,4048.49,3812.17,3854.51,3946.53,4085.02,4069.11,3888.72,46980.03,45569.45,46168.17,44770.84,43904.67,43883.6,43399.27,43657.97,43032.65,828.99,834.32,823.79,817.8,818.27,829.94,855.98,872.96,882.32,1791.27,1742.77,1784.29,1806.24,1853.73,1755,1780.87,1813.31,1733.57,3684.25,3524.12,3532.88,3465.48,3471.77,3424.57,3332.56,3277.02,3064.33,591.66,567.31,559.26,563.56,576.5,582.38,586.33,593.67,587.66,7713.51,7630.45,7680.18,7511.4,7329.74,7352.83,7302.65,7374.46,7272,180.44,168.28,166.5,156.18,172.43,181.91,190.77,190.85,199.85,19405.99,18859.43,18438.37,18425.57,18008.29,18202.62,18329.05,18012.19,17308.78,7308.66,7108.46,7006.74,6907.1,6777.45,6702.06,6642.61,6626.11,6438.63,51156.13,49992.26,49743.49,49879.18,49246.96,49805.78,49271.06,49237.84,48753.22,10153.62,10049.81,9806.39,9566.38,9435.55,9220.02,9142.25,9168.2,9126.42,31036.71,30199,30694.1,30158.62,30026.69,29544.31,29011.8,28706.54,28183.63,2157.64,2149.57,2103.53,2047.63,1946.78,2003.6,2041.54,1994.41,1936.16,4797.65,4862.48,4480.39,4604.27,4341.75,4530.99,4578.92,4616.36,4442.03,5354.96,5183.2,5128.19,4989.56,4892.21,4856.62,4728.34,4605.28,4540.85,5216.54,5066,4899.56,4828.16,4701.77,4595.54,4510.99,4470.49,4380.55,681.86,660.19,633.43,638.58,650.42,656.43,647.9,637.05,630.02,19.11,19.47,19.92,19.11,18.55,18.38,18.49,17.99,18.17,5389.77,5236.98,5212.15,5146.7,5087.82,5055.27,4949.49,4867.32,4804.55,5154.27,5099.14,5070.77,5006.73,5003.62,4974.09,4930.19,4868.49,4839.99,63767.39,61094.11,59596.53,55604.01,53487.09,52693.66,51113.74,51537.33,51514.3,51319.22,53694.48,57091.96,55469.06,57304.73,51359.76,53858.25,54231.17,57576.12],[7587.12,6374.29,6306.82,6146.26,6181.75,6035.06,5762.55,5978.51,5702.29,4337.75,3991.73,4066.36,4463.95,4925.23,5035.81,5360,5342.27,5239.79,5401.23,6039.32,5894.47,5670.86,5770.81,6172.24,6503.63,6420.31,6072.34,5381.23,5375.09,5284.16,5280.13,5377.63,5387.83,5537.97,5597.83,5398.14,36235.58,37539.21,36863.34,37406.74,38050.34,38667.07,37834.3,37540.91,35518.29,813.13,817.42,868.42,870.15,899.31,924.1,899.43,923.86,912.19,6345.59,5938.67,6097.94,6536.82,6356.32,6354.99,6465.8,6748.96,6953.7,5489.52,5245.24,4817.3,4517.96,4310.8,4248.15,4302.04,4365.16,4284.88,18197.72,17225.52,16552.79,17262.36,17915.72,18138.8,17898.07,18529.65,18413.54,41849.59,40384.42,40598.01,40375.1,41591.48,41424.98,40365.56,41871.46,40183.06,2449.83,2524.58,2317.71,1721.74,1656.25,1850.32,1595.35,1730.57,1685.85,19078.12,18556.81,19049.93,18289.46,17833.83,17859.26,18099.53,18007.03,17694.85,321.21,308.62,303.41,280.19,275.5,283.05,290.4,295.58,297,1748.09,1748.12,1813.36,1837.8,1877.41,1921.7,1916.71,1933.33,1873.76,3013.85,3356.46,3178.41,2948.72,3085.43,3105.46,3033.2,3068.37,2955.35,297.15,300.09,295.55,296.08,299.36,297.59,308.34,312.14,313.14,3727.61,3918.95,3855.72,4196.83,4429.95,4532.27,4802.04,4801.38,4858.7,52.5,45.72,45.9,45.01,45.71,45.42,44.58,42.18,42.77,8628.94,8413.97,8250.49,8430.43,8558.24,8808.22,8476.74,8657.65,8349.12,3388.64,3481.3,3449.44,3434.52,3518.69,3528.5,3620.06,3561.8,3526.08,20915.01,21244.43,21331.2,21495.4,21045.78,20317.55,20976.16,21970,22106.01,3460.79,3196.64,3213.8,3223.44,3347.06,3238.08,3165.76,3249.92,3216.74,7792.69,8138.51,7431.57,7602.83,7322.68,7450.66,7512.6,7852.58,8618.21,735.56,747.13,750.22,722.45,730.36,752.78,760.72,735.2,753.48,2442.79,2083.65,2009.15,1994.54,2116.21,2057.75,2130.4,2016.83,2098.54,4808.35,4668.63,4660.7,4699.46,4759.14,4764.81,4777.34,4819.6,4768.97,4823.49,4522.11,4483,4523.2,4576.55,4597.77,4576.74,4757.28,4503.64,305.51,302.1,307.15,302.44,331.04,313.2,311.48,322.36,305.47,9.29,9.67,9.53,9.24,9.13,9.18,9.02,8.97,9.13,2474.66,2469.03,2474.06,2446.84,2454.43,2491.42,2424.1,2380.63,2349.12,3012.86,2941.78,3001.28,2901.27,2881.23,2910.24,2889,3082.52,2879.65,19738.18,18950.89,18818.66,18748.56,19339.65,18846.85,18776.56,19139.87,19043.41,29601.83,30673.42,31812.16,33826.18,34280.03,35025.53,37403.48,38841.75,38923.81],[363140.1,375967.8,386174.7,392880,403003.3,416701.4,430085.3,444991.1,460419.4,38058.1,41268.9,42048.6,41903.5,42890.3,45690.9,48640.2,52329,56111.8,157920.8,165202.2,162587.5,159461.5,157821.3,169558.2,177438.5,194132.9,210927.8,243165.4,247879.9,254578,258742.7,265757,273017.6,283109.7,294808.2,302361.1,2564400,2693560,2745310,2811350,2927430,3026180,3134740,3259860,3356410,14863.1,16829.2,18050.7,19033.4,20180,20782.2,21931.5,23857.7,25937.6,167673.7,170950.9,175103.9,179616.3,195148.1,262853.3,270809.5,300386.9,326986.1,224124,203308.2,188388.7,179616.4,177349.4,176110.2,174236.9,177151.9,179727.3,1072709,1063763,1031099,1020348,1032158,1077590,1113840,1161867,1204241,1995289,2058369,2088804,2117189,2149765,2198432,2234129,2297242,2360687,45195.1,44924.6,44007.9,43806.3,43398.6,44612,46619.3,49238.5,51950.1,1611279.4,1648755.8,1624358.7,1612751.3,1627405.6,1655355,1695786.8,1736592.8,1771565.9,19410,19803,19440.8,17995,17430.2,17884,18929.3,20119.9,21432.5,17872.8,20310.5,22219,22966.3,23613.9,24560.9,25360.3,26962.3,29142.5,28033.8,31317.2,33410.2,35039.5,36581.3,37345.7,38889.9,42276.3,45491.1,40177.8,43164.6,44112.1,46499.6,49824.5,52065.8,54867.2,56814.2,60053.1,99576.3,102020.6,99984,102034.3,106061.3,112701,116129.8,126891,135931,6815.8,6924.6,7364.5,7944.3,8751.1,9996.7,10589.2,11703.5,12587.4,639187,650359,652966,660463,671560,690008,708337,738146,773987,295896.6,310128.7,318653,323910.2,333146.1,344269.2,357608,369341.3,385361.9,362190.9,379860,387947,392310.7,408967.8,430465.8,427091.8,467426.6,497842.3,179610.8,176096.2,168295.6,170492.3,173053.7,179713.2,186489.8,195947.2,205184.1,125472.3,131841.6,132711.2,143690.4,150708.6,160149.8,170063.4,187772.7,204496.9,36363.9,37058.6,36253.3,36454.3,37634.3,38852.6,40443.2,43009.1,45862.6,68188.7,71304.5,73575.8,74448.8,76269.8,79767.6,81051.5,84532.2,89505.5,188143,197998,201037,204321,206897,211385,217518,226301,233696,374695.2,412844.7,430037.1,441850.7,438833.9,455494.7,466266.5,480025.5,470673.1,10383.4,10934.3,11479.9,12132.9,13472.6,15795.3,18804.2,21917.7,22207.3,null,null,null,4812.4,5021.7,5649.1,5637.7,5804.3,5822.5,323760.9,358339.5,396523.5,393408.7,375947.3,347632.1,333471.3,353316.4,370294.3,455933.7,520201.4,538439,536632.9,553942.2,632770.5,628729.6,623994,623042.2,1872175.5,1912869.3,2111028.9,2096338,2311080.2,2644716.5,2434119.2,2359789.9,2420897.2,584855.7,600961.4,683587.3,719726.6,707000.8,777042.3,785618.9,760497.1,658464.1],[114.09,103.22,99.68,102.2,92.09,91.67,92.51,89.94,87.55,104.58,107.06,102.52,99.36,96.2,95.96,95.13,93.51,89.03,113.2,106.67,104.96,101.63,93.55,90.03,91,88.61,83.75,84.9,79.3,75.5,73.13,68.72,67.75,68.16,65.39,63.48,91.48,82.16,81.85,82.88,74.76,72.74,72.85,71.39,68.47,130.57,116.84,110.73,108.32,99.14,96.33,94.31,92.94,90.42,78.78,71.55,67.15,66.38,62.04,46.3,48.03,44.98,43.43,80.4,87.86,82.2,73.18,72.9,76.36,79.42,76.09,72.25,79.17,77.32,74.35,72.9,69.1,66.13,66.62,65.89,66.01,86.2,80.82,82.07,81.49,74.07,72.6,73.49,71.59,68,110.63,104.17,98.1,96.72,89.92,90.77,88.95,89.22,85.57,80.57,75.13,74.16,73.78,69.83,68.97,67.01,65.42,64.66,89.56,88.83,86.57,83.16,84.61,83.84,82.82,83.04,78.09,144.77,126.23,121.49,115.59,111.43,102.39,101.61,102.75,102.42,100.77,91.8,87.81,82.65,80.4,77.8,80.47,79.33,79.61,129.45,119.49,114.2,107.42,96.25,90.05,86.92,89.64,89.81,105.38,101.12,94.8,93.2,86.83,87.8,90.94,91.69,86.06,54.88,54.94,52.06,49.46,54.52,47.87,46.23,42.97,47,96.55,88.08,86.51,85.35,77.74,76.19,78.42,76.03,73.55,104.14,96.64,91.87,93.43,87.14,84.87,85.44,85.48,79.79,108.07,98.68,94.25,92.17,86.26,81.2,86.67,88.76,85.58,82.51,81.59,76.13,73.6,71.67,69.26,69.47,69.71,68.1,85.54,83.44,79.68,75.04,71.55,68.03,64.97,62.64,59.97,116.91,113.8,108.48,105.79,98,95.78,97.86,94.74,89.68,110.65,101.65,93.43,95.16,86.31,82.78,90.36,96.93,93.48,163.86,150.28,150.63,148.94,145.68,138.22,142.83,138.01,136.09,112.2,102.18,99.7,97.94,92.48,87.9,90.33,87.82,85,268.58,274,274.92,274.47,261.15,253.31,241.84,239.4,246.7,null,null,null,null,null,null,null,null,null,90.91,81.46,77.43,76.01,74.11,79.4,85.73,79.5,74.27,null,null,null,null,null,null,null,null,null,81.76,74.51,73.63,72.75,66.14,63.63,64.64,63.19,62.41,76.94,72.37,70.8,65.66,62.76,61.23,63.75,67.61,66.44],[1.39,1.41,1.37,1.57,1.65,1.64,1.54,1.5,1.52,4.71,4.87,4.51,4.2,3.57,3.53,3.51,3.81,3.64,7.82,7.87,8.13,8.01,7.1,6.79,6.58,7.16,6.85,0.93,1.03,0.85,0.97,0.98,0.87,0.88,0.95,0.97,2.08,2.45,2.14,2.08,2.07,2.38,2.27,2.22,1.87,1.31,1.6,1.45,1.4,1.73,0.61,0.63,0.75,0.91,3.18,3.05,3.22,3.37,3.31,3.17,2.76,2.71,2.86,1.64,1.19,1.39,1.45,1.57,1.43,1.25,1.24,1.86,0.62,0.99,0.67,0.6,0.59,0.57,0.52,0.61,0.58,1.2,0.87,0.93,0.78,0.78,0.8,0.76,0.8,0.84,2.12,2.1,1.97,1.79,1.67,1.26,1.02,1.12,1.03,0.51,0.84,0.82,0.62,0.68,0.48,0.62,0.43,0.54,1.02,0.46,0.01,0.01,0.16,0.26,0,0.19,0.86,2.33,2.59,1.98,1.58,1.41,1.15,0.95,0.95,1.03,3.74,4.38,4.08,4.77,4.04,3.3,3.15,3.08,3.13,1.72,1.5,1.41,1.28,1.48,1.39,1.48,1.26,1.13,1.41,1.55,1.43,1.14,1.02,1.04,1.16,1.59,1.25,0,0,0,0,0,0,0,0,0,0.23,0.23,0.23,0.17,0.19,0.18,0.2,0.23,0.22,1.4,1.36,1.37,1.34,1.38,1.39,1.38,1.24,1.14,20.17,19.05,19.55,19.18,18.51,17.63,17.03,16.28,15.29,0.29,0.12,0.13,0.12,0.09,0.08,0.08,0.07,0.06,2.43,3.49,3.39,3.19,3.11,3.6,3.32,2.73,2.63,0.97,1.07,1.04,1,0.99,0.83,0.74,0.78,0.83,6.86,7.43,5.33,5.43,5.13,4.93,4.03,4.1,4.29,0.88,0.89,0.44,0.45,0.44,0.47,0.58,0.55,0.51,1.14,1.3,1.24,1.17,1.19,1.24,1.16,1.17,1.17,3.58,3.6,3.56,3.61,3.17,3.26,0,0,0,null,null,null,null,null,null,null,null,null,2.53,2.36,2.49,2.48,2.53,2.5,2.75,2.65,2.43,null,null,null,null,null,null,null,null,null,1.81,1.82,1.8,2.18,2.26,1.91,1.68,1.55,1.39,19.71,17.23,17.21,13.56,13.31,13.13,13.23,11.74,9.79],[90.6,87.7,90.7,86.9,85.8,90.1,83.6,83.5,86.8,117.9,122.1,115.5,109,110.1,111.8,106.5,108.5,99.1,83.6,85.3,82.9,78.4,78.6,79.4,81.3,77,75.2,87.6,84.2,78.4,81.9,77.3,72.5,74,68.8,68.7,93.3,95.4,95.4,95.4,94.7,94.9,94.7,92,90,105.5,104.8,99.8,98.8,101.7,92.5,92.4,102.4,90.8,90.8,90.2,89.4,90.3,88,87.3,86,84.6,82.8,94.7,96.3,93.3,93.3,89.5,85.2,81.6,83,81.4,87.4,88.7,87.7,84.8,86.6,88.6,83.9,84.6,83,88.5,83.7,84.4,84.5,79.6,79.7,81.9,82.9,79.6,96.8,97.7,96.1,94,93.3,90.7,92,90.9,88,92,92.2,92.1,87.8,87.8,87.6,87.5,83.4,83.7,103.3,101,100.5,100,100.8,100.5,99.9,97.4,93.5,96.2,91.3,84.5,85.1,83.3,86,86.6,83.4,84.1,124.9,112.6,111.8,112.3,107.9,105.7,106.3,101,102.3,104.5,105,105.6,103,100.5,96.3,93,91.9,91.4,84.3,82.9,81.3,79.5,78.8,79,80,79.4,78.7,87.4,87.4,89.3,87.5,86.7,72.5,61.7,59.8,57.4,97.3,96.2,94.4,96,96.9,99.6,97.5,95.1,94,90.2,89.3,86.1,85.5,82.5,83.1,83.7,85,85,93.2,92.2,94.1,92.5,92,92.2,90.8,90.2,88.6,84.8,85.8,88.4,84.2,81.9,86.9,85,88.1,85.4,90.7,93.4,92.8,91.8,92,90.8,88.4,86.2,84.3,96.5,96.7,97.1,95.1,86.7,88.4,91,87,88.8,90.4,91.9,88,86.6,84.7,84.6,84.9,83.2,83.6,99.9,90.9,84.9,87.3,78.7,75.8,78.2,73.1,73.6,91,83.2,79,77.1,74.9,78.6,73.5,71,69.2,56.6,49,48.7,45.7,46,48.5,49.7,47.8,44.4,null,null,null,null,null,null,null,null,null,86.3,97.7,95.3,82.5,93.8,92.4,93.5,86.9,86.4,null,null,null,null,null,null,null,null,null,98.2,97,98.7,97.7,94.8,89.6,86,84.3,82.9,97.4,97.9,97.3,96.5,95.3,92.1,92.1,90.3,90.1],[6.002,6.275,7.089,7.65,8.043,8.026,8.752,9.113,9.478,13.928,14.152,15.837,18.898,18.05,18.261,18.76,18.701,20.592,10.514,10.945,12.813,13.927,15.073,15.067,14.924,14.796,15.138,21.889,23.39,25.466,27.174,29.323,30.866,32.052,34.677,35.413,11.667,12.453,13.543,13.76,14.385,14.906,14.889,15.476,16.673,24.599,25.347,25.521,25.321,26.141,28.528,28.715,29.168,29.993,5.781,6.57,7.006,7.582,8.568,9.044,9.165,10.465,10.888,10.077,11.153,13.741,15.326,15.683,15.69,15.391,17.3,18.051,13.831,13.247,14.314,15.347,16.156,16.259,17.423,17.563,17.454,12.672,10.859,13.274,13.908,14.422,14.861,15.501,15.904,16.444,25.103,25.389,26.757,28.04,27.817,28.969,28.267,27.28,28.047,13.022,12.88,15.44,16.74,17.08,17.524,17.413,18.265,17.774,6.173,6.261,7.137,8.456,9.173,9.929,9.859,10.503,13.898,30.375,33.478,35.709,37.037,38.629,37.538,37.138,39.019,40.029,19.64,19.944,21.438,22.69,23.594,25.75,25.613,26.039,24.695,2.85,2.856,3.114,3.499,4.469,4.987,5.361,6.198,8.973,12.742,13.972,15.53,16.205,14.618,14.495,14.377,13.543,12.535,0.979,1.85,2.862,3.76,4.744,5.119,6.208,7.219,7.968,3.917,4.524,4.659,4.691,5.415,5.668,5.802,6.456,7.34,31.207,31.553,32.736,32.666,33.553,33.502,33.374,33.141,33.806,9.3,10.354,10.97,11.463,11.614,11.888,11.4,11.117,11.477,24.155,24.607,24.578,25.703,29.511,30.518,30.868,30.614,30.206,22.834,21.186,22.825,23.886,24.845,24.785,25.032,24.454,23.875,21.08,20.936,21.549,23.161,22.461,22.88,21.977,21.658,21.378,9.099,10.348,10.453,10.133,11.713,12.883,12.029,11.465,11.896,32.294,32.664,34.341,36.728,38.78,39.321,39.013,40.917,41.16,46.595,48.135,50.027,50.792,51.817,52.947,53.328,54.157,54.651,70.975,72.36,73.834,73.894,73.079,71.518,74.824,73.487,76.69,null,null,null,null,null,null,null,null,null,60.349,63.56,64.459,65.728,68.213,68.212,69.065,70.595,71.803,null,null,null,null,null,null,null,null,null,3.862,4.392,4.461,5.524,6.737,8.385,9.032,9.858,11.138,null,null,null,null,null,null,null,null,null],[8879,9668.4,9735,9905.5,10254.53,10618.06,11469.55,11992.03,12413.74,1051.56,1107.65,1136.21,1227.05,1209.72,1437.71,1418.92,1510.71,1648.09,3577.44,3846.2,3606.43,3331.14,3346.96,3477.33,3728.38,3896.98,4129.14,9768.83,9957.39,10098.51,10712.56,10621.56,10847.35,11065.36,10808.26,10933.41,55159.91,58647.28,58184.71,57937.31,58282,58057.97,58432.1,59248.7,59724,431.6,454.26,489.06,484.64,533.06,562.85,645.18,680.74,709.14,4103.86,4204.11,4173.44,4444.87,4683.91,4977.24,5117.49,5232.37,5119.3,5977.97,6016.97,6264.84,6584.97,6627.92,6748.98,6655.95,7129,6823.05,17672,16866,16325,19611,19344,20821,20792.96,21371.04,22075,37779,39738.75,41074,42996.79,43880,47646,50287,53222,56250,1370.13,1200.67,1125.28,1250.38,1417.33,1545.3,1672.19,1784.15,1920.44,44751,49888,56251,55256.99,58069.99,56143.99,59480.99,57999.99,58574.99,532.21,543.3,497.85,487.97,523.06,540.2,551.48,608.79,630.04,530.64,604.8,660.54,723.45,802.84,864.21,918.95,947.7,996.47,512.22,527.68,548.13,587.26,633.88,691.52,747.93,807.39,899.72,958.34,1018.62,1038.8,1006.29,980.13,952.74,930.37,948.85,1017.99,2567.03,2514.28,2558.02,2628.66,2725.45,2911.31,3087.33,3240.04,3228.33,190.62,211.27,205.49,205.67,239.77,269.9,277.14,303.05,321.75,22310,22186,21178,21564,22216,22925,23754,24635,25877,6912.78,7509.33,7665.35,7725.21,7974.95,8203.7,8384.12,8844.69,8855.84,9831.03,10002.18,10055.44,9503.28,10562.09,11401.73,11556.89,12512.09,13474.36,4361.59,4084.03,3681.58,3757.66,3932.13,4344.47,4819.31,5051.86,5271.9,2650.8,2573.54,2667.42,2957.37,3587.48,3951.96,4085.39,3640.25,4033.41,1309.93,1276.31,1388.87,1427.96,1452.67,1509.4,1563.49,1601.81,1609.04,1419.64,1726.98,1743.9,1872.7,1932.31,1997.55,2019.35,2149.02,2202.67,4960.9,5908.19,5911.96,5959.06,5918.03,6032.6,6655.26,6678.08,6816.39,9452.99,9618.82,9939.57,9971.1,9277.79,9558.77,9981.52,9864.25,9442.11,223.28,237.97,261.31,258.24,285.75,336.89,385.34,482.13,470.25,33.86,39.24,38.7,37.13,41.78,46.95,46.26,47.07,43.56,8595.75,8916.01,9265.83,9323.02,8751.68,8186.4,8044.15,8123.51,8106.28,6352.3,7010.77,7273.62,7089.36,7314.94,8502.46,8679.54,8642.14,8700.16,46013.25,46561.74,51005.7,50929.05,55785.74,63868.08,58326.01,55848.83,56737.23,22340.66,21403.55,23148.97,26024.25,23839.13,26459.69,26534.3,24392.9,15967.52],[1374,1374,1105.8,1105.145,1105.145,929.145,929.145,927.3,927.3,192.6,93.738,63.738,85.638,187.738,186,187,187,187,580,580,580,580,580,580,580,600,600,104.78,42.134,50.542,44.586,42.148,30.23,14.738,10.122,12.588,8448,7127,6862,7020,6709,6773,8743,8907,null,0,0,0,0,0,0,0,0,0,42.37,34.32,29.92,29.92,29.92,29.92,29.92,35.2,35.2,900,746.808,746.808,980.535,973.104,993.924,993.924,1045.449,1045.449,4750,4805,4226,4707,4701,4701,4701,4701,4701,3851.75,3851.75,3851.75,3851.75,3891.75,3891.75,3959.684,3999.684,3999.684,64,64,69,69,63.838,63.838,41,41,41,2544.194,2544.194,2544.194,2544.194,2544.194,2544.194,2544.194,2544.194,2544.194,14.08,14.08,14.08,14.08,14.08,14.08,5,5,5,238.472,198,198,192,192,192,192,192,192,210,210,200,200,200,160,160,160,176,0,0,0,0,0,0,0,0,0,329,329,448,450,484,644,656.5,675.7,718,1.107,1.107,1.4,1.4,1.4,1.4,1.4,1.4,0,1306,2030,2051,2517,2196,2176,2348,2526,2774,1482,1482,1482,1482,1501,1501,1511.5,1511.5,1511.5,1403,1419,1609,1455,1496,2011,2009,2179.02,2430.15,643,695,733.966,773.31,772.879,772.879,772.879,772.879,772.879,0,0,295.5,295.5,295.5,280,280,280,280,25,25,25,25,0,0,0,0,0,241,274,223,262,236,289,243,243,251,405,412,415,445,445,571,571,591,607,539.438,358.405,596.24,621.399,490.024,570.813,395.692,385,746,0,0.015,0.067,0.073,0.073,0,0,0,0,null,null,null,null,null,null,null,null,null,0,0,0,0,0,0,120,120,120,null,null,null,null,null,null,null,null,null,882.068,879.398,1226.83,1247.41,1157.141,1005.297,1203.709,1331.211,1298.324,812.2,561.217,457.476,0,0,0,0,0,0],[371,420,527,570,614.6,660.7,701.2,728.6,748.3,194,230,256,309,327,344,354,378,401.498,307,359,398,427,454,480,506,524,539,480,556,597,712,810,1015.929,1368.997,1542.384,1830.555,13914,15100,16140,17020,17746,18339,18812,19091,19269,0,0,0,0,0,0,0,0,0,184.576,223.391,251.144,277.619,300.183,319.946,343.251,311.216,333.407,4100,4090,4122,4181,4287,4390,4477,4596,4691,2376.296,2633.597,2861.253,3094.149,3348.055,3581.906,3795.584,3997.082,4202.77,1447,2204.051,2461.061,2663.917,2806.867,2917.493,3005.947,3094.442,3218.301,92,106,125,143,162,183,204,226.7,246.1,2415,2744,3018,3318,3538,3724,3891,4050.666,4196.376,909,937,959,977,993,1009,1025,1043.86,1064.662,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28.644,35.076,44.829,48.325,52.428,56.207,59.55,62.909,66.196,140,170,220,230,250,280,292,308,329,40,54.8,60.03,63.24,67,70,71.6,72.249,72.858,576,601,615,633,644,647,652,650,657,4559.008,4776.298,4929.658,5059.018,5165.108,5261.228,5288.813,5172.185,5123.303,656,909,1200,1470,1730,1900,2016,2131,2433,752,876,967,1024,1079,1121,1176,1231.105,1288.104,104,105,110,129,143,159,174,189,189,178.433,192.939,212.33,220.461,221.86,223.88,225.653,225.32,224.812,123,146,154,160,166,171,177,201,206,31,34,37,41,45,50,55,60,66,510,446,322,475,475,478,475,472,466,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null,null,null,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null,null,null,1038,1173,1252,1307,1352,1383,1400,1428,1443,12350,18000,18000,19300,19490,19690,20080,20000,20200],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,415.584,515.574,629.003,749.481,870.743,1005.612,1186.316,1408.806,1680.522,0,0,0,0,0,0,0,0,0,4818.64,5440.907,6146.444,6813.957,7454.394,8079.621,8767.411,9524.312,10340.421,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6925.743,7767,0,0,0,0,12940.178,15685.476,18547.995,21771.547,25073.182,24316.15,27643.65,30813.49,34123.644,37483.989,41265.666,45400.566,49656.859,54358.767,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126842.031,124040.639,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.541,4.541,0,0,0,0,0,0,0,0,81.94,9.25,11.796,16.285,19.69,24.499,35.248,40.951,12.442,14.65,0,0,0,0,0,0,0,93,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1334.267,1482.137,1640.773,1801.34,1976.87,2162.28,2355.324,2556.448,2764.184,306.233,387.362,477.184,629.757,832.003,1032.827,1249.147,1490.812,1778.91,0,0,0,0,9157.721,9247.524,9302.101,9609.234,10000.536,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8460,8880,9160,9250,9250,10670,10670,11280,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null,null,null,4090,4654,5077,5444,5758,6071,6395,6724,7155,null,null,null,null,null,null,null,null,null,18616.604,19861.748,21167.387,22696.891,24189.318,25828.608,25411.351,25390.233,25708.863,0,0,0,0,0,0,0,0,0]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Country<\\/th>\\n      <th>Year<\\/th>\\n      <th>GHG_emissions<\\/th>\\n      <th>CO2_emissions<\\/th>\\n      <th>CH4_emissions<\\/th>\\n      <th>NO2_emissions<\\/th>\\n      <th>GDP<\\/th>\\n      <th>Final_EI<\\/th>\\n      <th>Fuel_mix<\\/th>\\n      <th>Carbon_intensity<\\/th>\\n      <th>Renewables_share<\\/th>\\n      <th>Envt_taxes<\\/th>\\n      <th>Liquid_biofuels<\\/th>\\n      <th>Solar_thermal<\\/th>\\n      <th>Heat_pumps<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"scrollX\":true,\"scrollY\":500,\"scrollCollapse\":true,\"paging\":false,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9,10,11,12,13,14,15]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\r\nDescriptive Statistics\r\n\r\n\r\nt <- prepare_descriptive_table(G)\r\nt$kable_ret  %>%\r\n  kable_styling(\"condensed\", full_width = F, position = \"center\")\r\n\r\n\r\n\r\nTable 1: Descriptive Statistics\r\n\r\n\r\n\r\n\r\nN\r\n\r\n\r\nMean\r\n\r\n\r\nStd. dev.\r\n\r\n\r\nMin.\r\n\r\n\r\n25 %\r\n\r\n\r\nMedian\r\n\r\n\r\n75 %\r\n\r\n\r\nMax.\r\n\r\n\r\nYear\r\n\r\n\r\n297\r\n\r\n\r\n2,014.000\r\n\r\n\r\n2.586\r\n\r\n\r\n2,010.000\r\n\r\n\r\n2,012.000\r\n\r\n\r\n2,014.000\r\n\r\n\r\n2,016.000\r\n\r\n\r\n2,018.00\r\n\r\n\r\nGHG_emissions\r\n\r\n\r\n297\r\n\r\n\r\n152,056.937\r\n\r\n\r\n207,515.414\r\n\r\n\r\n181.080\r\n\r\n\r\n20,923.490\r\n\r\n\r\n59,569.730\r\n\r\n\r\n135,117.650\r\n\r\n\r\n942,338.00\r\n\r\n\r\nCO2_emissions\r\n\r\n\r\n297\r\n\r\n\r\n123,775.451\r\n\r\n\r\n175,144.754\r\n\r\n\r\n143.750\r\n\r\n\r\n17,684.980\r\n\r\n\r\n46,231.650\r\n\r\n\r\n114,561.030\r\n\r\n\r\n832,669.74\r\n\r\n\r\nCH4_emissions\r\n\r\n\r\n297\r\n\r\n\r\n16,075.657\r\n\r\n\r\n19,472.298\r\n\r\n\r\n17.990\r\n\r\n\r\n3,332.560\r\n\r\n\r\n7,238.570\r\n\r\n\r\n18,438.370\r\n\r\n\r\n63,767.39\r\n\r\n\r\nNO2_emissions\r\n\r\n\r\n297\r\n\r\n\r\n8,369.881\r\n\r\n\r\n10,847.787\r\n\r\n\r\n8.970\r\n\r\n\r\n1,877.410\r\n\r\n\r\n4,463.950\r\n\r\n\r\n7,852.580\r\n\r\n\r\n41,871.46\r\n\r\n\r\nGDP\r\n\r\n\r\n294\r\n\r\n\r\n487,470.776\r\n\r\n\r\n725,371.404\r\n\r\n\r\n4,812.400\r\n\r\n\r\n43,223.100\r\n\r\n\r\n188,265.850\r\n\r\n\r\n469,861.475\r\n\r\n\r\n3,356,410.00\r\n\r\n\r\nFinal_EI\r\n\r\n\r\n279\r\n\r\n\r\n91.874\r\n\r\n\r\n36.440\r\n\r\n\r\n42.970\r\n\r\n\r\n73.575\r\n\r\n\r\n85.580\r\n\r\n\r\n96.825\r\n\r\n\r\n274.92\r\n\r\n\r\nFuel_mix\r\n\r\n\r\n279\r\n\r\n\r\n2.757\r\n\r\n\r\n3.966\r\n\r\n\r\n0.000\r\n\r\n\r\n0.825\r\n\r\n\r\n1.400\r\n\r\n\r\n3.095\r\n\r\n\r\n20.17\r\n\r\n\r\nCarbon_intensity\r\n\r\n\r\n279\r\n\r\n\r\n88.397\r\n\r\n\r\n11.960\r\n\r\n\r\n44.400\r\n\r\n\r\n83.600\r\n\r\n\r\n88.500\r\n\r\n\r\n94.850\r\n\r\n\r\n124.90\r\n\r\n\r\nRenewables_share\r\n\r\n\r\n270\r\n\r\n\r\n22.261\r\n\r\n\r\n17.012\r\n\r\n\r\n0.979\r\n\r\n\r\n10.600\r\n\r\n\r\n16.558\r\n\r\n\r\n28.668\r\n\r\n\r\n76.69\r\n\r\n\r\nEnvt_taxes\r\n\r\n\r\n297\r\n\r\n\r\n11,718.864\r\n\r\n\r\n16,783.704\r\n\r\n\r\n33.860\r\n\r\n\r\n1,125.280\r\n\r\n\r\n4,977.240\r\n\r\n\r\n10,712.560\r\n\r\n\r\n63,868.08\r\n\r\n\r\nLiquid_biofuels\r\n\r\n\r\n278\r\n\r\n\r\n996.403\r\n\r\n\r\n1,618.882\r\n\r\n\r\n0.000\r\n\r\n\r\n25.000\r\n\r\n\r\n295.500\r\n\r\n\r\n1,144.306\r\n\r\n\r\n8,907.00\r\n\r\n\r\nSolar_thermal\r\n\r\n\r\n279\r\n\r\n\r\n2,076.456\r\n\r\n\r\n4,416.113\r\n\r\n\r\n0.000\r\n\r\n\r\n71.924\r\n\r\n\r\n401.498\r\n\r\n\r\n1,458.500\r\n\r\n\r\n20,200.00\r\n\r\n\r\nHeat_pumps\r\n\r\n\r\n279\r\n\r\n\r\n4,273.957\r\n\r\n\r\n13,332.143\r\n\r\n\r\n0.000\r\n\r\n\r\n0.000\r\n\r\n\r\n0.000\r\n\r\n\r\n1,371.537\r\n\r\n\r\n126,842.03\r\n\r\n\r\nMissing Values\r\nTo find out the missing values in the data:\r\n\r\n\r\nmissing.values <- G %>%\r\n    gather(key = \"key\", value = \"val\") %>%\r\n    mutate(is.missing = is.na(val)) %>%\r\n    group_by(key, is.missing) %>%\r\n    summarise(num.missing = n()) %>%\r\n    filter(is.missing==T) %>%\r\n    select(-is.missing) %>%\r\n    arrange(desc(num.missing)) \r\nmissing.values %>% kable()\r\n\r\n\r\n\r\nkey\r\n\r\n\r\nnum.missing\r\n\r\n\r\nRenewables_share\r\n\r\n\r\n27\r\n\r\n\r\nLiquid_biofuels\r\n\r\n\r\n19\r\n\r\n\r\nCarbon_intensity\r\n\r\n\r\n18\r\n\r\n\r\nFinal_EI\r\n\r\n\r\n18\r\n\r\n\r\nFuel_mix\r\n\r\n\r\n18\r\n\r\n\r\nHeat_pumps\r\n\r\n\r\n18\r\n\r\n\r\nSolar_thermal\r\n\r\n\r\n18\r\n\r\n\r\nGDP\r\n\r\n\r\n3\r\n\r\n\r\nVisualising the Missing Values:\r\n\r\n\r\nprepare_missing_values_graph(G, ts_id = \"Country\")\r\n\r\n\r\n\r\n\r\n3.0 Exploratory Data Analysis\r\nThis section explore different visualisation of EDA and application of interactivity.\r\n3.1 Distribution of Variables\r\nDisplaying histogram of multiple variables\r\n\r\n\r\nE <- select(G, -c(Country,Year))\r\nF <- E %>%\r\n  gather() %>%\r\n  ggplot(aes(value)) +\r\n  facet_wrap( ~key, ncol=4, scales=\"free\") +\r\n  geom_histogram()\r\nF\r\n\r\n\r\n\r\n\r\nDisplaying histogram of individual variables\r\n\r\n\r\nH <- select(G, GHG_emissions)\r\nggplot(H, aes(GHG_emissions))+\r\n  geom_histogram()\r\n\r\n\r\n\r\n\r\n3.2 Visualising Time Trend\r\nSince the independent variables are of continuous data type, to review the trend overtime, the ggplot function of ggplot2 package is used along with geom_line to plot the line graph.\r\n\r\n\r\nt <- ggplot(G, aes(x=Year, y=GHG_emissions)) +\r\n  geom_line()+\r\n  facet_wrap(~ Country)\r\nt\r\n\r\n\r\n\r\n\r\nHaving all countries included in a single plot.\r\n\r\n\r\nt <- ggplot(G, aes(x=Year, y=GHG_emissions, color=Country)) +\r\n  geom_line()\r\nt\r\n\r\n\r\n\r\n\r\nFrom the graph above, even with colours assigned to each country, it is hard for users to differentiate the countries. Also, at value below 250000, there are many countries overlapping. The way to improve this visualisation is to transform the y-axis to log10 scale.\r\n\r\n\r\nu <- t +\r\n  scale_y_log10()\r\nu\r\n\r\n\r\n\r\n\r\nWhile the overlapping of lines has slightly improved with the log10 scale, users will still have difficulty matching the color to legend. Since the legend is not useful, it could be removed using the theme() function of ggplot2, which enables the customisation of non-data components of plots.\r\n\r\n\r\nv <- u +\r\n  geom_text(data=subset(G, Year==2018), aes(label=Country, color=Country)) +\r\n  theme(legend.position = \"none\")\r\nv\r\n\r\n\r\n\r\n\r\nIn the plot above, there are overlapping between the countries texts, and also the line. To fix this, the hjust parameter of the aesthetics setting of geom_text() could be adjusted. check_overlap could also be turned on. The coord_cartesian() allows clipping to be turned off so that text could extend beyond the plot and not be truncated.\r\n\r\n\r\nv <- u +\r\n  geom_text(data=subset(G, Year==2018), aes(label=Country, color=Country, hjust = -0.1), check_overlap=TRUE) +\r\n  coord_cartesian(clip = 'off') +\r\n  theme(legend.position = \"none\")\r\nv\r\n\r\n\r\n\r\n\r\nThe plot above though better, if far from perfect. Due to the turning off of text over-lapping, many of the labels have been removed. To improve on the aesthetics and users’ experience:\r\nInteractivity could be introduced to enable users to select the country(s) they want to analyse to appear on the graph.\r\nVariables selection will also be added to the dashboard to allow users to select and view the trend of the other independent variables.\r\nFinally, a grouped time trend graph will be shown to the users.\r\n\r\n\r\n\r\n3.3 Visualising Correlation\r\nIn this session, the ggcorrmat() function of the ggstatsplot package, multiple functions of corrplot package, and the prepare_correlation_graph() function of ExPanDaR package are explored to find the most appropriate visualisation.\r\nFrom the visualisation of the missing values, the situation of the missing values in the dataset is not too bad, and it is very much limited to only Switzerland and Liechtenstein. However, coorplote supports only data without missing values. Hence, to create a data set to be used for the corrplot correlation plots, the missing values are removed.\r\n\r\n\r\nM <- select(G, -c(Country, Year))\r\nN <- M[complete.cases(M), ]\r\n\r\n\r\n\r\nEllipse corrplot() of corrplot package\r\n\r\n\r\nO <- cor(N)\r\ncorrplot(O, method = \"ellipse\")\r\n\r\n\r\n\r\n\r\nNumber corrplot() of corrplot package\r\n\r\n\r\nO <- cor(N)\r\ncorrplot(O, method = \"number\")\r\n\r\n\r\n\r\n\r\ncorrplot.mixed() of corrplot package\r\n\r\n\r\nO <- cor(N)\r\ncorrplot.mixed(O)\r\n\r\n\r\n\r\n\r\nggcormat() of ggstateplot package\r\n\r\n\r\nggcorrmat(data = M)\r\n\r\n\r\n\r\n\r\nprepare_correlation_graph() function of ExPanDaR package\r\n\r\n\r\n$df_corr\r\n                 GHG_emissions CO2_emissions CH4_emissions\r\nGHG_emissions       1.00000000    0.99784541   0.930140816\r\nCO2_emissions       0.99413874    1.00000000   0.905829005\r\nCH4_emissions       0.97144524    0.95078334   1.000000000\r\nNO2_emissions       0.94710402    0.92372630   0.959508233\r\nGDP                 0.86271907    0.87141830   0.832277410\r\nFinal_EI           -0.37694381   -0.34604142  -0.467943876\r\nFuel_mix            0.18760737    0.17048453   0.228648231\r\nCarbon_intensity    0.02357443    0.02642678   0.001257642\r\nRenewables_share   -0.25004005   -0.23094422  -0.261702456\r\nEnvt_taxes          0.87809209    0.88611949   0.852467040\r\nLiquid_biofuels     0.77081143    0.76697476   0.706991817\r\nSolar_thermal       0.74724643    0.74321289   0.727001177\r\nHeat_pumps          0.42831149    0.44521129   0.380857932\r\n                 NO2_emissions         GDP   Final_EI     Fuel_mix\r\nGHG_emissions       0.91822300  0.90916053 -0.2662011  0.273841014\r\nCO2_emissions       0.89605922  0.90638984 -0.2541530  0.258173601\r\nCH4_emissions       0.93835851  0.82096507 -0.3192199  0.394317966\r\nNO2_emissions       1.00000000  0.82762517 -0.2778211  0.351788621\r\nGDP                 0.84440412  1.00000000 -0.2653626 -0.044843685\r\nFinal_EI           -0.41022136 -0.43546422  1.0000000 -0.017495209\r\nFuel_mix            0.23057069  0.03065245  0.1367399  1.000000000\r\nCarbon_intensity   -0.02506221 -0.10495727  0.0654970  0.219588269\r\nRenewables_share   -0.22918867 -0.13486515  0.2779467 -0.019695971\r\nEnvt_taxes          0.86451982  0.98096907 -0.4442150  0.002396859\r\nLiquid_biofuels     0.69792002  0.72783664 -0.2058724 -0.089409346\r\nSolar_thermal       0.67147366  0.71421697 -0.4921314 -0.065272694\r\nHeat_pumps          0.34748022  0.54374122 -0.2023139  0.048261441\r\n                 Carbon_intensity Renewables_share  Envt_taxes\r\nGHG_emissions          0.10939055      -0.29550085  0.89278054\r\nCO2_emissions          0.11426435      -0.28842393  0.88690010\r\nCH4_emissions          0.09580844      -0.32566188  0.83248701\r\nNO2_emissions          0.07032943      -0.27349823  0.80918834\r\nGDP                    0.02835471      -0.21459569  0.96482276\r\nFinal_EI              -0.42439312       0.57321622 -0.28184944\r\nFuel_mix               0.13743471      -0.11295737 -0.01662560\r\nCarbon_intensity       1.00000000      -0.46972038  0.03546597\r\nRenewables_share      -0.30397325       1.00000000 -0.22539529\r\nEnvt_taxes            -0.10770795      -0.13058739  1.00000000\r\nLiquid_biofuels       -0.13226131      -0.19134578  0.71586859\r\nSolar_thermal         -0.04256105      -0.28566499  0.74522454\r\nHeat_pumps            -0.18348267       0.02471386  0.48184550\r\n                 Liquid_biofuels Solar_thermal  Heat_pumps\r\nGHG_emissions         0.80888395    0.71707654  0.37944853\r\nCO2_emissions         0.81528203    0.72483913  0.35691727\r\nCH4_emissions         0.67251692    0.60414885  0.43118429\r\nNO2_emissions         0.71922124    0.71680647  0.42243572\r\nGDP                   0.81285907    0.54850567  0.53355859\r\nFinal_EI             -0.19482993   -0.21674724 -0.16845508\r\nFuel_mix             -0.04718531    0.33365143 -0.12384495\r\nCarbon_intensity      0.02811054    0.09999862 -0.08765757\r\nRenewables_share     -0.23486629   -0.13953268 -0.04609222\r\nEnvt_taxes            0.72717110    0.52967393  0.55750720\r\nLiquid_biofuels       1.00000000    0.51491939  0.34638084\r\nSolar_thermal         0.65844575    1.00000000  0.09847440\r\nHeat_pumps            0.44471160    0.36127767  1.00000000\r\n\r\n$df_prob\r\n                 GHG_emissions CO2_emissions CH4_emissions\r\nGHG_emissions     0.000000e+00  0.000000e+00 2.214261e-130\r\nCO2_emissions    4.589804e-287  0.000000e+00 4.725595e-112\r\nCH4_emissions    2.357611e-186 3.808932e-152  0.000000e+00\r\nNO2_emissions    1.201835e-147 5.784735e-125 2.305553e-164\r\nGDP               1.841234e-88  2.542659e-92  8.610783e-77\r\nFinal_EI          7.533660e-11  2.875435e-09  1.377506e-16\r\nFuel_mix          1.646245e-03  4.292795e-03  1.165846e-04\r\nCarbon_intensity  6.950160e-01  6.602926e-01  9.833155e-01\r\nRenewables_share  3.242710e-05  1.286207e-04  1.322064e-05\r\nEnvt_taxes        1.930319e-96 1.554219e-100  4.362829e-85\r\nLiquid_biofuels   5.591005e-56  4.117373e-55  2.029889e-43\r\nSolar_thermal     4.418228e-51  2.889804e-50  3.896660e-47\r\nHeat_pumps        7.102909e-14  5.467934e-15  4.617453e-11\r\n                 NO2_emissions           GDP     Final_EI\r\nGHG_emissions    1.107023e-120 4.178441e-113 6.541791e-06\r\nCO2_emissions    4.710304e-106 2.724632e-111 1.732054e-05\r\nCH4_emissions    3.952887e-138  4.861730e-73 4.998240e-08\r\nNO2_emissions     0.000000e+00  3.243922e-75 2.443410e-06\r\nGDP               3.876546e-81  0.000000e+00 7.011285e-06\r\nFinal_EI          9.476106e-13  2.441471e-14 0.000000e+00\r\nFuel_mix          1.017025e-04  6.101790e-01 2.234259e-02\r\nCarbon_intensity  6.768192e-01  8.010140e-02 2.755920e-01\r\nRenewables_share  1.451789e-04  2.669751e-02 3.524004e-06\r\nEnvt_taxes        3.887780e-90 6.644798e-210 6.385613e-15\r\nLiquid_biofuels   6.623125e-42  3.976896e-47 5.519562e-04\r\nSolar_thermal     6.246854e-38  8.019620e-45 2.005984e-18\r\nHeat_pumps        2.447790e-09  7.237810e-23 6.754436e-04\r\n                     Fuel_mix Carbon_intensity Renewables_share\r\nGHG_emissions    3.441234e-06     6.808287e-02     7.657793e-07\r\nCO2_emissions    1.258195e-05     5.661516e-02     1.434689e-06\r\nCH4_emissions    8.154235e-12     1.103087e-01     4.341741e-08\r\nNO2_emissions    1.504001e-09     2.416352e-01     5.104848e-06\r\nGDP              4.556373e-01     6.372227e-01     3.833793e-04\r\nFinal_EI         7.710988e-01     1.261549e-13     5.538967e-25\r\nFuel_mix         0.000000e+00     2.166373e-02     6.382450e-02\r\nCarbon_intensity 2.185072e-04     0.000000e+00     3.185907e-16\r\nRenewables_share 7.473258e-01     3.531281e-07     0.000000e+00\r\nEnvt_taxes       9.682081e-01     7.245808e-02     3.195221e-02\r\nLiquid_biofuels  1.370110e-01     2.745437e-02     1.616725e-03\r\nSolar_thermal    2.772432e-01     4.789210e-01     1.824181e-06\r\nHeat_pumps       4.219898e-01     2.089752e-03     6.860157e-01\r\n                    Envt_taxes Liquid_biofuels Solar_thermal\r\nGHG_emissions    3.574286e-104    1.300381e-65  2.499206e-45\r\nCO2_emissions    5.984541e-101    1.912263e-67  9.797314e-47\r\nCH4_emissions     1.234026e-77    5.925337e-38  3.811122e-29\r\nNO2_emissions     4.225961e-70    1.488791e-45  2.791854e-45\r\nGDP              1.835520e-171    9.634015e-67  2.569499e-23\r\nFinal_EI          1.718263e-06    1.093975e-03  2.647071e-04\r\nFuel_mix          7.821836e-01    4.332584e-01  1.112717e-08\r\nCarbon_intensity  5.552413e-01    6.407311e-01  9.551676e-02\r\nRenewables_share  1.880067e-04    1.007874e-04  2.182794e-02\r\nEnvt_taxes        0.000000e+00    5.287208e-47  1.401543e-21\r\nLiquid_biofuels   5.878084e-45    0.000000e+00  3.171027e-20\r\nSolar_thermal     1.137672e-50    6.262780e-36  0.000000e+00\r\nHeat_pumps        1.262439e-17    6.610859e-15  5.011830e-10\r\n                   Heat_pumps\r\nGHG_emissions    5.511675e-11\r\nCO2_emissions    8.341815e-10\r\nCH4_emissions    4.639549e-14\r\nNO2_emissions    1.676178e-13\r\nGDP              6.268999e-22\r\nFinal_EI         4.782774e-03\r\nFuel_mix         3.870624e-02\r\nCarbon_intensity 1.441776e-01\r\nRenewables_share 4.506933e-01\r\nEnvt_taxes       3.469327e-24\r\nLiquid_biofuels  2.956242e-09\r\nSolar_thermal    1.007032e-01\r\nHeat_pumps       0.000000e+00\r\n\r\n$df_n\r\n                 GHG_emissions CO2_emissions CH4_emissions\r\nGHG_emissions              297           297           297\r\nCO2_emissions              297           297           297\r\nCH4_emissions              297           297           297\r\nNO2_emissions              297           297           297\r\nGDP                        294           294           294\r\nFinal_EI                   279           279           279\r\nFuel_mix                   279           279           279\r\nCarbon_intensity           279           279           279\r\nRenewables_share           270           270           270\r\nEnvt_taxes                 297           297           297\r\nLiquid_biofuels            278           278           278\r\nSolar_thermal              279           279           279\r\nHeat_pumps                 279           279           279\r\n                 NO2_emissions GDP Final_EI Fuel_mix Carbon_intensity\r\nGHG_emissions              297 294      279      279              279\r\nCO2_emissions              297 294      279      279              279\r\nCH4_emissions              297 294      279      279              279\r\nNO2_emissions              297 294      279      279              279\r\nGDP                        294 294      279      279              279\r\nFinal_EI                   279 279      279      279              279\r\nFuel_mix                   279 279      279      279              279\r\nCarbon_intensity           279 279      279      279              279\r\nRenewables_share           270 270      270      270              270\r\nEnvt_taxes                 297 294      279      279              279\r\nLiquid_biofuels            278 278      278      278              278\r\nSolar_thermal              279 279      279      279              279\r\nHeat_pumps                 279 279      279      279              279\r\n                 Renewables_share Envt_taxes Liquid_biofuels\r\nGHG_emissions                 270        297             278\r\nCO2_emissions                 270        297             278\r\nCH4_emissions                 270        297             278\r\nNO2_emissions                 270        297             278\r\nGDP                           270        294             278\r\nFinal_EI                      270        279             278\r\nFuel_mix                      270        279             278\r\nCarbon_intensity              270        279             278\r\nRenewables_share              270        270             269\r\nEnvt_taxes                    270        297             278\r\nLiquid_biofuels               269        278             278\r\nSolar_thermal                 270        279             278\r\nHeat_pumps                    270        279             278\r\n                 Solar_thermal Heat_pumps\r\nGHG_emissions              279        279\r\nCO2_emissions              279        279\r\nCH4_emissions              279        279\r\nNO2_emissions              279        279\r\nGDP                        279        279\r\nFinal_EI                   279        279\r\nFuel_mix                   279        279\r\nCarbon_intensity           279        279\r\nRenewables_share           270        270\r\nEnvt_taxes                 279        279\r\nLiquid_biofuels            278        278\r\nSolar_thermal              279        279\r\nHeat_pumps                 279        279\r\n\r\nComparing the correlation plots above, it is clear that ggcormat() of ggstateplot package and prepare_correlation_graph() function of ExPanDaR package are more robust as they are able to generate correlation plot of dataset with missing values, which is suitable for the panel data project as the dataset has a small number of missing values. A downside of the plot from prepare_correlation_graph() is that it returns the dataframe below the plot that cannot be disabled. Therefore, the ggcormat() plot is preferred as it has the correlation coefficients embedded within the visualisation, and those variables pairs that are statistically insignificant at ρ < 0.05 are also crossed out\r\nBivariate Analysis with Scatterplot\r\nUsing the prepare_scatter_plot() function of the ExPanDaR package, bivariate analysis between variables could be shown so as to allow users to determine the empirical relationship between variables.\r\n\r\n\r\nprepare_scatter_plot(G, x=\"GHG_emissions\", y=\"Final_EI\", color=\"Country\", loess = 1)\r\n\r\n\r\n\r\n\r\n4.0 Final Visualisation & Interactivity\r\nEach point below represents a unique tab within the EDA module of the Shiny application\r\nData table, Descriptive Statistics, and Missing Values\r\nHistograms of multiple variables and individual variables\r\nTo incorporate variables selector\r\n\r\nTime Trend of variables of group and each country\r\nTo incorporate slider for years and countries selector\r\n\r\nCorrelation Plot\r\nTo incorporate slider for year and countries selector\r\n\r\nBivariate analysis with Scatterplot\r\nTo incorporate variables selector\r\n\r\n5.0 Major Advantages of Incorporating Interactivity\r\nA static visualisation may contain too much additional information that would distract users from focusing on the information that they want. For example, for the case of the time trend graph here, there are trend lines of all countries in the same graph. If a countries selector is included, for the case of an interactive visualisation, users will be able to select only those of interest, and those that he wants to analyse. By limiting the selection to only a few, it will also ensure minimal trend lines overlapping visually.\r\nInteractive visualisation allows users to drill and narrow down into the specific variable or period of time to allow them to observe the changes to relationships between variables over time. For the case of the correlation plot, the way to compare the correlation between different variables and across different time periods on static plots are to generate correlation plots of every individual variables and years combination. With interactive visualisation, the number of such plots could be reduce to just one.\r\nThere is no one-size-fits-all EDA visualisation. Rather than controlling what users to could see in static visualisation, interactive visualisation provides users the flexibility to customise the visualisation they would like to see.\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-03-19-exploration-data-analysis/exploration-data-analysis_files/figure-html5/unnamed-chunk-9-1.png",
    "last_modified": "2021-04-11T21:30:33+08:00",
    "input_file": "exploration-data-analysis.utf8.md"
  },
  {
    "path": "posts/2021-03-28-data-preparation/",
    "title": "Data Preparation",
    "description": "Details on the data source and the step-by-step guide for data manipulation to merge all datasets into 1 consolidated data for subsquent analyses",
    "author": [
      {
        "name": "Group 2 (Angeline Jiang, Dylan Wong, Selene Choong)",
        "url": {}
      }
    ],
    "date": "2021-03-16",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nRelevant Literature Reviews\r\nData Source\r\nDatasets Used\r\nStep-by-Step Data Preparation\r\n(1) Installing and launching required R packages\r\n(2) Data wrangling\r\n(3) Data merging\r\n\r\nRelevant Literature Reviews\r\nA study conducted by González-Sánchez, M., & Martín-Ortega, J. (2020) on the determinants of greenhouse gas emissions growth in Europe considered majority of the driver factors available on Eurostat database and found that GDP and final energy intensity are the main drivers for the reduction of greenhouse gas emissions in Europe. Furthermore, energy prices are not significant and heterogeneous results are found for the renewable energy, fuel mix and carbon intensity determinants, pointing to a different behavior at the country level.\r\nOur research value-adds the above paper as we aim to identify an extended list of mitigation factors which could potentially play an important role in the reduction of greenhouse gas emissions in Europe.\r\nExtended list of mitigation\r\nVariable\r\nLit Reviews\r\nEnvironmental taxes\r\nMiller, S., & Vela, M. (2013) and European Environment Agency (1996) found that environmental taxes are effective in reducing greenhouse gas emissions.\r\nLiquid biofuels production capacities\r\nMixed reviews over influence of biofuels in reducing greenhouse gas emissions – dependent on geographical locations and the types of biofuels though most studies such as Menichetti, E., & Otto, M. (2009), Allaire, M., & Brown, S. P. (2015) and Hanaki, K., & Portugal-Pereira, J. (2018) found that biofuel contribute to a reduction in greenhouse gas emissions.\r\nSolar thermal collectors’ surface\r\nSolar PV power generation is one of the pillars of the plans to decarbonise the EU’s power supply and its role is highlighted in the European Commission 2018 Communication “A European long-term strategic vision for a prosperous, modern, competitive and climate neutral economy”. In addition, Vartiainen, E., Masson, G., Breyer, C., Moser, D., & Román Medina, E. (2020) found that recent technology progress positions PV among the most cost-effective electricity generation technologies.\r\nHeat pumps\r\nBayer, P., Saner, D., Bolay, S., Rybach, L., & Blum, P. (2012) found that heat pumps would contribute over 20% of the EU energy saving goal, 20% of the renewable energy input and 20% of the CO2 emission target.\r\nData Source\r\nAll the datasets used for this project is obtained from Eurostat (https://ec.europa.eu/eurostat), the database with European statistics maintained by the statistical office of the European Union. Our group will be focusing on the overall greenhouse gas emissions, excluding Land Use and Land Use Change and Forest (LULUCF) while also exploring into the common greenhouse gases (i.e. carbon dioxide, methane and nitrous oxide).\r\nThe list of driver and mitigation variables that would be covered in our project include:\r\nCategory\r\nVariables\r\nDrivers\r\n1. Gross Domestic Product (GDP)  2. Final energy intensity  3. Fuel mix  4. Carbon intensity\r\nMitigation\r\n5. Renewable energy  6. Environmental taxes by economic activity  7. Liquid biofuels production capacities  8. Solar thermal collectors’ surface  9. Heat pumps - technical characteristics by technologies\r\nDatasets Used\r\nDetails on the exact datasets used for each variable are listed in the table below:\r\nVariables\r\nDataset from EuroStat\r\nGreenhouse gas emissions\r\nenv_air_gge\r\nGross Domestic Product (GDP)\r\nnama_10_gdp\r\nFinal energy intensity\r\nComputed using sdg_07_11 and nama_10_gdp\r\nFuel mix\r\nnrg_ind_fecf\r\nCarbon intensity\r\nsdg_13_20\r\nShare of energy from renewable sources\r\nnrg_ind_ren\r\nEnvironmental taxes by economic activity\r\nenv_ac_taxind2\r\nLiquid biofuels production capacities\r\nnrg_inf_lbpc\r\nSolar thermal collectors’ surface\r\nnrg_inf_stcs\r\nHeat pumps - technical characteristics by technologies\r\nnrg_inf_hptc\r\nStep-by-Step Data Preparation\r\n(1) Installing and launching required R packages\r\nA list of packages are required for the data manipulation exercise. This code chunk installs the required packages and loads them into the RStudio environment.\r\n\r\n\r\npackages <- c(\"tidyverse\", \"readxl\")\r\nfor (p in packages){\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n(2) Data wrangling\r\nData was imported using the read_excel() function since the downloaded datasets were in .xlsx format. As the downloaded datasets had irrelevant rows and columns, select() and drop_na() were used to clean up the data. To facilitate the selection of the relevant columns, a list reqColumns containing the column names to keep was created.\r\n\r\n\r\nreqColumns <- c(\"TIME\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\")\r\n\r\n\r\n\r\nGreenhouse gas emissions\r\n\r\n\r\n# Overall greenhouse gases\r\ndep_GHG <- read_excel(\"data/DEP (GHG) ENV_AIR_GGE.xlsx\", sheet = \"Sheet 2\", skip = 9) %>% \r\n  select(reqColumns) %>% \r\n  drop_na(all_of(reqColumns[-1]))\r\n\r\n# Carbon dioxide\r\ndep_CO2 <- read_excel(\"data/DEP (GHG) ENV_AIR_GGE.xlsx\", sheet = \"Sheet 11\", skip = 9) %>% \r\n  select(reqColumns) %>% \r\n  drop_na(all_of(reqColumns[-1]))\r\n\r\n# Methane (CO2 equivalent)\r\ndep_CH4 <- read_excel(\"data/DEP (GHG) ENV_AIR_GGE.xlsx\", sheet = \"Sheet 29\", skip = 9) %>% \r\n  select(reqColumns) %>% \r\n  drop_na(all_of(reqColumns[-1]))\r\n\r\n# Nitrous oxide (CO2 equivalent)\r\ndep_NO2 <- read_excel(\"data/DEP (GHG) ENV_AIR_GGE.xlsx\", sheet = \"Sheet 47\", skip = 9) %>% \r\n  select(reqColumns) %>% \r\n  drop_na(all_of(reqColumns[-1]))\r\n\r\n\r\n\r\nGross Domestic Product (GDP)\r\n\r\n\r\ndriver_GDP <- read_excel(\"data/DRIV (GDP) NAMA_10_GDP.xlsx\", sheet = \"Sheet 2\", skip = 8) %>% \r\n  select(reqColumns)\r\n\r\n# Subset to drop irrelevant rows\r\ndriver_GDP <- driver_GDP[2:46, ]\r\n\r\n\r\n\r\nFinal energy intensity\r\nAs the dataset for final energy intensity is not readily available on Eurostat, computations will be required. Variable will be computed using two separate datasets - final energy consumption and GDP, million purchasing power standards - and the energy intensity computation available on Eurostat.\r\n\r\n\r\n# Final energy consumption\r\ndriver_FEI_FEC <- read_excel(\"data/DRIV (EI - FEC) SDG_07_11.xlsx\", sheet = \"Sheet 1\", skip = 7) %>% \r\n  select(reqColumns)\r\ndriver_FEI_FEC <- driver_FEI_FEC[2:42, ]\r\n\r\n# GDP (in million purchasing power standards)\r\ndriver_FEI_GDP <- read_excel(\"data/DRIV (GDP) NAMA_10_GDP.xlsx\", sheet = \"Sheet 3\", skip = 8) %>% \r\n  select(reqColumns)\r\ndriver_FEI_GDP <- driver_FEI_GDP[2:46, ]\r\n\r\n\r\n\r\nFinal energy intensity is computed using the following formula: 1000000*driver_FEI_FEC/driver_FEI_GDP and results rounded to 2 decimal places. As there are more countries in the GDP dataset, rows with countries not in the final energy consumption dataset were dropped.\r\n\r\n\r\n# Keeping only relevant countries from GDP and reorder as per FEC dataset\r\ndriver_FEI_GDP_cleaned <- driver_FEI_GDP %>% \r\n  filter(TIME %in% driver_FEI_FEC$TIME) %>%\r\n  slice(match(driver_FEI_FEC$TIME, TIME))\r\n\r\n# Computing the final energy intensity\r\ndriver_FEI <- cbind(driver_FEI_FEC$TIME, round(1000000 * (driver_FEI_FEC[-1]/driver_FEI_GDP_cleaned[-1]), 2))\r\n\r\n\r\n\r\nFuel mix\r\n\r\n\r\ndriver_FM <- read_excel(\"data/DRIV (FM) NRG_IND_FECF.xlsx\", sheet = \"Sheet 1\", skip = 9) %>% \r\n  select(reqColumns)\r\ndriver_FM <- driver_FM[2:44, ]\r\n\r\n\r\n\r\nCarbon intensity\r\n\r\n\r\ndriver_CI <- read_excel(\"data/DRIV (CI) SDG_13_20.xlsx\", sheet = \"Sheet 1\", skip = 7) %>% \r\n  select(reqColumns)\r\ndriver_CI <- driver_CI[2:35, ]\r\n\r\n\r\n\r\nShare of energy from renewable sources\r\n\r\n\r\nmitig_RES <- read_excel(\"data/MITIG (RES) NRG_IND_REN.xlsx\", sheet = \"Sheet 1\", skip = 7) %>% \r\n  select(reqColumns)\r\nmitig_RES <- mitig_RES[2:41, ]\r\n\r\n\r\n\r\nEnvironmental taxes by economic activity\r\n\r\n\r\nmitig_ET <- read_excel(\"data/MITIG (ET) ENV_AC_TAXIND2.xlsx\", sheet = \"Sheet 65\", skip = 9) %>% \r\n  select(reqColumns)\r\nmitig_ET <- mitig_ET[2:38, ]\r\n\r\n\r\n\r\nLiquid biofuels production capacities\r\nWhile Eurostat has distinguished the production capacities by different liquid biofuel types, our group will be analysing this variable at the collective overall level.\r\n\r\n\r\n# Pure biogasline\r\nmitig_LBF_biogasline <- read_excel(\"data/MITIG (LBF) NRG_INF_LBPC.xlsx\", sheet = \"Sheet 1\", skip = 9) %>% \r\n  select(reqColumns)\r\nmitig_LBF_biogasline <- mitig_LBF_biogasline[2:44, ]\r\n\r\n# Pure biodiesels\r\nmitig_LBF_biodiesels <- read_excel(\"data/MITIG (LBF) NRG_INF_LBPC.xlsx\", sheet = \"Sheet 2\", skip = 9) %>% \r\n  select(reqColumns)\r\nmitig_LBF_biodiesels <- mitig_LBF_biodiesels[2:44, ]\r\n\r\n# Pure bio jet kerosene\r\nmitig_LBF_bjkerosene <- read_excel(\"data/MITIG (LBF) NRG_INF_LBPC.xlsx\", sheet = \"Sheet 3\", skip = 9) %>% \r\n  select(reqColumns)\r\nmitig_LBF_bjkerosene <- mitig_LBF_bjkerosene[2:44, ]\r\n\r\n# Other liquid biofuels\r\nmitig_LBF_others <- read_excel(\"data/MITIG (LBF) NRG_INF_LBPC.xlsx\", sheet = \"Sheet 4\", skip = 9) %>% \r\n  select(reqColumns)\r\nmitig_LBF_others <- mitig_LBF_others[2:44, ]\r\n\r\n\r\n\r\nSummation was performed to get the total value of liquid biofuels production capacities for each country at each year.\r\n\r\n\r\nmitig_LBF <- cbind(mitig_LBF_biogasline$TIME, \r\n                   (mitig_LBF_biogasline[-1] + mitig_LBF_biodiesels[-1] + mitig_LBF_bjkerosene[-1] + mitig_LBF_others[-1]))\r\n\r\n\r\n\r\nSolar thermal collectors’ surface\r\n\r\n\r\nmitig_ST <- read_excel(\"data/MITIG (ST) NRG_INF_STCS.xlsx\", sheet = \"Sheet 1\", skip = 8) %>% \r\n  select(reqColumns)\r\nmitig_ST <- mitig_ST[2:44, ]\r\n\r\n\r\n\r\nHeat pumps - technical characteristics by technologies\r\nWhile Eurostat has distinguished the installed thermal capacity by different heat pump technologies, our group will be analysing this variable at the collective overall level.\r\n\r\n\r\n# Aerothermal\r\nmitig_HP_aerothermal <- read_excel(\"data/MITIG (HP) NRG_INF_HPTC.xlsx\", sheet = \"Sheet 1\", skip = 9) %>% \r\n  select(reqColumns)\r\nmitig_HP_aerothermal <- mitig_HP_aerothermal[2:44, ]\r\n\r\n# Geothermal\r\nmitig_HP_geothermal <- read_excel(\"data/MITIG (HP) NRG_INF_HPTC.xlsx\", sheet = \"Sheet 2\", skip = 9) %>% \r\n  select(reqColumns) \r\nmitig_HP_geothermal <- mitig_HP_geothermal[2:44, ]\r\n\r\n# Hydrothermal\r\nmitig_HP_hydrothermal <- read_excel(\"data/MITIG (HP) NRG_INF_HPTC.xlsx\", sheet = \"Sheet 3\", skip = 9) %>% \r\n  select(reqColumns) \r\nmitig_HP_hydrothermal <- mitig_HP_hydrothermal[2:44, ]\r\n\r\n\r\n\r\nSummation was performed to get the total value of linstalled thermal capacity across all heat pump technologies for each country at each year.\r\n\r\n\r\nmitig_HP <- cbind(mitig_HP_aerothermal$TIME, \r\n                  (mitig_HP_aerothermal[-1] + mitig_HP_geothermal[-1] + mitig_HP_hydrothermal[-1]))\r\n\r\n\r\n\r\n(3) Data merging\r\nPrior to joining the datasets, transposing was first performed to convert each dataset into the format where each row represents the value for a country for a year.\r\n\r\n\r\ndep_GHG_transposed <- pivot_longer(dep_GHG, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"GHG_emissions\") %>% rename(Country = TIME)\r\ndep_CO2_transposed <- pivot_longer(dep_CO2, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"CO2_emissions\") %>% rename(Country = TIME)\r\ndep_CH4_transposed <- pivot_longer(dep_CH4, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"CH4_emissions\") %>% rename(Country = TIME)\r\ndep_NO2_transposed <- pivot_longer(dep_NO2, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"NO2_emissions\") %>% rename(Country = TIME)\r\n\r\ndriver_GDP_transposed <- pivot_longer(driver_GDP, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"GDP\") %>% rename(Country = TIME)\r\ndriver_FEI_transposed <- pivot_longer(driver_FEI, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"Final_EI\") %>% rename(Country = `driver_FEI_FEC$TIME`)\r\ndriver_FM_transposed <- pivot_longer(driver_FM, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"Fuel_mix\") %>% rename(Country = TIME)\r\ndriver_CI_transposed <- pivot_longer(driver_CI, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"Carbon_intensity\") %>% rename(Country = TIME)\r\n\r\nmitig_RES_transposed <- pivot_longer(mitig_RES, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"Renewables_share\") %>% rename(Country = TIME)\r\nmitig_ET_transposed <- pivot_longer(mitig_ET, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"Envt_taxes\") %>% rename(Country = TIME)\r\nmitig_LBF_transposed <- pivot_longer(mitig_LBF, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"Liquid_biofuels\") %>% rename(Country = `mitig_LBF_biogasline$TIME`)\r\nmitig_ST_transposed <- pivot_longer(mitig_ST, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"Solar_thermal\") %>% rename(Country = TIME)\r\nmitig_HP_transposed <- pivot_longer(mitig_HP, cols = starts_with(\"2\"), names_to = \"Year\", values_to = \"Heat_pumps\") %>% rename(Country = `mitig_HP_aerothermal$TIME`)\r\n\r\n\r\n\r\nAll transposed datasets were merged into 1 consolidated dataset using the function left_join() where the greenhouse gas emission dataset will be the primary x dataset for joining to ensure all countries included have the emission data available.\r\n\r\n\r\nGHGproj_data <- left_join(dep_GHG_transposed, dep_CO2_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., dep_CH4_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., dep_NO2_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., driver_GDP_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., driver_FEI_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., driver_FM_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., driver_CI_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., mitig_RES_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., mitig_ET_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., mitig_LBF_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., mitig_ST_transposed, by = c(\"Year\", \"Country\")) %>% \r\n  left_join(., mitig_HP_transposed, by = c(\"Year\", \"Country\"))\r\n\r\n\r\n\r\nConsolidated tibble dataframe is exported as a csv file for subsequent analyses.\r\n\r\n\r\nwrite_csv(GHGproj_data, file = \"data/GHGproj_data.csv\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-04-08T02:33:03+08:00",
    "input_file": "data-preparation.utf8.md"
  },
  {
    "path": "posts/2021-02-25-proposal/",
    "title": "Project Proposal",
    "description": "Exploring the relationship of drivers and mitigation measures with greenhouse gas emissions for European Union countries through exploratory data analysis and advanced statistical techniques namely Ordinary Least Square (OLS) Regression and Panel Data Regresion",
    "author": [
      {
        "name": "Group 2 (Angeline Jiang, Dylan Wong, Selene Choong)",
        "url": {}
      }
    ],
    "date": "2021-02-25",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nBackground\r\nMotivation\r\nProject Objectives\r\nBroad Data Description\r\nProposed Scope and Methodology\r\nStoryboard & Visualization Features\r\n(A) Exploratory Data Analysis (EDA) methods in R\r\n(B) Analysis of Cross-Sectional Data through Ordinary Least Square Regression in R\r\n(C) Analysis of Longitudinal Data through Panel Data Regression in R\r\nProposed R Packages\r\nTeam Members\r\nReferences\r\n\r\n\r\nh1, h2, h3 {\r\ntext-align: left\r\n}\r\nbody {\r\ntext-align: justify}\r\nBackground\r\nGlobal warming is expected to result in a rise of the average global temperature between 1.1 to 6.4 degree celsius over the century, if there are no interventions taken to reduce emissions of greenhouse gases. Greenhouse gases are contributed by multiple drivers which include economic activities such as electricity production, transportation and waste generation. Carbon dioxide is the primary greenhouse gas emitted through human activities.\r\nIn December 2020, the European Union (EU) leaders committed to an ambitious goal of reducing greenhouse gases by 55% by 2030 to tackle climate change. The EU is currently the world’s third biggest emitter of greenhouse gases. Measures, such as emission taxes and use of renewable energy sources, were introduced to mitigate the greenhouse gas emissions, especially carbon dioxide emissions.\r\nMotivation\r\nA large amount of climate change related statistics are available on Eurostat, with data across multiple domains such as environmental, social and economic statistics. Monitoring of the reduction of greenhouse gas emissions can be performed and is essential for tracking EU’s progress towards achieving its 2030 goal. Analysis of the impacts of the drivers and mitigation using the available statistics also allowed for insights on the determinants of the greenhouse gas emissions for the EU countries.\r\nProject Objectives\r\nThe project aims to deliver an R-Shiny app that provides interactive user interface design to:\r\nUnderstand the correlation of factors affecting greenhouse gas emissions\r\nFurther analyse the difference in greenhouse gas emissions by country and time period\r\nIdentify important factors which contributes to greenhouse gas emissions from cross-sectional view using Ordinary Least Square regression and from panel data view using Panel data regression\r\nBroad Data Description\r\nStatistics from Eurostat covering a wide range of domains are used in this R Shiny Application. For our project, we will focus on datasets under greenhouse gas emissions, drivers and mitigation for all EU countries.\r\nProposed Scope and Methodology\r\nAnalysis of Eurostat greenhouse emission dataset with background research\r\nExploratory Data Analysis (EDA) methods in R\r\nAnalysis of Ordinary Least Square regression in R\r\nAnalysis of Panel data regression in R\r\nDevelopment of validating checks and model selection in R for both Ordinary Least Square and Panel regression\r\nR-Shiny app development for user interactivity\r\nA generalized development timeframe for this project is shown below:\r\n\r\n\r\n\r\nStoryboard & Visualization Features\r\n(A) Exploratory Data Analysis (EDA) methods in R\r\nThe proposed layout of the R Shiny app consists of 3 main tabs in the tab panel\r\n\r\nUnder the EDA tab, there will be another tab panel comprising of 4 tabs shown below:\r\nData\r\nProposed Visualisation\r\nGreenhouse Gases Emission\r\n\r\nGreen Energy Production\r\n\r\nCorrelation Plot of Drivers and Mitigation\r\n\r\nScatter Plot for Drivers and Mitigation\r\n\r\n(B) Analysis of Cross-Sectional Data through Ordinary Least Square Regression in R\r\nThe following shows the proposed first module under OLS regression where users can explore different methods to determine the set of independent variables for their model. Proposed type of visualization and rationales are as follow:\r\n\r\n\r\n\r\nThereafter, users will input their preferred dependent and independent variables to generate the regression estimations. At the same time, a series of validation/assumption checks will be in place for the users to determine if the chosen model is appropriate.\r\n\r\n\r\n\r\n(C) Analysis of Longitudinal Data through Panel Data Regression in R\r\nThe Panel Data Regression module allows users to explore different time periods, countries and set of independent variables to run both the fixed effect and random effect model. The following shows the proposed layout for the module, where the selection of the relevant specifications is on the left panel and the visualisation along with the statistical output will be displayed on the right area.\r\n\r\n\r\n\r\nEvaluation of Model Fit Assessment using the proposed list of tests below will also be shown.\r\nTest of poolability using Chow test\r\nTests for individual and time effects using Lagrange multiplier test\r\nTest for correlation between unobserved effects and the regressors using Hausman-type test\r\nAdditional validation tests will also be performed to assess if there is any violation of assumptions. The list of validation tests for the panel models include:\r\nTest for normality using Residual Plots\r\nTest for serial correlation using Unobserved Effect Test, Locally Robust Test and Breusch-Godfrey/Wooldridge Test\r\nTest for heteroscedasticity using Breusch-Pagan Test and Residual vs Fitted Value Plot\r\nProposed R Packages\r\nData Preparation\r\ntidyverse: https://www.tidyverse.org\r\nExploratory data analysis\r\nggplot2: https://cran.r-project.org/web/packages/ggplot2\r\nExPanDaR: https://cran.r-project.org/web/packages/ExPanDaR\r\nggstatsplot: https://cran.r-project.org/web/packages/ggstatsplot\r\nplotly: https://cran.r-project.org/web/packages/plotly\r\nOrdinary Least Square regression\r\nolsrr: https://cran.r-project.org/web/packages/olsrr/index.html\r\njtools: https://cran.r-project.org/web/packages/jtools/index.html\r\nggstatsplot: https://cran.r-project.org/web/packages/ggstatsplot/index.html\r\nggstance: https://cran.r-project.org/web/packages/ggstance/index.html\r\nPanel data regression\r\nplm: https://cran.r-project.org/web/packages/plm\r\nstargazer: https://cran.r-project.org/web/packages/stargazer\r\ntseries: https://cran.r-project.org/web/packages/tseries\r\nBuilding Shiny App\r\nshiny: https://shiny.rstudio.com\r\nshinythemes: https://cran.r-project.org/web/packages/shinythemes\r\nshinyWidgets: https://cran.r-project.org/web/packages/shinyWidgets\r\nRColorBrewer: https://cran.r-project.org/web/packages/RColorBrewer\r\nTeam Members\r\nChoong Shi Lian Selene\r\nJiang Weiling Angeline\r\nWong Wei Sheng Dylan\r\nReferences\r\nClimate change: EU leaders set 55% target for CO2 emissions cut\r\nCombating climate change: Fact sheet\r\nOverview of Greenhouse Cases: Carbon Dioxide\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-25-proposal/./image/timeline.png",
    "last_modified": "2021-04-25T14:51:54+08:00",
    "input_file": "proposal.utf8.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Visual Analytics Project",
    "description": "Welcome to our new blog, Visual Analytics Project. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Choong Shi Lian Selene,Jiang Weiling Angeline, Wong Wei Sheng Dylan",
        "url": {}
      }
    ],
    "date": "2021-02-24",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-03-19T23:28:08+08:00",
    "input_file": "welcome.utf8.md"
  }
]
